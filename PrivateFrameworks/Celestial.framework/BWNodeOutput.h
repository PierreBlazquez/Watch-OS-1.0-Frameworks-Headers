//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class BWFormat, BWFormatRequirements, BWNode, BWNodeConnection, BWPixelBufferPool, BWVideoFormat, NSString;

@interface BWNodeOutput : NSObject
{
    NSString *_name;
    id <BWNodeOutputConsumer> _consumer;
    BOOL _consumerIsANodeConnection;
    BOOL _mediaTypeIsVideo;
    BWFormatRequirements *_formatRequirements;
    BWFormat *_format;
    long long _configurationID;
    BWPixelBufferPool *_preparedPixelBufferPool;
    unsigned long _preparedBufferPoolSize;
    BWPixelBufferPool *_livePixelBufferPool;
    unsigned long _livePixelBufferPoolSize;
    unsigned long _mediaType;
    BWNode *_node;
    BOOL _providesPixelBufferPool;
    int _passthroughMode;
    int _indexOfInputWhichDrivesThisOutput;
    unsigned long _retainedBufferCount;
    unsigned long _owningNodeRetainedBufferCount;
    float _maxSampleDataOutputRate;
    BOOL _dropsSampleBuffersWithUnexpectedPTS;
    BWFormat *_liveFormat;
    long long _liveConfigurationID;
    BOOL _discardsSampleData;
    unsigned int _numberOfBuffersEmitted;
    unsigned int _numberOfBuffersDropped;
    CDStruct_1b6d18a9 _lastValidPTS;
    CDStruct_1b6d18a9 _lastEmittedPTS;
}

+ (void)initialize;
@property(readonly, nonatomic) unsigned long mediaType; // @synthesize mediaType=_mediaType;
@property(nonatomic) id <BWNodeOutputConsumer> consumer;
@property(copy, nonatomic) BWFormat *format;
@property(readonly, nonatomic) unsigned int numberOfBuffersEmitted; // @synthesize numberOfBuffersEmitted=_numberOfBuffersEmitted;
@property(nonatomic) BOOL discardsSampleData; // @synthesize discardsSampleData=_discardsSampleData;
@property(nonatomic) BOOL dropsSampleBuffersWithUnexpectedPTS; // @synthesize dropsSampleBuffersWithUnexpectedPTS=_dropsSampleBuffersWithUnexpectedPTS;
@property(nonatomic) float maxSampleDataOutputRate; // @synthesize maxSampleDataOutputRate=_maxSampleDataOutputRate;
@property(nonatomic) unsigned long owningNodeRetainedBufferCount; // @synthesize owningNodeRetainedBufferCount=_owningNodeRetainedBufferCount;
@property(nonatomic) int indexOfInputWhichDrivesThisOutput; // @synthesize indexOfInputWhichDrivesThisOutput=_indexOfInputWhichDrivesThisOutput;
@property(readonly, nonatomic) BWPixelBufferPool *preparedPixelBufferPool; // @synthesize preparedPixelBufferPool=_preparedPixelBufferPool;
@property(nonatomic) BOOL providesPixelBufferPool; // @synthesize providesPixelBufferPool=_providesPixelBufferPool;
- (void)emitDroppedSample:(id)arg1;
- (void)emitNodeError:(id)arg1;
@property(readonly, nonatomic) BWPixelBufferPool *livePixelBufferPool;
- (void)prepareForConfiguredFormatToBecomeLive;
- (void)setPreparedSharedPixelBufferPool:(id)arg1;
@property(nonatomic) BOOL buffersOriginateUpstream;
- (void)setNodePreparedPixelBufferPool:(id)arg1;
- (BOOL)_emitMessage:(id)arg1;
- (id)_poolName;
@property(readonly, nonatomic) unsigned int numberOfBuffersDropped; // @synthesize numberOfBuffersDropped=_numberOfBuffersDropped;
@property(readonly, nonatomic) long long liveConfigurationID; // @synthesize liveConfigurationID=_liveConfigurationID;
@property(retain, nonatomic) BWFormat *liveFormat; // @synthesize liveFormat=_liveFormat;
@property(nonatomic) unsigned long retainedBufferCount; // @synthesize retainedBufferCount=_retainedBufferCount;
@property(nonatomic) int passthroughMode; // @synthesize passthroughMode=_passthroughMode;
@property(copy, nonatomic) BWFormatRequirements *formatRequirements;
@property(readonly, nonatomic) BWVideoFormat *videoFormat;
- (void)emitSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)markEndOfLiveOutput;
- (void)makeConfiguredFormatLive;
- (id)initWithMediaType:(unsigned long)arg1 node:(id)arg2;
@property(readonly, nonatomic) BWNodeConnection *connection;
@property(readonly, nonatomic) BWNode *node; // @synthesize node=_node;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void)invalidate;
- (id)description;
- (void)dealloc;
@property(nonatomic) long long configurationID; // @synthesize configurationID=_configurationID;

@end

