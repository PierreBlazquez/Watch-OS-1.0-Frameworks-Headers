//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIView.h"

#import "ORBTapGestureRecognizerDelegate.h"
#import "PUICCrownInputSequencerDelegate.h"
#import "UIGestureRecognizerDelegate.h"

@class NSString, PUICAnimatedEmoji, PUICAnimatedEmojiChooser, PUICAnimatedImageView, PUICClientSideAnimation, PUICCrownInputSequencer, PUICDelayedBlock, PUICEmojiSelectionView, PUICImageSequenceView, _JitterProofer;

@interface PUICAnimatedEmojiView : UIView <ORBTapGestureRecognizerDelegate, PUICCrownInputSequencerDelegate, UIGestureRecognizerDelegate>
{
    PUICAnimatedEmojiChooser *_animatedEmojiChooser;
    float _initialPanningPercentage;
    int _panningType;
    struct CGPoint _panReferencePoint;
    _JitterProofer *_jitterProofer;
    PUICAnimatedImageView *_animatedImageSequenceView;
    PUICImageSequenceView *_imageSequenceView;
    double _panStartTime;
    BOOL _needsPanReferencePointReset;
    BOOL _panGestureActive;
    BOOL _orbLatchRecognized;
    BOOL _orbGestureActive;
    PUICClientSideAnimation *_imageSequenceAnimation;
    PUICCrownInputSequencer *_crownInputSequencer;
    PUICDelayedBlock *_endCrownInteractionBlock;
    BOOL _holdActivation;
    PUICAnimatedEmoji *_animatedEmoji;
    PUICAnimatedEmoji *_selectedAnimatedEmoji;
    PUICEmojiSelectionView *_selectionView;
    CDUnknownBlockType _didSelectAnimatedEmojiType;
    struct CGSize _preferredContentSize;
    struct CGSize _preferredAnimatedImageSize;
    struct CGPoint _animatedImageOffset;
}

@property(copy, nonatomic) CDUnknownBlockType didSelectAnimatedEmojiType; // @synthesize didSelectAnimatedEmojiType=_didSelectAnimatedEmojiType;
@property(nonatomic) struct CGPoint animatedImageOffset; // @synthesize animatedImageOffset=_animatedImageOffset;
@property(nonatomic) struct CGSize preferredAnimatedImageSize; // @synthesize preferredAnimatedImageSize=_preferredAnimatedImageSize;
@property(readonly, nonatomic) PUICAnimatedEmoji *selectedAnimatedEmoji; // @synthesize selectedAnimatedEmoji=_selectedAnimatedEmoji;
- (void)_updateCrownOffsetAndIndicator;
@property(retain, nonatomic) PUICAnimatedEmoji *animatedEmoji; // @synthesize animatedEmoji=_animatedEmoji;
- (void)_updateAnimatedEmojiChooserIfNeededWithPoint:(struct CGPoint)arg1 velocity:(struct CGPoint)arg2;
- (void)_setAnimatedEmojiChooserIfNeededWithPoint:(struct CGPoint)arg1;
- (void)_imageSequenceAnimationFinished:(BOOL)arg1;
- (void)_showScrollIndicator;
- (void)_animateImageSequenceView:(id)arg1 fromIndex:(unsigned int)arg2 toIndex:(unsigned int)arg3 duration:(double)arg4;
- (void)_hideScrollIndicator;
- (void)_endCrownInteraction;
- (void)_hideScrollIndicatorAnimated:(BOOL)arg1;
- (void)_updateAnimatedEmojiChooserIfNeededForCrownOffset:(float)arg1;
- (void)_setAnimatedEmojiChooserIfNeededForCrownInteraction;
- (void)_resetEndCrownInteractionBlockWithDelay:(double)arg1;
- (void)_hideScrollIndicatorAfterDelay:(double)arg1;
- (void)_showScrollIndicatorAnimated:(BOOL)arg1;
- (BOOL)_reallyBecomeFirstResponder;
@property(nonatomic, getter=isHoldingActivation) BOOL holdActivation; // @synthesize holdActivation=_holdActivation;
- (id)_assetPathForAnimatedEmojiType:(int)arg1;
- (void)_handleOrbTapGesture:(id)arg1;
- (void)crownInputSequencer:(id)arg1 offsetDidReachBoundary:(int)arg2;
- (void)crownInputSequencerOffsetDidChange:(id)arg1;
- (void)flashScrollIndicator;
@property(nonatomic) __weak PUICEmojiSelectionView *selectionView; // @synthesize selectionView=_selectionView;
- (void)_handlePanGesture:(id)arg1;
- (void).cxx_destruct;
- (void)activate;
@property(nonatomic) struct CGSize preferredContentSize; // @synthesize preferredContentSize=_preferredContentSize;
- (void)deactivate;
- (BOOL)canBecomeFirstResponder;
- (void)_wheelChangedWithEvent:(id)arg1;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

