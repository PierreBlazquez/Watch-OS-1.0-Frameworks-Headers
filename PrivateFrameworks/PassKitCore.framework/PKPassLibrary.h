//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "PKPassLibraryExportedInterface.h"

@class NSXPCConnection, PKAsyncCache, PKPassLibraryExportedProxy;

@interface PKPassLibrary : NSObject <PKPassLibraryExportedInterface>
{
    NSXPCConnection *_connection;
    PKAsyncCache *_libraryCache;
    PKPassLibraryExportedProxy *_exportedProxy;
    id <PKPassLibraryDelegate> _delegate;
}

+ (BOOL)isPaymentPassActivationAvailable;
+ (void)_tearDownPassLibraryConnection:(id)arg1 exportedProxy:(id)arg2;
+ (BOOL)isPassLibraryAvailable;
- (id)diffForPassBulletinWithRecordID:(id)arg1;
- (void)noteAccountDeleted;
- (void)noteAccountChanged;
- (void)removePassesOfType:(unsigned int)arg1;
- (BOOL)migrateData;
- (void)fetchImageSetForUniqueID:(id)arg1 ofType:(int)arg2 displayProfile:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)fetchContentForUniqueID:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)removePass:(id)arg1;
- (void)requestUpdateOfObjectWithUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)ingestPassData:(id)arg1 settings:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)activatePaymentPass:(id)arg1 withActivationData:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)activatePaymentPass:(id)arg1 withActivationCode:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)addPasses:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)archiveForObjectWithUniqueID:(id)arg1;
- (BOOL)replacePassWithPass:(id)arg1;
- (BOOL)containsPass:(id)arg1;
- (void)getPassesAndCatalogOfPassTypes:(unsigned int)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)getPassesAndCatalog:(BOOL)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)getRouteRelevantPassesFromLocation:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (BOOL)isRemovingPassesOfType:(unsigned int)arg1;
- (BOOL)canAddPassOfType:(unsigned int)arg1;
- (BOOL)hasPassesOfType:(unsigned int)arg1;
- (id)passWithPassTypeIdentifier:(id)arg1 serialNumber:(id)arg2;
- (id)passWithUniqueID:(id)arg1;
- (id)passesOfType:(unsigned int)arg1;
- (id)passes;
- (void)_sendSuspended;
- (void)_sendResumed;
- (void)_postLibraryChangeWithUserInfo:(id)arg1;
- (BOOL)_isPaymentPassActivationAvailable;
- (void)removePassWithUniqueID:(id)arg1;
- (void)_getArchivedObjectWithUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getContainmentStatusAndSettingsForPass:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)_getPassesAndCatalogOfPassTypes:(unsigned int)arg1 limitResults:(BOOL)arg2 withRetries:(unsigned int)arg3 handler:(CDUnknownBlockType)arg4;
- (void)_applyDataAccessorToObjects:(id)arg1;
- (CDUnknownBlockType)_errorHandlerWithCompletion:(CDUnknownBlockType)arg1;
- (void)_applyDataAccessorToObject:(id)arg1;
- (CDUnknownBlockType)_errorHandlerWithSemaphore:(id)arg1;
- (void)_getPassWithUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_passesOfType:(unsigned int)arg1 withRetries:(unsigned int)arg2;
- (id)_passesWithRetries:(unsigned int)arg1;
- (void)_unregisterForApplicationLifeCycleNotifications;
- (void)_tearDownPassLibraryConnection;
- (void)_establishPassLibraryConnection;
- (void)_registerForApplicationLifeCycleNotifications;
- (void)passRemoved:(id)arg1;
- (void)passUpdated:(id)arg1;
- (void)passAdded:(id)arg1;
- (void)removingPassesOfType:(unsigned int)arg1 didFinishWithSuccess:(BOOL)arg2;
- (void)removingPassesOfType:(unsigned int)arg1 didUpdateWithProgress:(double)arg2;
- (void)catalogChanged:(id)arg1 withNewPasses:(id)arg2;
- (void)hasInAppPaymentPassesForNetworks:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)inAppPaymentPassesForNetworks:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)fetchCurrentRelevantPassInfo:(CDUnknownBlockType)arg1;
- (void)fetchHasCandidatePasses:(CDUnknownBlockType)arg1;
- (void)recomputeRelevantPassesWithSearchMode:(int)arg1;
- (void)logDelayExitReasons;
- (void)sendPassbookUIServiceLaunched;
- (void)sendUserEditedCatalog:(id)arg1;
- (void)shuffleGroups:(int)arg1;
- (void)introduceDatabaseIntegrityProblem;
- (void)addFakeBulletin;
- (void)nukeDatabaseAndExit;
- (void)noteObjectSharedWithUniqueID:(id)arg1;
- (void)updateSettings:(int)arg1 forObjectWithUniqueID:(id)arg2;
@property(nonatomic) id <PKPassLibraryDelegate> delegate; // @synthesize delegate=_delegate;
- (id)init;
- (void)dealloc;

@end

