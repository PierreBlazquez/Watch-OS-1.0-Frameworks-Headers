//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct _NSRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct map<IndexPath, NPTOGridViewCell *, std::__1::less<IndexPath>, std::__1::allocator<std::__1::pair<const IndexPath, NPTOGridViewCell *>>> {
    struct __tree<std::__1::__value_type<IndexPath, NPTOGridViewCell *>, std::__1::__map_value_compare<IndexPath, std::__1::__value_type<IndexPath, NPTOGridViewCell *>, std::__1::less<IndexPath>, true>, std::__1::allocator<std::__1::__value_type<IndexPath, NPTOGridViewCell *>>> {
        struct __tree_node<std::__1::__value_type<IndexPath, NPTOGridViewCell *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<IndexPath, NPTOGridViewCell *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *__left_;
            } __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<IndexPath, std::__1::__value_type<IndexPath, NPTOGridViewCell *>, std::__1::less<IndexPath>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int col;
    unsigned int row;
} CDStruct_8dbd68cd;

