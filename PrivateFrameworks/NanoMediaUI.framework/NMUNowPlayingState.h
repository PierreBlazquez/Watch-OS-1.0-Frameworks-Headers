//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSData, NSDate, NSNumber, NSString, UIImage;

@interface NMUNowPlayingState : NSObject
{
    UIImage *_artworkImage;
    BOOL _firstPartyMusicApp;
    BOOL _nextTrackCommandEnabled;
    BOOL _previousTrackCommandEnabled;
    BOOL _explicitTrack;
    BOOL _advertisement;
    BOOL _alwaysLive;
    BOOL _repeatModeCommandSupported;
    BOOL _shuffleModeCommandSupported;
    BOOL _likeCommandSupported;
    BOOL _likeCommandEnabled;
    BOOL _likedActive;
    BOOL _banCommandSupported;
    BOOL _banCommandEnabled;
    BOOL _bannedActive;
    BOOL _bookmarkCommandSupported;
    BOOL _bookmarkCommandEnabled;
    BOOL _bookmarkedActive;
    BOOL _usingLegacySupportedCommandsFallback;
    NSDate *_timestamp;
    float _playbackRate;
    unsigned int _playbackState;
    NSNumber *_itemPersistentID;
    NSNumber *_itemCompanionPersistentID;
    NSNumber *_itemAlbumPersistentID;
    NSString *_title;
    NSString *_artist;
    NSString *_album;
    NSString *_radioStationName;
    NSNumber *_radioStationIdentifier;
    NSString *_radioStationHash;
    NSData *_artworkImageData;
    NSArray *_transportControls;
    NSString *_applicationDisplayName;
    NSString *_applicationBundleIdentifier;
    int _repeatMode;
    int _shuffleMode;
    NSString *_localizedLikeTitle;
    NSString *_localizedBanTitle;
    NSString *_localizedBookmarkTitle;
    double _duration;
    double _elapsedTimeAtLastUpdate;
    double _fastForwardTimeInterval;
    double _rewindTimeInterval;
}

@property(readonly, nonatomic, getter=isPlaying) BOOL playing;
@property(nonatomic) unsigned int playbackState; // @synthesize playbackState=_playbackState;
@property(copy, nonatomic) NSString *album; // @synthesize album=_album;
@property(nonatomic, getter=isUsingLegacySupportedCommandsFallback) BOOL usingLegacySupportedCommandsFallback; // @synthesize usingLegacySupportedCommandsFallback=_usingLegacySupportedCommandsFallback;
@property(copy, nonatomic) NSString *localizedBookmarkTitle; // @synthesize localizedBookmarkTitle=_localizedBookmarkTitle;
@property(nonatomic, getter=isBookmarkCommandSupported) BOOL bookmarkCommandSupported; // @synthesize bookmarkCommandSupported=_bookmarkCommandSupported;
@property(copy, nonatomic) NSString *localizedBanTitle; // @synthesize localizedBanTitle=_localizedBanTitle;
@property(nonatomic, getter=isBanCommandSupported) BOOL banCommandSupported; // @synthesize banCommandSupported=_banCommandSupported;
@property(copy, nonatomic) NSString *localizedLikeTitle; // @synthesize localizedLikeTitle=_localizedLikeTitle;
@property(nonatomic, getter=isLikeCommandSupported) BOOL likeCommandSupported; // @synthesize likeCommandSupported=_likeCommandSupported;
@property(nonatomic, getter=isShuffleModeCommandSupported) BOOL shuffleModeCommandSupported; // @synthesize shuffleModeCommandSupported=_shuffleModeCommandSupported;
@property(nonatomic, getter=isRepeatModeCommandSupported) BOOL repeatModeCommandSupported; // @synthesize repeatModeCommandSupported=_repeatModeCommandSupported;
@property(copy, nonatomic) NSArray *transportControls; // @synthesize transportControls=_transportControls;
@property(retain, nonatomic) NSData *artworkImageData; // @synthesize artworkImageData=_artworkImageData;
@property(nonatomic, getter=isAdvertisement) BOOL advertisement; // @synthesize advertisement=_advertisement;
@property(copy, nonatomic) NSNumber *itemAlbumPersistentID; // @synthesize itemAlbumPersistentID=_itemAlbumPersistentID;
@property(nonatomic) double elapsedTimeAtLastUpdate; // @synthesize elapsedTimeAtLastUpdate=_elapsedTimeAtLastUpdate;
- (void)applyNowPlayingInfo:(id)arg1;
@property(nonatomic) double rewindTimeInterval; // @synthesize rewindTimeInterval=_rewindTimeInterval;
@property(nonatomic) double fastForwardTimeInterval; // @synthesize fastForwardTimeInterval=_fastForwardTimeInterval;
@property(nonatomic, getter=isBookmarkedActive) BOOL bookmarkedActive; // @synthesize bookmarkedActive=_bookmarkedActive;
@property(nonatomic, getter=isBookmarkCommandEnabled) BOOL bookmarkCommandEnabled; // @synthesize bookmarkCommandEnabled=_bookmarkCommandEnabled;
@property(nonatomic, getter=isBannedActive) BOOL bannedActive; // @synthesize bannedActive=_bannedActive;
@property(nonatomic, getter=isBanCommandEnabled) BOOL banCommandEnabled; // @synthesize banCommandEnabled=_banCommandEnabled;
@property(nonatomic, getter=isLikedActive) BOOL likedActive; // @synthesize likedActive=_likedActive;
@property(nonatomic, getter=isLikeCommandEnabled) BOOL likeCommandEnabled; // @synthesize likeCommandEnabled=_likeCommandEnabled;
@property(nonatomic, getter=isFirstPartyMusicApp) BOOL firstPartyMusicApp;
@property(copy, nonatomic) NSString *radioStationHash; // @synthesize radioStationHash=_radioStationHash;
@property(copy, nonatomic) NSNumber *radioStationIdentifier; // @synthesize radioStationIdentifier=_radioStationIdentifier;
@property(copy, nonatomic) NSString *radioStationName; // @synthesize radioStationName=_radioStationName;
@property(copy, nonatomic) NSNumber *itemCompanionPersistentID; // @synthesize itemCompanionPersistentID=_itemCompanionPersistentID;
- (id)_transportControlsForCurrentState;
- (BOOL)_nowPlayingInfoIncludesLegacySupportedCommandsInfo:(id)arg1;
- (BOOL)_updateRewindTimeIntervalIfNecessary:(double)arg1;
- (BOOL)_updateFastForwardTimeIntervalIfNecessary:(double)arg1;
- (BOOL)_updateBookmarkedActiveIfNecessary:(BOOL)arg1;
- (BOOL)_updateBookmarkCommandEnabledIfNecessary:(BOOL)arg1;
- (BOOL)_updateBookmarkCommandSupportedIfNecessary:(BOOL)arg1;
- (BOOL)_updateBannedActiveIfNecessary:(BOOL)arg1;
- (BOOL)_updateBanCommandEnabledIfNecessary:(BOOL)arg1;
- (BOOL)_updateBanCommandSupportedIfNecessary:(BOOL)arg1;
- (BOOL)_updateLikedActiveIfNecessary:(BOOL)arg1;
- (BOOL)_updateLikeCommandEnabledIfNecessary:(BOOL)arg1;
- (BOOL)_updateLikeCommandSupportedIfNecessary:(BOOL)arg1;
- (BOOL)_updateFirstPartyMusicAppIfNecessary:(BOOL)arg1;
- (BOOL)_updateArtworkImageDataIfNecessary:(id)arg1;
- (BOOL)_updateAlwaysLiveIfNecessary:(BOOL)arg1;
- (BOOL)_updateAdvertisementIfNecessary:(BOOL)arg1;
- (BOOL)_updateRadioStationHashIfNecessary:(id)arg1;
- (BOOL)_updateRadioStationIdentifierIfNecessary:(id)arg1;
- (BOOL)_updateRadioStationNameIfNecessary:(id)arg1;
- (BOOL)_updateExplicitTrackIfNecessary:(BOOL)arg1;
- (BOOL)_updateAlbumIfNecessary:(id)arg1;
- (BOOL)_updateArtistIfNecessary:(id)arg1;
- (BOOL)_updateTitleIfNecessary:(id)arg1;
- (BOOL)_updateItemAlbumPersistentIDIfNecessary:(id)arg1;
- (BOOL)_updateItemCompanionPersistentIDIfNecessary:(id)arg1;
- (BOOL)_updateItemPersistentIDIfNecessary:(id)arg1;
@property(copy, nonatomic) NSString *applicationDisplayName; // @synthesize applicationDisplayName=_applicationDisplayName;
@property(copy, nonatomic) NSString *applicationBundleIdentifier; // @synthesize applicationBundleIdentifier=_applicationBundleIdentifier;
- (BOOL)applySupportedCommands:(id)arg1;
- (void)applyNowPlayingInfo:(id)arg1 generalInfoChanged:(char *)arg2 elapsedTimeChanged:(char *)arg3 playbackStateChanged:(char *)arg4 applicationInfoChanged:(char *)arg5 supportedCommandsChanged:(char *)arg6;
@property(copy, nonatomic) NSNumber *itemPersistentID; // @synthesize itemPersistentID=_itemPersistentID;
@property(nonatomic, getter=isAlwaysLive) BOOL alwaysLive; // @synthesize alwaysLive=_alwaysLive;
@property(nonatomic, getter=isExplicitTrack) BOOL explicitTrack; // @synthesize explicitTrack=_explicitTrack;
@property(readonly, nonatomic) UIImage *artworkImage;
@property(copy, nonatomic) NSString *artist; // @synthesize artist=_artist;
@property(readonly, nonatomic) double elapsedTime;
- (void).cxx_destruct;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic) double duration; // @synthesize duration=_duration;
- (id)description;
- (id)init;
@property(nonatomic) int shuffleMode; // @synthesize shuffleMode=_shuffleMode;
@property(nonatomic) float playbackRate; // @synthesize playbackRate=_playbackRate;
@property(nonatomic) int repeatMode; // @synthesize repeatMode=_repeatMode;

@end

