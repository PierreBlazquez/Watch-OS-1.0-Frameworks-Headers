//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NACVolumeController.h"

@class NACEventThrottler, NACXPCClient, NSObject<OS_dispatch_source>, NSString;

@interface NACVolumeControllerProxy : NSObject <NACVolumeController>
{
    NACEventThrottler *_volumeThrottler;
    NACEventThrottler *_hapticThrottler;
    NSObject<OS_dispatch_source> *_setVolumeTimer;
    NSObject<OS_dispatch_source> *_setHapticTimer;
    NSString *_category;
    NACXPCClient *_xpcClient;
    BOOL _isObserving;
    float _lastReceivedVolumeValue;
    float _lastRecievedHapticIntensity;
    BOOL _volumeControlAvailable;
    BOOL _volumeWarningEnabled;
    BOOL _muted;
    BOOL _systemMuted;
    float _volumeValue;
    id <NACVolumeControllerDelegate> _delegate;
    float _EUVolumeLimit;
    float _hapticIntensity;
}

- (void)_applicationWillResignActiveNotification:(id)arg1;
@property(readonly, nonatomic, getter=isVolumeControlAvailable) BOOL volumeControlAvailable; // @synthesize volumeControlAvailable=_volumeControlAvailable;
@property(readonly, nonatomic, getter=isVolumeWarningEnabled) BOOL volumeWarningEnabled; // @synthesize volumeWarningEnabled=_volumeWarningEnabled;
- (void)_volumeValueDidChange;
@property(nonatomic, getter=isSystemMuted) BOOL systemMuted; // @synthesize systemMuted=_systemMuted;
@property(nonatomic) float hapticIntensity; // @synthesize hapticIntensity=_hapticIntensity;
- (void)setVolumeValue:(float)arg1 muted:(BOOL)arg2 overrideEULimit:(BOOL)arg3;
- (void)_notifyDelegateSystemMutedStateChanged;
- (void)_cancelSetHapticTimer;
- (void)_notifyDelegateHapticChanged;
- (void)_hapticTimeout;
- (void)_notifyDelegateVolumeChanged;
- (id)_scheduleTimeoutWithBlock:(CDUnknownBlockType)arg1;
- (void)_volumeTimout;
- (void)_cancelSetVolumeTimer;
- (void)_EUVolumeLimitDidChange;
- (void)_volumeWarningDidChange;
- (void)_hapticIntensityDidChange;
- (void)_systemMutedStateDidChange;
- (void)_mutedStateDidChange;
- (void)_volumeControlAvailabilityDidChange;
- (void)_setHapticIntensity:(id)arg1;
- (void)_setVolumeValue:(id)arg1;
- (void)endObservingVolume;
- (void)beginObservingVolume;
- (void).cxx_destruct;
@property(nonatomic) __weak id <NACVolumeControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)init;
- (void)dealloc;
@property(readonly, nonatomic) float volumeValue; // @synthesize volumeValue=_volumeValue;
- (void)_applicationDidBecomeActiveNotification:(id)arg1;
- (id)initWithAudioCategory:(id)arg1;
@property(readonly, nonatomic) float EUVolumeLimit; // @synthesize EUVolumeLimit=_EUVolumeLimit;
- (void)setMuted:(BOOL)arg1;
- (void)setVolumeValue:(float)arg1;
@property(readonly, nonatomic, getter=isMuted) BOOL muted; // @synthesize muted=_muted;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

