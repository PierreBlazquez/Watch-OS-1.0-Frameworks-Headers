//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSData, NSDictionary, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>;

@interface NPKGizmoDatabase : NSObject
{
    struct sqlite3 *_database;
    struct sqlite3_stmt *_deleteStatement;
    struct sqlite3_stmt *_insertStatement;
    struct sqlite3_stmt *_insertDiffStatement;
    struct sqlite3_stmt *_selectPassDataStatement;
    struct sqlite3_stmt *_selectPassDiffStatement;
    struct sqlite3_stmt *_updateDeletePendingStatment;
    NSObject<OS_dispatch_queue> *_dbQueue;
    BOOL _isInTransaction;
    NSMutableDictionary *_manifest;
    NSMutableArray *_passDescriptions;
    NSData *_libraryHash;
    int _externallyChangedBroadcasts;
    BOOL _observingFirstUnlockNotification;
    BOOL _sendingLocalNotifyDatabaseChanged;
    BOOL _needsMoreLocalNotifyDatabaseChanged;
    BOOL _passDBIsAvailable;
}

+ (int)maxDatabaseVersion;
+ (id)sharedDatabase;
- (id)removePassWithUniqueID:(id)arg1;
- (void)_handleFirstUnlock;
- (void)_handleDatabaseChangedExternally;
- (void)enumerateAllPassesWithBlock:(CDUnknownBlockType)arg1;
- (void)setDeletePending:(BOOL)arg1 forUniqueID:(id)arg2;
- (id)hashForUniqueID:(id)arg1;
- (id)diffForUniqueID:(id)arg1;
- (id)passForUniqueID:(id)arg1;
@property(nonatomic) BOOL passDBIsAvailable; // @synthesize passDBIsAvailable=_passDBIsAvailable;
- (id)nukeAndRebuildDatabaseWithPasses:(id)arg1;
- (void)saveDiff:(id)arg1 forPassWithUniqueID:(id)arg2;
- (id)savePass:(id)arg1;
- (void)_notifyForFirstUnlock;
- (void)_executeSQLQuery:(id)arg1 processResultsBlock:(CDUnknownBlockType)arg2;
- (void)_insertDatabaseVersionRow:(int)arg1;
- (void)_updateDatabaseVersionRow:(int)arg1;
- (int)_databaseVersionExists:(char *)arg1 valid:(char *)arg2;
@property(readonly) struct sqlite3_stmt *updateDeletePendingStatement;
- (id)_diffForUniqueIDLocked:(id)arg1;
@property(readonly) struct sqlite3_stmt *insertDiffStatement;
@property(readonly) struct sqlite3_stmt *selectPassDiffStatement; // @dynamic selectPassDiffStatement;
@property(readonly) struct sqlite3_stmt *selectPassDataStatement; // @dynamic selectPassDataStatement;
@property(readonly) struct sqlite3_stmt *deleteStatement; // @dynamic deleteStatement;
- (id)_passForUniqueIDLocked:(id)arg1;
- (BOOL)_passDBIsAvailableLocked;
- (void)_notifyDatabaseChangedWithNoop:(BOOL)arg1 firstUnlock:(BOOL)arg2;
- (void)_performTransactionWithBlock:(CDUnknownBlockType)arg1;
- (BOOL)_removePassWithUniqueIDLocked:(id)arg1;
- (void)_saveDiffLocked:(id)arg1 forPassWithUniqueID:(id)arg2;
- (void)_notifyDatabaseChangedWithNoop:(BOOL)arg1;
- (void)_notifyDatabaseChangedExternally;
- (id)_libraryHashLocked;
- (void)_savePassLocked:(id)arg1;
- (void)_loadInitialManifestLocked;
- (void)_migrateDatabase:(CDUnknownBlockType)arg1;
- (BOOL)_executeSQL:(id)arg1;
@property(readonly) NSData *libraryHash; // @dynamic libraryHash;
@property(readonly) NSDictionary *manifestHashes; // @dynamic manifestHashes;
@property(readonly) NSArray *passDescriptions;
- (void).cxx_destruct;
- (id)init;
- (void)dealloc;
@property(readonly) struct sqlite3 *database; // @dynamic database;
@property(readonly) struct sqlite3_stmt *insertStatement; // @dynamic insertStatement;

@end

