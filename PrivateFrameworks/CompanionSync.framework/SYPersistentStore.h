//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSDate, NSDictionary, NSError, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSSet, NSString;

@interface SYPersistentStore : NSObject
{
    NSString *_path;
    struct __CFString *_loggingFacility;
    double _timeToLiveCache;
    BOOL _changeTrackingEnabled;
    NSMutableDictionary *_peerSeqnoSets;
    NSObject<OS_dispatch_queue> *_syncQ;
    struct sqlite3 *_db;
    struct sqlite3_stmt *_getInFullSync;
    struct sqlite3_stmt *_getChangeCount;
    struct sqlite3_stmt *_getNextExpireTime;
    struct sqlite3_stmt *_purgeExpiredChanges;
    struct sqlite3_stmt *_insertChange;
    struct sqlite3_stmt *_getFullsyncSent;
    struct sqlite3_stmt *_setFullsyncSent;
    struct sqlite3_stmt *_logSyncComplete;
    struct sqlite3_stmt *_getChangeIDsSinceVersion;
    struct sqlite3_stmt *_getLocalVersion;
    struct sqlite3_stmt *_getOldestVersion;
    struct sqlite3_stmt *_setVectorClock;
    struct sqlite3_stmt *_setPeerSeqNo;
    struct sqlite3_stmt *_getPeerSeqNo;
    struct sqlite3_stmt *_setPeerSeqNoSet;
    struct sqlite3_stmt *_enterFullSync;
    struct sqlite3_stmt *_exitFullSync;
    struct sqlite3_stmt *_getIgnoringSyncID;
    struct sqlite3_stmt *_getCurrentSyncID;
    struct sqlite3_stmt *_getCurrentSyncStartTime;
    struct sqlite3_stmt *_getLastEndedSyncID;
    struct sqlite3_stmt *_getWaitingForSyncID;
    struct sqlite3_stmt *_setWaitingForSyncID;
    struct sqlite3_stmt *_setAllSentForSyncID;
    struct sqlite3_stmt *_getAllSentForCurrentSync;
    struct sqlite3_stmt *_getLastSyncError;
    struct sqlite3_stmt *_setSyncUserInfo;
    struct sqlite3_stmt *_getSyncUserInfo;
    struct sqlite3_stmt *_setSyncIDSOptions;
    struct sqlite3_stmt *_getSyncIDSOptions;
    BOOL _cachedVersionStale;
    NSString *_peerID;
    NSSet *_cachedChangedSyncIDs;
    double _unfinishedSyncTimeout;
    unsigned long long _cachedChangedSyncIDsVersion;
}

@property(nonatomic) double timeToLive;
@property(nonatomic) double unfinishedSyncTimeout; // @synthesize unfinishedSyncTimeout=_unfinishedSyncTimeout;
- (BOOL)logSyncCompletionToRemoteVersion:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long lastSeenRemoteVersion;
@property(readonly, nonatomic) NSError *lastSyncError;
- (BOOL)ignoringFullSyncWithID:(id)arg1;
- (struct sqlite3 *)_dbRef;
@property(retain, nonatomic) NSSet *cachedChangedSyncIDs; // @synthesize cachedChangedSyncIDs=_cachedChangedSyncIDs;
@property(nonatomic) BOOL cachedVersionStale; // @synthesize cachedVersionStale=_cachedVersionStale;
- (unsigned long long)_oldestVersion;
@property(nonatomic) unsigned long long cachedChangedSyncIDsVersion; // @synthesize cachedChangedSyncIDsVersion=_cachedChangedSyncIDsVersion;
- (unsigned long long)_lastSequenceNumberForPeerID_LOCKED:(id)arg1;
- (void)_storeSequenceNumberSet:(id)arg1 forPeerID:(id)arg2;
- (id)_sequenceNumberSetForPeerID:(id)arg1;
- (id)_encodeIndexSet:(id)arg1;
- (id)_decodeIndexSet:(id)arg1;
- (BOOL)_inTransaction:(BOOL)arg1 do:(CDUnknownBlockType)arg2;
- (void)_cacheTTL;
- (void)_fixPeerInfo;
- (void)_convertTimestamps;
- (BOOL)_tableEmpty:(id)arg1;
- (BOOL)_openDBAtPath:(id)arg1;
- (int)_getSchemaVersion;
- (void)changeTrackingToggled:(BOOL)arg1;
@property(nonatomic, getter=isPerformingDeltaSync) BOOL performingDeltaSync;
- (void)sendCompletedForSyncWithID:(id)arg1;
- (BOOL)objectChanged:(id)arg1 sinceVersion:(unsigned long long)arg2;
@property(copy, nonatomic) NSDictionary *fullSyncIDSOptions;
@property(copy, nonatomic) NSDictionary *fullSyncUserInfo;
@property(readonly, nonatomic) unsigned long long currentLocalVersion;
- (BOOL)logChanges:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) BOOL lastSyncFailed;
- (unsigned long long)nextSequenceNumber;
- (BOOL)reassignCurrentSyncID:(id)arg1;
@property(readonly, nonatomic) double durationOfLastFullSync;
@property(readonly, nonatomic) BOOL canStartNewSyncSession;
- (void)enterFullSyncWithID:(id)arg1 ignoring:(BOOL)arg2;
@property(retain, nonatomic) NSString *vectorClockJSON;
- (id)initWithPath:(id)arg1 loggingFacility:(struct __CFString *)arg2 changeTrackingEnabled:(BOOL)arg3;
@property(copy, nonatomic) NSDate *overflowResyncTime;
@property(nonatomic) BOOL completedSync;
- (void)clearAllChanges;
- (void)exitFullSyncWithID:(id)arg1 error:(id)arg2;
@property(readonly, nonatomic) NSString *currentFullSyncID;
@property(copy, nonatomic) NSString *waitingForSyncEndID;
@property(readonly, nonatomic) NSString *lastSyncEndID;
- (void)setLastSequenceNumber:(unsigned long long)arg1 fromPeer:(id)arg2;
@property(copy, nonatomic) NSDate *lastMessageReceived;
- (unsigned long long)lastSequenceNumberForPeerID:(id)arg1;
- (void)resetSequenceNumbersForPeer:(id)arg1;
- (BOOL)sequenceNumberIsDuplicate:(unsigned long long)arg1 forPeer:(id)arg2;
@property(readonly, nonatomic) BOOL currentSyncSendComplete;
@property(readonly, nonatomic) BOOL inFullSync;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned int changeCount;
@property(readonly, nonatomic) NSString *path;
- (void)dealloc;
@property(readonly, nonatomic) NSString *peerID; // @synthesize peerID=_peerID;

@end

