//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSConditionLock, NSMapTable, NSMutableArray, NSString, VMUProcessDescription, VMUTaskMemoryCache;

@interface VMUSampler : NSObject
{
    unsigned int _options;
    int _pid;
    unsigned int _task;
    BOOL _needTaskPortDealloc;
    BOOL _recordThreadStates;
    BOOL _taskIs64Bit;
    NSString *_processName;
    VMUProcessDescription *_processDescription;
    struct _CSTypeRef _symbolicator;
    VMUTaskMemoryCache *_memCache;
    struct sampling_context_t *_samplingContext;
    unsigned int _mainThread;
    NSMapTable *_lastThreadBacktraceMap;
    unsigned int _numberOfCopiedBacktraces;
    unsigned int *_previousThreadList;
    unsigned int _previousThreadCount;
    unsigned int _maxPreviousThreadCount;
    double _tbRate;
    double _tbInterval;
    NSConditionLock *_stateLock;
    double _interval;
    double _timeLimit;
    unsigned int _sampleLimit;
    BOOL _sampling;
    unsigned int _samplingThreadPort;
    unsigned int _numberOfSamples;
    NSMutableArray *_samples;
    BOOL _stacksFixed;
    id _delegate;
    double _timeSpentSamplingWithoutCFI;
    double _timeSpentSamplingWithCFI;
    unsigned int _dispatchThreadSoftLimit;
    unsigned int _dispatchThreadSoftLimitCount;
    unsigned int _dispatchThreadHardLimit;
    unsigned int _dispatchThreadHardLimitCount;
}

+ (id)sampleAllThreadsOfTask:(unsigned int)arg1 symbolicate:(BOOL)arg2;
+ (id)sampleAllThreadsOfTask:(unsigned int)arg1;
+ (id)sampleAllThreadsOfPID:(int)arg1;
+ (void)initialize;
- (double)samplingInterval;
- (void)setSamplingInterval:(double)arg1;
- (void)finalize;
- (void)writeOutput:(id)arg1 append:(BOOL)arg2;
- (id)createOutput;
- (void)forceStop;
- (void)sampleForDuration:(unsigned int)arg1 interval:(unsigned int)arg2;
- (void)preloadSymbols;
- (id)dispatchQueueNameForSerialNumber:(unsigned long long)arg1;
- (id)threadNameForThread:(unsigned int)arg1;
- (void)flushData;
- (struct _CSTypeRef)symbolicator;
- (BOOL)shouldOutputSignature;
- (void)setShouldOutputSignature:(BOOL)arg1;
- (void)setRecordThreadStates:(BOOL)arg1;
- (unsigned int)sampleLimit;
- (void)setSampleLimit:(unsigned int)arg1;
- (id)sampleThread:(unsigned int)arg1;
- (id)initWithPID:(int)arg1 options:(unsigned int)arg2;
- (id)stopSamplingAndReturnCallNode;
- (void)stopSampling;
- (id)dispatchQueueNameForSerialNumber:(unsigned long long)arg1 returnedConcurrentFlag:(char *)arg2 returnedThreadId:(unsigned long long *)arg3;
- (id)threadNameForThread:(unsigned int)arg1 returnedThreadId:(unsigned long long *)arg2 returnedDispatchQueueSerialNum:(unsigned long long *)arg3;
- (void)_runSamplingThread;
- (void)_fixupStacks:(id)arg1;
- (id)initWithTask:(unsigned int)arg1 options:(unsigned int)arg2;
- (id)sampleAllThreadsOnce;
- (id)initWithPID:(int)arg1;
- (void)_makeTimeshare;
- (unsigned int)recordSampleTo:(id)arg1 beginTime:(double)arg2 endTime:(double)arg3 thread:(unsigned int)arg4;
- (void)initializeSamplingContext:(BOOL)arg1;
- (void)_makeHighPriority;
- (void)_checkDispatchThreadLimits;
- (id)initWithPID:(int)arg1 orTask:(unsigned int)arg2 options:(unsigned int)arg3;
- (BOOL)waitUntilDone;
- (id)outputString;
- (id)samples;
- (int)pid;
- (double)timeLimit;
- (void)setTimeLimit:(double)arg1;
- (BOOL)stop;
- (BOOL)start;
- (unsigned int)sampleCount;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (unsigned int)mainThread;
- (id)initWithTask:(unsigned int)arg1;

@end

