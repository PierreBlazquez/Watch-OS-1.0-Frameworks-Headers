//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <PBBridgeSupport/PBBridgeIDSServiceDelegate.h>

#import "IDSServiceDelegate.h"
#import "NSURLConnectionDelegate.h"
#import "PBBridgeCompanionProtocol.h"
#import "RUILoaderDelegate.h"

@class NSMutableData, NSMutableURLRequest, NSString, NSTimer, NSURLConnection, RUILoader;

@interface PBBridgeCompanionController : PBBridgeIDSServiceDelegate <IDSServiceDelegate, NSURLConnectionDelegate, RUILoaderDelegate, PBBridgeCompanionProtocol>
{
    struct __MKBAssertion *_unlockPairingAssertion;
    BOOL _passcodeSet;
    BOOL _selectedPairedUnlock;
    BOOL _nonSilentActivation;
    BOOL _connectionFailed;
    BOOL _isEstablishingPairing;
    BOOL _allowAnyHTTPSCertificate;
    unsigned short _granularActivationState;
    id <RUILoaderDelegate> _ruiDelegate;
    id <PBBridgeConnectionDelegate> _delegate;
    NSURLConnection *_activationConnection;
    NSMutableURLRequest *_activationRequest;
    NSMutableData *_activationData;
    RUILoader *_ruiLoader;
    NSString *_contentType;
    int _activationState;
    NSTimer *_activationTimeout;
    NSString *_internalLastSendMessageID;
    CDUnknownBlockType _lockedOnAnimationCompletion;
    CDUnknownBlockType _initialSyncPrepCompletion;
}

+ (id)displayNameWithFirstName:(id)arg1 lastName:(id)arg2;
+ (void)meCardFirstName:(id *)arg1 lastName:(id *)arg2;
+ (void)iCloudFirstName:(id *)arg1 lastName:(id *)arg2;
@property(copy, nonatomic) NSString *contentType; // @synthesize contentType=_contentType;
@property(nonatomic) int activationState; // @synthesize activationState=_activationState;
@property(copy, nonatomic) CDUnknownBlockType initialSyncPrepCompletion; // @synthesize initialSyncPrepCompletion=_initialSyncPrepCompletion;
@property(copy, nonatomic) CDUnknownBlockType lockedOnAnimationCompletion; // @synthesize lockedOnAnimationCompletion=_lockedOnAnimationCompletion;
@property(nonatomic) BOOL allowAnyHTTPSCertificate; // @synthesize allowAnyHTTPSCertificate=_allowAnyHTTPSCertificate;
@property(nonatomic) unsigned short granularActivationState; // @synthesize granularActivationState=_granularActivationState;
@property(nonatomic) BOOL isEstablishingPairing; // @synthesize isEstablishingPairing=_isEstablishingPairing;
@property(nonatomic) BOOL connectionFailed; // @synthesize connectionFailed=_connectionFailed;
@property(nonatomic) BOOL nonSilentActivation; // @synthesize nonSilentActivation=_nonSilentActivation;
@property(retain, nonatomic) RUILoader *ruiLoader; // @synthesize ruiLoader=_ruiLoader;
@property(retain, nonatomic) NSMutableURLRequest *activationRequest; // @synthesize activationRequest=_activationRequest;
@property(retain, nonatomic) NSURLConnection *activationConnection; // @synthesize activationConnection=_activationConnection;
@property(nonatomic) BOOL selectedPairedUnlock; // @synthesize selectedPairedUnlock=_selectedPairedUnlock;
@property(nonatomic) BOOL passcodeSet; // @synthesize passcodeSet=_passcodeSet;
@property(nonatomic) __weak id <RUILoaderDelegate> ruiDelegate; // @synthesize ruiDelegate=_ruiDelegate;
- (void)queryGizmoForOfflineTerms;
- (void)tellGizmoToPrepareForInitialSyncWithCompletion:(CDUnknownBlockType)arg1;
- (void)tellGizmoToDeleteWarrantySentinel;
- (void)queryGizmoForShowWarrantySentinelAndRestoreDeviceName:(id)arg1;
- (void)tellGizmoToRetryActivation;
- (void)startEstablishingPairing;
- (void)tellGizmoToUpdateSyncProgressTo:(float)arg1 withState:(int)arg2;
- (void)tellGizmoToSeCrownOrientationRight:(BOOL)arg1;
- (void)tellGizmoToShowLockedOnAnimationTimeToFlash:(double)arg1 animationCompletion:(CDUnknownBlockType)arg2;
- (void)tellGizmoToPopToControllerType:(unsigned int)arg1;
- (void)tellGizmoToPushControllerType:(unsigned int)arg1;
- (void)tellGizmoToSetLocationEnabled:(BOOL)arg1;
- (void)tellGizmoToSetDiagnosticsEnabled:(BOOL)arg1;
- (void)sendGizmoPasscodeRestrictions:(id)arg1;
- (void)objectModel:(id)arg1 pressedButton:(id)arg2 attributes:(id)arg3;
- (void)enableSiriForGizmo:(id)arg1;
- (void)tellGizmoToBeginActivation;
- (void)loader:(id)arg1 didReceiveHTTPResponse:(id)arg2;
- (void)loader:(id)arg1 receivedObjectModel:(id)arg2 actionSignal:(int)arg3;
- (void)loader:(id)arg1 didFailWithError:(id)arg2;
- (id)_connectionWithRequest:(id)arg1;
- (double)offsetEventTime;
- (void)watchDidPrepareForInitialSync:(id)arg1;
- (void)gizmoFailedToCreatePasscode:(id)arg1;
- (void)handleOfflineTermsResponse:(id)arg1;
- (void)handleWarrantySentinelResponse:(id)arg1;
- (void)handlePerformanceResults:(id)arg1;
- (void)gizmoActivationFailed:(id)arg1;
- (void)getSiriState:(id)arg1;
- (void)gizmoDidEndUnlockPairing:(id)arg1;
- (void)gizmoDidBeginUnlockPairing:(id)arg1;
- (void)gizmoDidEndPasscodeCreation:(id)arg1;
- (void)getCompanionRegion:(id)arg1;
- (void)getCompanionLanguage:(id)arg1;
- (void)gizmoDidFinishActivating:(id)arg1;
- (void)gizmoDidBeginActivating:(id)arg1;
- (void)sendProxyActivationRequest:(id)arg1;
- (void)gizmoBecameAvailableWantsConfirmation:(id)arg1;
- (void)beginSetupTransaction;
@property(retain, nonatomic) NSString *internalLastSendMessageID; // @synthesize internalLastSendMessageID=_internalLastSendMessageID;
@property(retain, nonatomic) NSTimer *activationTimeout; // @synthesize activationTimeout=_activationTimeout;
- (id)customDescriptionOfMessageType:(unsigned short)arg1;
- (void)setupServiceMessageSelectorMappings;
- (void)transportBecameUnreachable;
- (void)transportBecameReachable;
- (BOOL)_sendResponseToMessage:(id)arg1 withResponseMessageID:(unsigned short)arg2 withArguments:(id)arg3;
- (void)activationTimeout:(id)arg1;
- (void)refreshTimeoutTimer;
- (void)invalidateTimeoutTimer;
- (BOOL)_sendRemoteCommandWithMessageID:(unsigned short)arg1 withArguments:(id)arg2;
- (void)endSetupTransaction;
@property(retain, nonatomic) NSMutableData *activationData; // @synthesize activationData=_activationData;
- (void).cxx_destruct;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)_cleanup;
@property(nonatomic) __weak id <PBBridgeConnectionDelegate> delegate; // @synthesize delegate=_delegate;
- (id)init;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (id)serviceIdentifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

