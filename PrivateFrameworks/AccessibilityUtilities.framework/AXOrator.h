//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AVSpeechSynthesizerDelegate.h"

@class AVSpeechSynthesizer, AVSpeechUtterance, AXLanguageTag, AXLanguageTaggedContent, NSArray, NSMutableArray, NSString;

@interface AXOrator : NSObject <AVSpeechSynthesizerDelegate>
{
    AVSpeechUtterance *_statusUtterance;
    BOOL _contentIsSpeakable;
    BOOL _shouldSpeakNextItemOnResume;
    BOOL _isAudioSessionActive;
    BOOL _isInAudioInterruption;
    BOOL _wasSpeakingBeforeAudioInterruption;
    BOOL _didRequestStartSpeakingDuringAudioInterruption;
    BOOL _didRequestPauseSpeakingDuringAudioInterruption;
    BOOL _didRequestResumeSpeakingDuringAudioInterruption;
    id <AXOratorDelegate> _delegate;
    AXLanguageTaggedContent *_selectedContent;
    NSString *_voiceIdentifier;
    AXLanguageTaggedContent *_speakingContent;
    NSArray *_speakingContentTokenRanges;
    unsigned int _numberOfTokensToSkip;
    AVSpeechSynthesizer *_speechSynthesizer;
    NSMutableArray *_speechSequenceItems;
    NSString *_lastUtteranceLanguageCode;
    AVSpeechUtterance *_lastUtterance;
    AXLanguageTag *_lastUtteranceLanguageTag;
    NSString *_requestedLanguageCodeDuringAudioInterruption;
    struct _NSRange _lastSpokenSubstringRange;
    struct _NSRange _lastUtteranceSubstringRange;
}

- (void)speechSynthesizer:(id)arg1 willSpeakRangeOfSpeechString:(struct _NSRange)arg2 utterance:(id)arg3;
- (void)speechSynthesizer:(id)arg1 didCancelSpeechUtterance:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didContinueSpeechUtterance:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didPauseSpeechUtterance:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didFinishSpeechUtterance:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didStartSpeechUtterance:(id)arg2;
- (float)speechRate;
- (BOOL)isPaused;
@property(copy, nonatomic) NSString *content;
- (void)clearSelectedContent;
- (BOOL)canResumeWithContent:(id)arg1;
- (BOOL)contentIsSpeakable;
- (void)speakStatusWithLanguage:(id)arg1 rate:(id)arg2 useCompactVoice:(BOOL)arg3 alternateIdentifier:(id)arg4;
- (BOOL)rewindWithBoundary:(unsigned int)arg1;
- (BOOL)fastForwardWithBoundary:(unsigned int)arg1;
- (BOOL)speakSlower;
- (BOOL)speakFaster;
- (BOOL)stopSpeaking:(id *)arg1;
- (void)_didEndInterruption;
- (void)_didBeginInterruption;
@property(retain, nonatomic) AVSpeechUtterance *lastUtterance; // @synthesize lastUtterance=_lastUtterance;
@property(nonatomic) BOOL isAudioSessionActive; // @synthesize isAudioSessionActive=_isAudioSessionActive;
- (BOOL)resumeSpeaking:(id *)arg1;
@property(nonatomic) BOOL didRequestResumeSpeakingDuringAudioInterruption; // @synthesize didRequestResumeSpeakingDuringAudioInterruption=_didRequestResumeSpeakingDuringAudioInterruption;
@property(nonatomic) BOOL didRequestPauseSpeakingDuringAudioInterruption; // @synthesize didRequestPauseSpeakingDuringAudioInterruption=_didRequestPauseSpeakingDuringAudioInterruption;
- (BOOL)startSpeakingWithPreferredLanguage:(id)arg1 alternativeVoiceId:(id)arg2 error:(id *)arg3;
@property(copy, nonatomic) NSString *requestedLanguageCodeDuringAudioInterruption; // @synthesize requestedLanguageCodeDuringAudioInterruption=_requestedLanguageCodeDuringAudioInterruption;
@property(nonatomic) BOOL didRequestStartSpeakingDuringAudioInterruption; // @synthesize didRequestStartSpeakingDuringAudioInterruption=_didRequestStartSpeakingDuringAudioInterruption;
@property(nonatomic) BOOL isInAudioInterruption; // @synthesize isInAudioInterruption=_isInAudioInterruption;
- (BOOL)pauseSpeaking:(id *)arg1;
@property(nonatomic) BOOL wasSpeakingBeforeAudioInterruption; // @synthesize wasSpeakingBeforeAudioInterruption=_wasSpeakingBeforeAudioInterruption;
@property(nonatomic) unsigned int numberOfTokensToSkip; // @synthesize numberOfTokensToSkip=_numberOfTokensToSkip;
- (void)_speakNextTokenFromCurrentTokenIndex:(int)arg1 forward:(BOOL)arg2 boundary:(unsigned int)arg3;
- (int)_currentTokenIndex:(BOOL)arg1;
- (void)_tokenizeContentIfNeeded;
- (id)_speechSequenceItemsStartingAtContentLocation:(unsigned int)arg1;
@property(retain, nonatomic) NSArray *speakingContentTokenRanges; // @synthesize speakingContentTokenRanges=_speakingContentTokenRanges;
@property(nonatomic) struct _NSRange lastUtteranceSubstringRange; // @synthesize lastUtteranceSubstringRange=_lastUtteranceSubstringRange;
@property(retain, nonatomic) AXLanguageTag *lastUtteranceLanguageTag; // @synthesize lastUtteranceLanguageTag=_lastUtteranceLanguageTag;
@property(nonatomic) struct _NSRange lastSpokenSubstringRange; // @synthesize lastSpokenSubstringRange=_lastSpokenSubstringRange;
@property(retain, nonatomic) NSString *lastUtteranceLanguageCode; // @synthesize lastUtteranceLanguageCode=_lastUtteranceLanguageCode;
- (void)_setAudioSessionActive:(BOOL)arg1;
@property(retain, nonatomic) NSMutableArray *speechSequenceItems; // @synthesize speechSequenceItems=_speechSequenceItems;
@property(retain, nonatomic) AXLanguageTaggedContent *speakingContent; // @synthesize speakingContent=_speakingContent;
@property(retain, nonatomic) NSString *voiceIdentifier; // @synthesize voiceIdentifier=_voiceIdentifier;
- (BOOL)_skipByUnit:(BOOL)arg1 boundary:(unsigned int)arg2;
- (BOOL)_changeSpeakingSpeed:(BOOL)arg1;
- (void)_speakNextItemInSequence;
@property(nonatomic) BOOL shouldSpeakNextItemOnResume; // @synthesize shouldSpeakNextItemOnResume=_shouldSpeakNextItemOnResume;
- (void)_clearAllContentState;
- (BOOL)_successWithCode:(int)arg1 error:(id *)arg2;
- (BOOL)isSpeaking;
- (void)_startSpeakingSequence;
@property(retain, nonatomic) AVSpeechSynthesizer *speechSynthesizer; // @synthesize speechSynthesizer=_speechSynthesizer;
- (BOOL)_canSpeakTaggedContent:(id)arg1;
@property(retain, nonatomic) AXLanguageTaggedContent *selectedContent; // @synthesize selectedContent=_selectedContent;
- (void)_respeakUtteranceIfNeeded;
- (void)_handleMediaServicesWereReset:(id)arg1;
- (void)_handleMediaServicesWereLost:(id)arg1;
- (void)_handleAudioInterruption:(id)arg1;
@property(nonatomic) id <AXOratorDelegate> delegate; // @synthesize delegate=_delegate;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

