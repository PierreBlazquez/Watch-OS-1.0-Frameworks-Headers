//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "PLAgent.h"

@class PLEntryNotificationOperatorComposition, PLIOKitOperatorComposition, PLNSTimerOperatorComposition, PLSemaphore, PLXPCResponderOperatorComposition;

@interface PLBatteryAgent : PLAgent
{
    BOOL _allowGasGaugeRead;
    BOOL _deviceIsPluggedIn;
    PLIOKitOperatorComposition *_iokit;
    PLEntryNotificationOperatorComposition *_canSleepEntryNotifications;
    PLSemaphore *_canSleepSemaphore;
    PLEntryNotificationOperatorComposition *_wakeEntryNotifications;
    PLNSTimerOperatorComposition *_gasGaugeTimer;
    PLIOKitOperatorComposition *_chargerIOService;
    struct ggcontext *_gasGagueConnection;
    int _gasGaugeConsecutiveEmptyEntriesCount;
    PLXPCResponderOperatorComposition *_batteryInfoResponder;
    double _batteryLevelPercent;
    double _rawBatteryVoltageVolt;
}

+ (id)entryEventBackwardDefinitionExternalCharger;
+ (id)entryEventBackwardDefinitionBatteryUI;
+ (id)entryEventBackwardDefinitionBattery;
+ (id)entryEventPointDefinitionGasGaugeReconnect;
+ (id)entryEventIntervalDefinitionGasGauge;
+ (id)entryEventIntervalDefinitions;
+ (id)entryEventBackwardDefinitions;
+ (id)entryEventForwardDefinitions;
+ (id)entryEventPointDefinitions;
+ (id)defaults;
+ (void)load;
@property(retain) PLXPCResponderOperatorComposition *batteryInfoResponder; // @synthesize batteryInfoResponder=_batteryInfoResponder;
@property(retain) PLIOKitOperatorComposition *chargerIOService; // @synthesize chargerIOService=_chargerIOService;
@property(retain) PLNSTimerOperatorComposition *gasGaugeTimer; // @synthesize gasGaugeTimer=_gasGaugeTimer;
@property(readonly) PLEntryNotificationOperatorComposition *wakeEntryNotifications; // @synthesize wakeEntryNotifications=_wakeEntryNotifications;
@property(readonly) PLEntryNotificationOperatorComposition *canSleepEntryNotifications; // @synthesize canSleepEntryNotifications=_canSleepEntryNotifications;
@property int gasGaugeConsecutiveEmptyEntriesCount; // @synthesize gasGaugeConsecutiveEmptyEntriesCount=_gasGaugeConsecutiveEmptyEntriesCount;
- (BOOL)givePluggedInFreePass;
@property double batteryLevelPercent; // @synthesize batteryLevelPercent=_batteryLevelPercent;
@property BOOL deviceIsPluggedIn; // @synthesize deviceIsPluggedIn=_deviceIsPluggedIn;
@property struct ggcontext *gasGagueConnection; // @synthesize gasGagueConnection=_gasGagueConnection;
@property(readonly) PLIOKitOperatorComposition *iokit; // @synthesize iokit=_iokit;
- (void)gasGaugeRead;
@property BOOL allowGasGaugeRead; // @synthesize allowGasGaugeRead=_allowGasGaugeRead;
- (void)logEventBackwardBattery;
- (BOOL)gasGaugeStopLoggingAndClose;
- (BOOL)gasGaugeOpenAndStartLogging;
- (void)logEventIntervalGasGauge;
@property double rawBatteryVoltageVolt; // @synthesize rawBatteryVoltageVolt=_rawBatteryVoltageVolt;
@property(retain) PLSemaphore *canSleepSemaphore; // @synthesize canSleepSemaphore=_canSleepSemaphore;
- (void)initOperatorDependancies;
- (void).cxx_destruct;
- (void)log;
- (id)init;
- (void)dealloc;

@end

