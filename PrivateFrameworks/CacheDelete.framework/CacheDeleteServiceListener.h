//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <CacheDelete/CacheDeleteListener.h>

#import "CacheDeleteServiceProtocol.h"
#import "NSXPCListenerDelegate.h"

@class NSMutableArray, NSString, NSXPCListenerEndpoint;

@interface CacheDeleteServiceListener : CacheDeleteListener <NSXPCListenerDelegate, CacheDeleteServiceProtocol>
{
    NSXPCListenerEndpoint *_endpoint;
    CDUnknownBlockType _purgeable;
    CDUnknownBlockType _purge;
    CDUnknownBlockType _periodic;
    CDUnknownBlockType _cancel;
    CDUnknownBlockType _notify;
    NSMutableArray *_pendingReplies;
}

@property(copy, nonatomic) CDUnknownBlockType notify; // @synthesize notify=_notify;
@property(retain, nonatomic) NSMutableArray *pendingReplies; // @synthesize pendingReplies=_pendingReplies;
@property(copy, nonatomic) CDUnknownBlockType periodic; // @synthesize periodic=_periodic;
@property(copy, nonatomic) CDUnknownBlockType purge; // @synthesize purge=_purge;
@property(copy, nonatomic) CDUnknownBlockType purgeable; // @synthesize purgeable=_purgeable;
- (void)setNotifyCallback:(CDUnknownBlockType)arg1;
- (id)initWithName:(id)arg1 anonymous:(BOOL)arg2;
- (void)serviceNotify:(id)arg1 replyBlock:(CDUnknownBlockType)arg2;
- (void)servicePing:(CDUnknownBlockType)arg1;
- (void)serviceCancelPurge:(CDUnknownBlockType)arg1;
- (void)servicePeriodic:(int)arg1 info:(id)arg2 replyBlock:(CDUnknownBlockType)arg3;
- (void)servicePurge:(int)arg1 info:(id)arg2 replyBlock:(CDUnknownBlockType)arg3;
- (void)servicePurgeable:(int)arg1 info:(id)arg2 replyBlock:(CDUnknownBlockType)arg3;
@property(copy, nonatomic) CDUnknownBlockType cancel; // @synthesize cancel=_cancel;
@property(readonly) NSXPCListenerEndpoint *endpoint; // @synthesize endpoint=_endpoint;
- (void).cxx_destruct;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

