//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <CoreDAV/CoreDAVTask.h>

#import "CoreDAVContainerMultiGetSubmittable.h"

@class NSError, NSSet, NSString;

@interface CoreDAVContainerMultiGetTask : CoreDAVTask <CoreDAVContainerMultiGetSubmittable>
{
    NSSet *_urls;
    NSString *_appSpecificNamespace;
    NSString *_appSpecificMultiGetNameSpace;
    NSString *_appSpecificMultiGetCommand;
    NSString *_appSpecificDataProp;
    Class _appSpecificDataItemClass;
    BOOL _shouldIgnoreResponseErrors;
    NSSet *_additionalPropElements;
    NSSet *_parsedContents;
    NSSet *_missingURLs;
    NSSet *_deletedURLs;
}

- (id)httpMethod;
- (id)requestBody;
- (id)copyDefaultParserForContentType:(id)arg1;
- (id)initWithURLs:(id)arg1 atContainerURL:(id)arg2 appSpecificDataItemClass:(Class)arg3;
@property(nonatomic) BOOL shouldIgnoreResponseErrors; // @synthesize shouldIgnoreResponseErrors=_shouldIgnoreResponseErrors;
@property(readonly, nonatomic) NSSet *parsedContents; // @synthesize parsedContents=_parsedContents;
@property(readonly, nonatomic) NSSet *deletedURLs; // @synthesize deletedURLs=_deletedURLs;
@property(readonly, nonatomic) NSSet *missingURLs; // @synthesize missingURLs=_missingURLs;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (void)setAdditionalProperties:(id)arg1 onDataItem:(id)arg2;
@property(retain, nonatomic) NSSet *additionalPropElements; // @synthesize additionalPropElements=_additionalPropElements;
- (id)copyAdditionalPropElements;
- (void)dealloc;

// Remaining properties
@property(nonatomic) id <CoreDAVAccountInfoProvider> accountInfoProvider;
@property(copy, nonatomic) CDUnknownBlockType completionBlock;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSError *error;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@property(nonatomic) id <CoreDAVTaskManager> taskManager;
@property(nonatomic) double timeoutInterval;

@end

