//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "DuetLoggerProtocol.h"
#import "DuetSaveAndRestore.h"

@class AppLaunchStatsAppWorkSpace, AppLaunchStatsDelayLaunch, AppLaunchStatsDiag, AppLaunchStatsLaunchQueue, AppLaunchStatsNetwork, AppLaunchStatsREventHandler, AppLaunchStatsSBMonitor, AppLaunchStatsSBSettings, AppLaunchStatsSaveAndRestore, AppLaunchStatsScheduler, AppLaunchStatsState, AppLaunchStatsStateHandlerQueue, BudgetPool, CDAttribute, CDBudget, CDSession, NSDate, NSDistributedNotificationCenter, NSMutableDictionary, NSNumber, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSObject<OS_xpc_object>, NSRunLoop, NSString;

@interface AppLaunchStats : NSObject <DuetLoggerProtocol, DuetSaveAndRestore>
{
    AppLaunchStatsState *aplsState;
    AppLaunchStatsAppWorkSpace *aplsAppWorkSpace;
    AppLaunchStatsDelayLaunch *aplsDelayLaunch;
    AppLaunchStatsLaunchQueue *aplsLaunchQueue;
    AppLaunchStatsSaveAndRestore *aplsSaveAndRestore;
    AppLaunchStatsSBMonitor *aplsSBMonitor;
    AppLaunchStatsSBSettings *aplsSBSettings;
    AppLaunchStatsStateHandlerQueue *aplsStateHandlerQueue;
    AppLaunchStatsREventHandler *aplsREventHandler;
    CDUnknownBlockType pendingHandler;
    CDUnknownBlockType recommendHandler;
    AppLaunchStatsScheduler *aplsScheduler;
    AppLaunchStatsDiag *aplsDiag;
    AppLaunchStatsNetwork *aplsNetworkMeter;
    BudgetPool *topicLimiter;
    NSMutableDictionary *topicAbleList;
    CDSession *topicSession;
    unsigned char prefUIKitFakeSwitch;
    int messageStatusAPSD;
    int resourceStatus;
    int externaltriggerType;
    NSDistributedNotificationCenter *distNotCenter;
    NSDate *lastDateOfAliveList;
    NSDate *lastExternalTrigTime;
    NSDate *timeOfLastFetch;
    NSDate *oneHourBudgetReset;
    NSNumber *batteryCapacity;
    NSRunLoop *aplsRunLoop;
    NSString *fakeBundleID;
    _Bool isClassCLocked;
    _Bool isAppForecastUpdating;
    _Bool isDataBudgetUpdating;
    _Bool isNoprewarmUpdating;
    _Bool isInternalInstall;
    _Bool isPowerBudgetsUpdating;
    _Bool lastFetchWasTooLongAgo;
    _Bool disableAllDueToSleep;
    _Bool disableFetch;
    _Bool disableHighPriorityPush;
    _Bool disableLowPriorityPush;
    _Bool disableTrending;
    _Bool enableCoreDuet;
    _Bool budgetsInitialized;
    int allowedMaxCount;
    int lockStateToken;
    int whiteListAppToken;
    int trendToken;
    int trendTokenLST;
    int pushListToken;
    int pushToken;
    int pushTokenLST;
    int configToken;
    int aplsNotifyToken;
    int semaphoreSigToken;
    int classCLockedToken;
    int displayStateToken;
    int pluggedInToken;
    int externalTrigToken;
    long long lowPriorityStartTime;
    NSObject<OS_dispatch_queue> *appLaunchStatDQueue;
    NSObject<OS_dispatch_queue> *appLaunchStatPushQueue;
    NSObject<OS_dispatch_queue> *delegateQueue;
    NSObject<OS_dispatch_queue> *budgetQueue;
    NSObject<OS_dispatch_source> *theTimer;
    NSObject<OS_xpc_object> *conn;
    id <AppLaunchStatsDelegate> delegate;
    CDSession *session;
    CDSession *budget_session;
    CDBudget *dataBudget;
    CDBudget *energyBudget;
    CDAttribute *bundleIdAttribute;
    NSMutableDictionary *meterTokenTracker;
    NSDate *periodicTimeTracker;
}

@property(readonly, nonatomic) NSObject<OS_xpc_object> *conn; // @synthesize conn;
@property(readonly, nonatomic) CDUnknownBlockType pendingHandler; // @synthesize pendingHandler;
- (void)setDelayLaunchFor:(id)arg1 with:(double)arg2;
- (id)doConvertTopicString:(id)arg1 withRange:(struct _NSRange)arg2 withSubStringIndex:(unsigned int)arg3;
- (_Bool)hasOpportunisticFetchFeature:(id)arg1;
- (void)energyForecastStartingOnDate:(id)arg1 duration:(double)arg2 granularity:(int)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)retrieveAppScoresWithQueryHandler:(CDUnknownBlockType)arg1;
- (void)setAppLaunchStatsPendingHandler:(CDUnknownBlockType)arg1 queue:(id)arg2;
- (void)setAppLaunchStatsDelegate:(id)arg1 queue:(id)arg2;
- (void)setAppLaunchStatsPendingDelegate:(id)arg1 queue:(id)arg2;
- (void)setAppLaunchRecommendationHandler:(CDUnknownBlockType)arg1;
- (void)preWarmHasEnded:(id)arg1 withResult:(unsigned int)arg2 withTriggerType:(int)arg3 withSequence:(unsigned long long)arg4;
- (void)preWarmHasStarted:(id)arg1 withResult:(unsigned int)arg2 withTriggerType:(int)arg3 withSequence:(unsigned long long)arg4;
- (void)okToPassPushMessageForTopic:(id)arg1 onQueue:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)trendQueryLaunchApp:(CDUnknownBlockType)arg1;
- (void)okToLaunchMessageFor:(id)arg1 forReasons:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (id)defaultsDomainReadString:(id)arg1;
- (void)readPool:(id)arg1;
- (void)sendLSTxtqueriesWithMask:(unsigned long long)arg1;
- (void)triggerLaunchQueue:(id)arg1;
- (void)ableAdmissionForTopic:(id)arg1 attribute:(id)arg2 value:(id)arg3 withHandler:(CDUnknownBlockType)arg4;
- (id)convertTopicIDtoBundleID:(id)arg1;
- (void)modifyPoolValue:(id)arg1 number:(long long)arg2;
- (void)carryDailyBudget:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dataForecastStartingOnDate:(id)arg1 duration:(double)arg2 granularity:(int)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)testAndReleaseBlueList;
- (void)checkWifiChargerConnected;
- (void)initChargeStatusMonitoring;
- (void)setPendingWorkQueue:(id)arg1;
- (void)initRegisterNotifications;
- (void)testDatabaseAge:(CDUnknownBlockType)arg1;
- (void)updateDailyOutOfBandForecast;
- (void)updatePowerBudgetPool;
- (void)appActivityForecastStartingOnDate:(id)arg1 duration:(double)arg2 granularity:(int)arg3 appFilter:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (int)bundlePredictionZone:(id)arg1 launchzone:(int)arg2 top:(int)arg3 filter:(_Bool)arg4;
- (void)updateDailyPowerBudgets;
- (void)updateDailyDataBudget;
- (void)retrieveAppScoresWithHandler:(CDUnknownBlockType)arg1;
- (void)replaceTimeSlot:(id)arg1;
- (void)updateAliveList;
- (void)updateResourceAvailability;
- (void)resetBudgetPoolClient;
- (void)resetBudgetPool;
- (void)updateDailyAppForecast;
- (void)testOneHourBudgetExpirytime;
- (void)registerAppForTrending:(id)arg1;
- (void)initBudgets;
- (void)setup_lstconnection;
- (void)whatToLaunch:(id)arg1;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *appLaunchStatDQueue; // @synthesize appLaunchStatDQueue;
- (_Bool)hasOpportunisticFetchFeatureWithType:(id)arg1 withFetch:(int)arg2;
- (void)receiveConnectedStateNotification:(unsigned long long)arg1;
- (void)receiveIncomingLowPriorityPushRequestForReservationStation:(id)arg1;
- (void)initSharedNotification;
- (void)receiveIncomingLowPriorityPushList:(unsigned long long)arg1;
- (void)updateTrendingBehavior:(unsigned long long)arg1 withBundleID:(id)arg2;
- (void)launchExternalTriggers:(unsigned long long)arg1;
- (void)initAfterClassCUnlockedForClient;
- (void)initAfterClassCUnlocked;
- (_Bool)isSpringBoardInstance;
- (void)updateStateFromExternalNotification:(unsigned long long)arg1;
- (void)runPCtimerHeartBeat:(_Bool)arg1;
- (void)deleteAllEntriesInDB;
- (void)aplsSBMonitorEvent:(int)arg1 withBundleID:(id)arg2;
- (void)removeAppFromLST:(id)arg1;
@property(readonly, nonatomic) AppLaunchStatsState *aplsState; // @synthesize aplsState;
- (void)onTick;
- (void)restore:(id)arg1;
- (void)reloadConfiguration;
- (void)logLight:(struct __asl_object_s *)arg1 withMsg:(struct __asl_object_s *)arg2 withLevel:(int)arg3;
- (void)logAll:(struct __asl_object_s *)arg1 withMsg:(struct __asl_object_s *)arg2 withLevel:(int)arg3;
- (void)save:(id)arg1;
- (void).cxx_destruct;
- (id)init;
- (void)dealloc;

@end

