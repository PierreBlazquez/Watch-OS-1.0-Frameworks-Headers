//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <VectorKit/VKAnnotationMarkerLayer.h>

#import "VKAnchorDelegate.h"
#import "VKTrackableAnnotationPresentation.h"

@class NSString, VKAnchor, VKAnimation;

@interface VKAnnotationMarker : VKAnnotationMarkerLayer <VKAnchorDelegate, VKTrackableAnnotationPresentation>
{
    id <VKAnnotation> _annotation;
    NSString *_reuseIdentifier;
    struct VKPoint _projectedPoint;
    struct VKPoint _projectedGroundPoint;
    BOOL _selected;
    BOOL _canShowCallout;
    int _dragState;
    BOOL _draggable;
    BOOL _tracking;
    BOOL _animatingToCoordinate;
    VKAnimation *_coordinateAnimation;
    BOOL _followsTerrain;
    CDStruct_2c43369c _presentationCoordinate;
    struct CGPoint _presentationPoint;
    BOOL _useScreenSpacePoint;
    float _dropFraction;
    VKAnchor *_anchor;
    CDStruct_4f8a95cd _styleTransitionState;
    id <VKAnnotationMarkerDelegate> _delegate;
    BOOL _hidden;
    struct CGPoint _calloutOffset;
}

+ (id)keyPathsForValuesAffectingSubtitle;
+ (id)keyPathsForValuesAffectingTitle;
+ (unsigned int)_selectedZIndex;
+ (unsigned int)_zIndex;
@property(nonatomic) BOOL hidden; // @synthesize hidden=_hidden;
@property(nonatomic) float dropFraction; // @synthesize dropFraction=_dropFraction;
@property(nonatomic) BOOL useScreenSpacePoint; // @synthesize useScreenSpacePoint=_useScreenSpacePoint;
@property(nonatomic) BOOL animatingToCoordinate; // @synthesize animatingToCoordinate=_animatingToCoordinate;
@property(nonatomic) struct CGPoint calloutOffset; // @synthesize calloutOffset=_calloutOffset;
@property(nonatomic, getter=isDraggable) BOOL draggable; // @synthesize draggable=_draggable;
@property(nonatomic) int dragState; // @synthesize dragState=_dragState;
@property(nonatomic) BOOL canShowCallout; // @synthesize canShowCallout=_canShowCallout;
@property(nonatomic) struct VKPoint projectedGroundPoint; // @synthesize projectedGroundPoint=_projectedGroundPoint;
@property(nonatomic) struct VKPoint projectedPoint; // @synthesize projectedPoint=_projectedPoint;
- (id)debugAnchorPointString;
- (struct CGPoint)screenPointToScrollRelativeToWithCanvasSize:(struct CGSize)arg1 canvasScale:(float)arg2;
- (struct VKPoint)pointInWorldWithContext:(id)arg1;
- (struct CGRect)significantFrameWithCanvasSize:(struct CGSize)arg1;
- (struct CGPoint)pointToDropAtForPoint:(struct CGPoint)arg1;
- (double)animateInWithCanvasSize:(struct CGSize)arg1 delay:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)animateFromCoordinate:(CDStruct_c3b9c2ee)arg1 duration:(double)arg2;
@property(nonatomic) BOOL followsTerrain; // @synthesize followsTerrain=_followsTerrain;
- (id)initWithAnnotation:(id)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic) CDStruct_c3b9c2ee presentationCoordinate;
- (void)anchorWorldPointDidChange:(void *)arg1;
- (struct CGPoint)calloutAnchorPointWithCanvasSize:(struct CGSize)arg1 canvasScale:(float)arg2 snapToPixels:(BOOL)arg3;
- (id)anchorWithContext:(id)arg1;
- (struct CGRect)frameWithCanvasSize:(struct CGSize)arg1;
- (void)setDragState:(int)arg1 animated:(BOOL)arg2;
@property(readonly, nonatomic) BOOL canAnimateIn;
@property(nonatomic) CDStruct_4f8a95cd styleTransitionState; // @synthesize styleTransitionState=_styleTransitionState;
@property(nonatomic) struct CGPoint presentationPoint;
@property(retain, nonatomic) id <VKAnnotation> annotation; // @synthesize annotation=_annotation;
- (BOOL)isPersistent;
- (id).cxx_construct;
- (id)subtitle;
@property(nonatomic, getter=isTracking) BOOL tracking;
@property(nonatomic, getter=isSelected) BOOL selected; // @synthesize selected=_selected;
- (void)prepareForReuse;
@property(readonly, nonatomic) NSString *reuseIdentifier; // @synthesize reuseIdentifier=_reuseIdentifier;
@property(readonly, copy, nonatomic) NSString *title;
@property(nonatomic) id <VKAnnotationMarkerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

