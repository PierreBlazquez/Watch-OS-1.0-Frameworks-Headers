//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <VectorKit/VKVectorTile.h>

@class NSArray, NSMapTable, NSMutableArray, VKAnimation, VKRealisticPolygonMaker;

@interface VKRealisticTile : VKVectorTile
{
    NSMapTable *_realisticRoadGroupsTable;
    NSMutableArray *_realisticRoadGroups;
    float _roadZ;
    float _laneMarkingZ;
    float _landZ;
    float _waterZ;
    BOOL _shouldBlend;
    float _alpha;
    VKRealisticPolygonMaker *_landPolygonMaker;
    VKRealisticPolygonMaker *_waterPolygonMaker;
    VKAnimation *_startDrawingAnimation;
    map_63821800 _landDrawableIndices;
    map_63821800 _waterDrawableIndices;
    vector_5bdcb8f5 _landDrawables;
    vector_5bdcb8f5 _waterDrawables;
    struct shared_ptr<ggl::RealisticCasingFacade::RealisticMesh> _coastlineMesh;
    shared_ptr_6e6219d6 _landTextureStyleQuery;
    shared_ptr_479d1306 _defaultLandTexture;
    shared_ptr_479d1306 _defaultLandTextureVariant;
    struct vector<_VKRealisticPolygonMetaData, std::__1::allocator<_VKRealisticPolygonMetaData>> _polygonMetaData;
    shared_ptr_1573687d _fogUniformData;
    shared_ptr_9b6b7821 _realisticTextureUniformData;
}

+ (void)updateFogUniforms:(const shared_ptr_1573687d *)arg1 withLayoutContext:(id)arg2 toWorld:(const Matrix_08d701e4 *)arg3;
@property(retain, nonatomic) VKAnimation *startDrawingAnimation; // @synthesize startDrawingAnimation=_startDrawingAnimation;
@property(nonatomic) BOOL shouldBlend; // @synthesize shouldBlend=_shouldBlend;
@property(readonly, nonatomic) float waterZ; // @synthesize waterZ=_waterZ;
@property(readonly, nonatomic) float landZ; // @synthesize landZ=_landZ;
@property(readonly, nonatomic) shared_ptr_9b6b7821 realisticTextureUniformData; // @synthesize realisticTextureUniformData=_realisticTextureUniformData;
@property(readonly, nonatomic) shared_ptr_1573687d fogUniformData; // @synthesize fogUniformData=_fogUniformData;
@property(readonly, nonatomic) shared_ptr_479d1306 defaultLandTexture; // @synthesize defaultLandTexture=_defaultLandTexture;
@property(readonly, nonatomic) shared_ptr_479d1306 defaultLandTextureVariant;
- (void)updateTextures;
@property(readonly, nonatomic) struct RealisticMesh *coastlineMesh;
@property(readonly, nonatomic) vector_5bdcb8f5 *waterDrawables;
@property(readonly, nonatomic) vector_5bdcb8f5 *landDrawables;
- (struct TexturedDrawable *)_drawableInMap:(map_63821800 *)arg1 vendors:(vector_5bdcb8f5 *)arg2 forStyleQuery:(shared_ptr_6e6219d6)arg3;
- (void)_addCoastlineMeshForPoints:(const Matrix_8746f91e *)arg1 pointCount:(unsigned int)arg2;
- (shared_ptr_479d1306)_createDefaultTextureForLevelOfDetail:(unsigned int)arg1 takeVariant:(BOOL)arg2;
- (id)_groupForRenderZ:(int)arg1;
@property(readonly, nonatomic) NSArray *realisticRoadGroups; // @synthesize realisticRoadGroups=_realisticRoadGroups;
- (void)_updateDefaultLandTextures;
- (void)addTriangulatedPointsToDrawableInMap:(map_63821800 *)arg1 vendors:(vector_5bdcb8f5 *)arg2 zIndex:(float)arg3 points:(const Matrix_8746f91e *)arg4 pointCount:(unsigned int)arg5 indices:(const unsigned short *)arg6 indexCount:(unsigned int)arg7 styleQuery:(shared_ptr_6e6219d6)arg8;
- (void)_parsePolygons;
- (void)_parseCoastlines;
- (void)createMeshes;
@property(readonly, nonatomic) float roadZ; // @synthesize roadZ=_roadZ;
- (int)vectorType;
- (id)initWithKey:(const struct VKTileKey *)arg1 modelTile:(id)arg2 styleManager:(id)arg3 sharedResources:(id)arg4 contentScale:(float)arg5 device:(struct Device *)arg6;
- (void)updateViewDependentStateIfNecessaryWithContext:(id)arg1;
- (void)updateViewDependentStateWithContext:(id)arg1;
- (void).cxx_destruct;
- (id).cxx_construct;
@property(nonatomic) float alpha; // @synthesize alpha=_alpha;
- (void)dealloc;

@end

