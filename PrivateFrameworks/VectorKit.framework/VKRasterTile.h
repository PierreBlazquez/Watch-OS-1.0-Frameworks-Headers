//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <VectorKit/VKTile.h>

@class NSData, VKStyleManager;

@interface VKRasterTile : VKTile
{
    NSData *_data;
    VKStyleManager *_styleManager;
    int _genericTileType;
    BOOL _hasGenericTileType;
    shared_ptr_479d1306 _gglTexture;
    struct RenderItem _renderItem;
    struct unique_ptr<ggl::Texture::Shader::Setup, std::__1::default_delete<ggl::Texture::Shader::Setup>> _shaderSetup;
    struct unique_ptr<ggl::Clut::Shader::Setup, std::__1::default_delete<ggl::Clut::Shader::Setup>> _shaderSetupCLUT;
    struct unique_ptr<ggl::TextureWithReverseAlpha::Shader::Setup, std::__1::default_delete<ggl::TextureWithReverseAlpha::Shader::Setup>> _shaderReverseAlphaSetup;
}

@property(nonatomic) shared_ptr_479d1306 gglTexture; // @synthesize gglTexture=_gglTexture;
- (void)gglBuildTexture:(struct Device *)arg1;
- (id)initWithKey:(const struct VKTileKey *)arg1 imageData:(id)arg2 styleManager:(id)arg3 genericTileType:(int)arg4;
- (void)immediateLoad:(struct Device *)arg1;
- (struct TextureData2D *)buildTextureDataFromCGImage:(struct CGImage *)arg1;
- (struct CGImage *)newCGImageFromData:(id)arg1;
- (id)initWithKey:(const struct VKTileKey *)arg1 imageData:(id)arg2 styleManager:(id)arg3;
@property(readonly, nonatomic) struct RenderItem *renderItem;
- (void)setupNormalShaderWithRenderState:(struct RenderState *)arg1 mesh:(struct Mesh *)arg2;
- (void)setupReverseAlphaShaderWithRenderState:(struct RenderState *)arg1 mesh:(struct Mesh *)arg2 roadAlpha:(float)arg3;
- (void)setupClutShaderWithRenderState:(struct RenderState *)arg1 mesh:(struct Mesh *)arg2 clutTexture:(struct Texture2D *)arg3 clutBlend:(float)arg4;
@property(readonly, nonatomic) int genericTileType; // @synthesize genericTileType=_genericTileType;
@property(readonly, nonatomic) BOOL hasGenericTileType; // @synthesize hasGenericTileType=_hasGenericTileType;
- (void).cxx_destruct;
- (id).cxx_construct;
- (void)dealloc;

@end

