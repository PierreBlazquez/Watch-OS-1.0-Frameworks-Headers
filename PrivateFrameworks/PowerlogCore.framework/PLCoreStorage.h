//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSMutableDictionary, NSMutableSet, NSString, PLCFNotificationOperatorComposition, PLKQueue, PLNSNotificationOperatorComposition, PLNSTimerOperatorComposition, PLSQLiteConnection, PLStorageCache, PLStorageOperator, PLXPCResponderOperatorComposition;

@interface PLCoreStorage : NSObject
{
    BOOL _storageLocked;
    BOOL _storageReady;
    PLSQLiteConnection *_connection;
    PLKQueue *_profileDefaultsKQueue;
    PLKQueue *_crashReporterKQueue;
    PLNSTimerOperatorComposition *_periodicCheckpointTimer;
    PLNSTimerOperatorComposition *_dailyTaskTimer;
    PLNSNotificationOperatorComposition *_dailyTaskNotification;
    PLCFNotificationOperatorComposition *_keybagFirstUnlockNotification;
    PLXPCResponderOperatorComposition *_safeFileResponder;
    PLStorageOperator *_storageOperator;
    NSMutableSet *_safeCopyInProgress;
    PLStorageCache *_lastEntryCache;
    NSMutableDictionary *_processIDCache;
    NSString *_mainDBInCRFolderUUIDString;
}

+ (void)logMessage:(id)arg1 fromFile:(id)arg2 fromLineNumber:(long)arg3;
+ (id)allOperatorTablesToTrimConditionsForTrimDate:(id)arg1;
+ (id)mainDBinCRFolderPath;
+ (id)storageQueueNameForClass:(id)arg1;
- (void)deleteEntry:(id)arg1;
@property(retain) PLNSTimerOperatorComposition *dailyTaskTimer; // @synthesize dailyTaskTimer=_dailyTaskTimer;
@property(retain) PLNSNotificationOperatorComposition *dailyTaskNotification; // @synthesize dailyTaskNotification=_dailyTaskNotification;
@property(nonatomic) BOOL storageLocked; // @synthesize storageLocked=_storageLocked;
- (void)releaseMemory;
- (id)entriesForKey:(id)arg1 inTimeRange:(struct _PLTimeIntervalRange)arg2 withCountOfEntriesBefore:(long long)arg3 withCountOfEntriesAfter:(long long)arg4 withFilters:(id)arg5;
- (id)entriesForKey:(id)arg1 inTimeRange:(struct _PLTimeIntervalRange)arg2 withFilters:(id)arg3;
- (id)entriesForKey:(id)arg1 startingFromRowID:(long long)arg2 endingWithRowID:(long long)arg3 withFilters:(id)arg4;
- (id)entriesForKey:(id)arg1 startingFromRowID:(long long)arg2 count:(long long)arg3 withFilters:(id)arg4;
- (id)entryForKey:(id)arg1 withID:(long long)arg2;
- (void)loadLookupTableValuesIntoEntry:(id)arg1;
- (void)loadDynamicValuesIntoEntry:(id)arg1;
- (void)dailyTasks;
- (id)aggregateEntriesForKey:(id)arg1 withBucketLength:(double)arg2 inTimeIntervalRange:(struct _PLTimeIntervalRange)arg3;
- (id)portMappingEntryForPort:(id)arg1;
- (void)deleteAllEntriesForKey:(id)arg1 beforeTimestamp:(id)arg2;
- (void)enumerateProcessIDCacheWithBlock:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) NSMutableDictionary *processIDCache; // @synthesize processIDCache=_processIDCache;
- (void)cacheProcessIDEntry:(id)arg1;
- (id)lastEntryForKey:(id)arg1;
- (void)setLookupValueForEntryKey:(id)arg1 forKey:(id)arg2 forNumberValue:(long)arg3 withStringValue:(id)arg4;
- (id)lookupValueForEntryKey:(id)arg1 forKey:(id)arg2 forNumberValue:(long)arg3;
- (id)powerModelForOperatorName:(id)arg1;
- (id)lastEntryForKey:(id)arg1 withFilters:(id)arg2;
- (id)processIDEntryForPid:(int)arg1;
- (id)entriesForKey:(id)arg1 withProperties:(id)arg2;
- (void)initOperatorDependancies;
- (void)logMessage:(id)arg1 fromFile:(id)arg2 fromLineNumber:(long)arg3;
@property(retain) NSMutableSet *safeCopyInProgress; // @synthesize safeCopyInProgress=_safeCopyInProgress;
@property(retain) PLXPCResponderOperatorComposition *safeFileResponder; // @synthesize safeFileResponder=_safeFileResponder;
@property(retain) PLCFNotificationOperatorComposition *keybagFirstUnlockNotification; // @synthesize keybagFirstUnlockNotification=_keybagFirstUnlockNotification;
@property(retain) PLNSTimerOperatorComposition *periodicCheckpointTimer; // @synthesize periodicCheckpointTimer=_periodicCheckpointTimer;
@property BOOL storageReady; // @synthesize storageReady=_storageReady;
- (id)whiteBlackListForOperatorName:(id)arg1;
- (id)entryIntervalsForEntryKey:(id)arg1 inTimeRange:(struct _PLTimeIntervalRange)arg2 withIntervalStartKey:(id)arg3 withIntervalEndKey:(id)arg4 withFilters:(id)arg5;
- (id)accountingBoundariesInTimeRange:(struct _PLTimeIntervalRange)arg1 forAccountingGroups:(id)arg2;
- (void)removeProcessIDCacheForPid:(int)arg1;
- (id)entriesForKey:(id)arg1 withIDs:(id)arg2;
- (void)deleteAllEntriesForKey:(id)arg1;
- (long long)blockingWriteEntry:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)writeEntries:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)maintainAggregateStorageForEntryKey:(id)arg1;
- (void)removeStorageForEntryKey:(id)arg1;
- (void)setupStorageForOperatorClass:(Class)arg1;
- (void)setupStorageForOperatorName:(id)arg1;
- (void)removeProcessIDCacheForPidNumber:(id)arg1;
- (id)lastEntriesForKey:(id)arg1 count:(long long)arg2 withFilters:(id)arg3;
- (id)entriesForKey:(id)arg1 before:(BOOL)arg2 timeInterval:(double)arg3 count:(long long)arg4 withFilters:(id)arg5;
- (void)deleteAllEntriesForKey:(id)arg1 withFilters:(id)arg2;
- (void)deleteAllEntriesForKey:(id)arg1 beforeTimestamp:(id)arg2 withFilters:(id)arg3;
- (void)deleteEntryForKey:(id)arg1 WithRowID:(long long)arg2;
- (void)setAllNullValuesForEntryKey:(id)arg1 forKey:(id)arg2 toValue:(id)arg3 withFilters:(id)arg4;
- (void)writeAggregateEntry:(id)arg1;
- (void)dispatchSyncForEntrykey:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)dispatchAsyncForEntrykey:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)setupArrayForTableName:(id)arg1 forColumnNamed:(id)arg2 withValueType:(short)arg3;
- (void)setupTableName:(id)arg1 withEntryKeyConfig:(id)arg2 withKeyOrder:(id)arg3 isDynamic:(BOOL)arg4;
- (void)setupCoveringIndexOnTable:(id)arg1 withColumns:(id)arg2;
- (void)setupStorageForEntryKey:(id)arg1;
- (void)cleanupQuarantine;
- (void)linkMainDBToCRFolderWithUUID:(id)arg1;
@property(retain, nonatomic) NSString *mainDBInCRFolderUUIDString; // @synthesize mainDBInCRFolderUUIDString=_mainDBInCRFolderUUIDString;
@property(retain) PLKQueue *profileDefaultsKQueue; // @synthesize profileDefaultsKQueue=_profileDefaultsKQueue;
- (void)moveOldAnonFilesToCR;
- (void)deleteAllLinksInCRFolder;
- (void)deleteOldCRPowerlogLink;
@property(retain) PLKQueue *crashReporterKQueue; // @synthesize crashReporterKQueue=_crashReporterKQueue;
- (void)resetLinksInCRFolder;
- (void)handleSchemaMismatchForTable:(id)arg1 expectedVersion:(double)arg2 schemaMatch:(short)arg3;
- (short)verifySchemaVersionOfTable:(id)arg1 matchesExpectedVersion:(double)arg2;
- (void)removeOldPowerlogFiles;
- (void)cleanupTmp;
- (BOOL)setFileProtectionForPath:(id)arg1 withLevel:(id)arg2;
@property(retain) PLStorageOperator *storageOperator; // @synthesize storageOperator=_storageOperator;
@property(retain) PLStorageCache *lastEntryCache; // @synthesize lastEntryCache=_lastEntryCache;
- (void)updateEntry:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)writeEntry:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)setupStorageForOperator:(id)arg1;
- (void)stopStorage;
- (void)mergeTempDBFile;
- (void)startStorage;
@property(retain) PLSQLiteConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (id)init;
- (void)dealloc;

@end

