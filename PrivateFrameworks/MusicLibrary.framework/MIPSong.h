//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "PBCodable.h"

#import "NSCopying.h"

@class MIPAlbum, MIPArtist, MIPGenre, MIPPlaybackInfo, NSString;

@interface MIPSong : PBCodable <NSCopying>
{
    long long _geniusId;
    MIPAlbum *_album;
    MIPArtist *_artist;
    int _audioFormat;
    MIPArtist *_composer;
    int _discNumber;
    MIPGenre *_genre;
    NSString *_lyrics;
    MIPPlaybackInfo *_playbackInfo;
    int _trackNumber;
    int _userRating;
    BOOL _excludeFromShuffle;
    BOOL _hasVideo;
    struct {
        unsigned int geniusId:1;
        unsigned int audioFormat:1;
        unsigned int discNumber:1;
        unsigned int trackNumber:1;
        unsigned int userRating:1;
        unsigned int excludeFromShuffle:1;
        unsigned int hasVideo:1;
    } _has;
}

- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (BOOL)readFrom:(id)arg1;
- (void)mergeFrom:(id)arg1;
@property(retain, nonatomic) MIPAlbum *album; // @synthesize album=_album;
@property(retain, nonatomic) MIPPlaybackInfo *playbackInfo; // @synthesize playbackInfo=_playbackInfo;
@property(retain, nonatomic) NSString *lyrics; // @synthesize lyrics=_lyrics;
@property(nonatomic) BOOL hasVideo; // @synthesize hasVideo=_hasVideo;
@property(nonatomic) int audioFormat; // @synthesize audioFormat=_audioFormat;
@property(nonatomic) long long geniusId; // @synthesize geniusId=_geniusId;
@property(nonatomic) BOOL excludeFromShuffle; // @synthesize excludeFromShuffle=_excludeFromShuffle;
@property(nonatomic) int userRating; // @synthesize userRating=_userRating;
@property(nonatomic) int trackNumber; // @synthesize trackNumber=_trackNumber;
@property(nonatomic) int discNumber; // @synthesize discNumber=_discNumber;
@property(retain, nonatomic) MIPGenre *genre; // @synthesize genre=_genre;
@property(retain, nonatomic) MIPArtist *composer; // @synthesize composer=_composer;
@property(readonly, nonatomic) BOOL hasPlaybackInfo;
@property(readonly, nonatomic) BOOL hasLyrics;
@property(nonatomic) BOOL hasHasVideo;
@property(nonatomic) BOOL hasAudioFormat;
@property(nonatomic) BOOL hasGeniusId;
@property(nonatomic) BOOL hasExcludeFromShuffle;
@property(nonatomic) BOOL hasUserRating;
@property(nonatomic) BOOL hasTrackNumber;
@property(nonatomic) BOOL hasDiscNumber;
@property(readonly, nonatomic) BOOL hasGenre;
@property(readonly, nonatomic) BOOL hasComposer;
@property(readonly, nonatomic) BOOL hasAlbum;
@property(retain, nonatomic) MIPArtist *artist; // @synthesize artist=_artist;
@property(readonly, nonatomic) BOOL hasArtist;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;

@end

