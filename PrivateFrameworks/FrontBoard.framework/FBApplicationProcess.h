//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <FrontBoard/FBProcess.h>

#import "BKSProcessDelegate.h"
#import "BSWatchdogDelegate.h"

@class BKSApplicationDataStore, BKSProcess, BKSProcessAssertion, BSMachSendRight, FBApplicationInfo, FBApplicationProcessExitContext, FBApplicationWatchdog, FBProcessCPUStatistics, FBProcessExecutionContext, NSMutableArray, NSMutableSet, NSString;

@interface FBApplicationProcess : FBProcess <BKSProcessDelegate, BSWatchdogDelegate>
{
    BKSApplicationDataStore *_dataStore;
    NSMutableSet *_allowedLockedFilePaths;
    NSMutableArray *_queuedSceneBlocksToExecuteAfterLaunch;
    FBApplicationProcessExitContext *_exitContext;
    FBProcessExecutionContext *_executionContext;
    FBApplicationWatchdog *_watchdog;
    BOOL _bootstrapped;
    BOOL _bootstrapFailed;
    BOOL _hasFinishedLaunching;
    double _launchWatchdogTimeRemaining;
    int _pendingExit;
    int _beingDebugged;
    BSMachSendRight *_taskNamePort;
    BSMachSendRight *_taskPort;
    BSMachSendRight *_gsEventPort;
    int _terminationReason;
    int _defaultSceneSuspendType;
    FBProcessCPUStatistics *_cpuStatistics;
    double _execTime;
    BKSProcess *_bksProcess;
    BKSProcessAssertion *_launchProcessAssertion;
    BKSProcessAssertion *_continuousProcessAssertion;
    BOOL _supportsBackgroundTaskAssertions;
    BOOL _supportsSuspendOnLock;
    BOOL _recordingAudio;
    BOOL _nowPlayingWithAudio;
    BOOL _connectedToExternalAccessory;
    FBApplicationInfo *_applicationInfo;
}

+ (void)deleteAllJobs;
@property(nonatomic, getter=isConnectedToExternalAccessory) BOOL connectedToExternalAccessory; // @synthesize connectedToExternalAccessory=_connectedToExternalAccessory;
@property(readonly, retain, nonatomic) FBApplicationProcessExitContext *exitContext;
- (BOOL)isPendingExit;
- (void)watchdogCancelled:(id)arg1;
- (void)watchdogFired:(id)arg1;
- (void)watchdogStarted:(id)arg1;
- (void)killForReason:(int)arg1 andReport:(BOOL)arg2 withDescription:(id)arg3;
@property(nonatomic, getter=isBeingDebugged) BOOL beingDebugged; // @dynamic beingDebugged;
- (id)GSEventPort;
- (BOOL)isSystemApplicationProcess;
- (BOOL)isApplicationProcess;
@property(readonly, retain, nonatomic) FBApplicationInfo *applicationInfo; // @synthesize applicationInfo=_applicationInfo;
- (void)launchIfNecessary;
@property(nonatomic, getter=_queue_taskPort, setter=_queue_setTaskPort:) BSMachSendRight *taskPort; // @synthesize taskPort=_taskPort;
@property(nonatomic, getter=isNowPlayingWithAudio) BOOL nowPlayingWithAudio; // @synthesize nowPlayingWithAudio=_nowPlayingWithAudio;
@property(nonatomic, getter=isRecordingAudio) BOOL recordingAudio; // @synthesize recordingAudio=_recordingAudio;
@property(readonly, nonatomic, getter=_queue_supportsBackgroundTaskAssertions) BOOL supportsBackgroundTaskAssertions; // @synthesize supportsBackgroundTaskAssertions=_supportsBackgroundTaskAssertions;
- (void)executeBlockAfterLaunchCompletes:(CDUnknownBlockType)arg1;
- (void)noteWorkspaceLocked:(BOOL)arg1;
- (BOOL)bootstrapAndExec;
- (id)UIRemoteAppPortName;
- (id)GSEventPortName;
- (double)elapsedCPUTime;
- (id)initWithApplicationInfo:(id)arg1 callOutQueue:(id)arg2;
- (void)process:(id)arg1 isBeingDebugged:(BOOL)arg2;
- (void)processWillExpire:(id)arg1;
- (void)process:(id)arg1 taskStateDidChange:(int)arg2;
- (id)_workspaceServer;
- (int)_queue_ourTaskStateForBKSTaskState:(int)arg1;
- (BOOL)_queue_shouldWatchdogWithDeclineReason:(id *)arg1;
- (void)_queue_forceCrashReportWithReason:(int)arg1 description:(id)arg2;
- (void)_queue_killWithSignal:(int)arg1;
- (id)_queue_crashReportThermalsInfo;
- (BOOL)_queue_supportsContinuousBackgroundMode;
- (BOOL)_queue_isSystemApplication;
- (void)_queue_watchdogTerminateWithReason:(int)arg1 format:(id)arg2;
- (id)_queue_lockedFilePathsIgnoringAllowed;
- (int)_queue_effectiveVisibilityForVisibility:(int)arg1 underLock:(BOOL)arg2;
- (BOOL)_queue_consideredUnderLock;
- (int)_queue_bksVisibilityForVisibility:(int)arg1;
- (void)_queue_startWatchdogTimerOfType:(int)arg1 withDuration:(double)arg2;
- (void)_queue_takeLaunchProcessAssertion;
- (int)_queue_calculateDefaultSceneSuspendType;
- (void)_queue_setSupportsSuspendOnLock:(BOOL)arg1;
- (void)_queue_setSupportsBackgroundTaskAssertions:(BOOL)arg1;
- (void)_queue_waitToExecOrExit;
- (void)_queue_setupBKSProcess;
- (void)_queue_setAllowedLockedFilePaths:(id)arg1;
- (id)_queue_internalDebugEnvironmentVariables;
- (void)_queue_doGracefulKillWithCompletion:(CDUnknownBlockType)arg1 withWatchdog:(BOOL)arg2;
- (void)_queue_executeLaunchCompletionBlocks;
- (void)_queue_dropLaunchProcessAssertion;
- (void)_queue_dropContinuousProcessAssertion;
- (void)_queue_cancelWatchdogTimer;
- (unsigned long long)_queue_noteExitedForForceQuit:(BOOL)arg1;
- (void)_queue_processReallyDidExit;
- (void)_queue_invalidateBKSProcess;
- (BOOL)_queue_finishLaunch;
- (BOOL)_queue_bootstrapAndExec;
- (id)_queue_UIRemoteAppPortName;
- (id)_queue_GSEventPortName;
- (void)_queue_enumerateApplicationObserversWithBlock:(CDUnknownBlockType)arg1;
- (void)_queue_killForReason:(int)arg1 andReport:(BOOL)arg2 withDescription:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setPendingExit:(BOOL)arg1;
- (void)killForReason:(int)arg1 andReport:(BOOL)arg2 withDescription:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)_queue_executionContext;
- (id)initWithApplicationInfo:(id)arg1 pid:(int)arg2 callOutQueue:(id)arg3;
@property(readonly, nonatomic, getter=_queue_supportsSuspendOnLock) BOOL supportsSuspendOnLock; // @synthesize supportsSuspendOnLock=_supportsSuspendOnLock;
@property(readonly, nonatomic, getter=_queue_launchWatchdogTimeRemaining) double launchWatchdogTimeRemaining;
- (void)_queue_executeBlockAfterLaunchCompletes:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic, getter=_queue_terminationReason) int terminationReason;
@property(readonly, nonatomic, getter=_queue_execTime) double execTime;
@property(readonly, retain, nonatomic, getter=_queue_cpuStatistics) FBProcessCPUStatistics *cpuStatistics; // @synthesize cpuStatistics=_cpuStatistics;
- (void)_queue_sceneNeedsGracefulExit:(id)arg1 withExitCompletion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic, getter=_queue_defaultSuspendType) int defaultSuspendType;
@property(readonly, nonatomic, getter=_queue_hasFinishedLaunching) BOOL hasFinishedLaunching; // @synthesize hasFinishedLaunching=_hasFinishedLaunching;
- (void)_queue_sceneLifecycleStateChanged:(id)arg1;
- (id)initWithBundleID:(id)arg1 pid:(int)arg2 callOutQueue:(id)arg3;
- (void)_queue_processDidExit;
- (void)_queue_callExitObservers;
- (int)_queue_effectiveVisibilityForVisibility:(int)arg1;
- (void)_queue_setVisibility:(int)arg1;
- (void)_queue_setTaskState:(int)arg1;
- (id)_queue_name;
- (id)_createWorkspace;
- (int)_queue_effectiveVisibilityForSceneSettings:(id)arg1;
- (id)_applicationWorkspace;
@property(retain, nonatomic) FBProcessExecutionContext *executionContext; // @dynamic executionContext;
- (void)stop;
- (id)_workspace;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <FBApplicationProcessDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

