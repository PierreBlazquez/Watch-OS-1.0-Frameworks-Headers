//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class MPAVController, MPAVItem, MPUReportingController, NSString;

@interface MPUReportingPlaybackObserver : NSObject
{
    BOOL _isReloadingWithPlaybackContext;
    BOOL _isScrubbing;
    MPAVItem *_itemForCurrentTimeChange;
    NSString *_playbackSessionID;
    double _startTimeForCurrentTimeChange;
    BOOL _offline;
    BOOL _SBEnabled;
    MPAVController *_player;
    MPUReportingController *_reportingController;
    double _startTimeForCurrentItem;
    unsigned long long _storeAccountID;
}

@property(readonly, nonatomic) MPAVController *player; // @synthesize player=_player;
@property(nonatomic, getter=isSBEnabled) BOOL SBEnabled; // @synthesize SBEnabled=_SBEnabled;
@property(nonatomic, getter=isOffline) BOOL offline; // @synthesize offline=_offline;
@property(nonatomic) unsigned long long storeAccountID; // @synthesize storeAccountID=_storeAccountID;
@property(nonatomic) double startTimeForCurrentItem; // @synthesize startTimeForCurrentItem=_startTimeForCurrentItem;
@property(readonly, nonatomic) MPUReportingController *reportingController; // @synthesize reportingController=_reportingController;
- (id)_newContainerContextFromMPAVItem:(id)arg1;
- (void)willTransitionItemForQueueChange:(id)arg1;
- (void)willTransitionItemForBan:(id)arg1;
- (void)willHitPlaybackTimeoutEndingPlayback:(BOOL)arg1 withCurrentItem:(id)arg2;
- (void)didTransitionItemForQueueChange:(id)arg1;
- (void)didTransitionItemForBan:(id)arg1;
- (void)didHitPlaybackTimeoutEndingPlayback:(BOOL)arg1 withCurrentItem:(id)arg2;
- (id)initWithPlayer:(id)arg1 reportingController:(id)arg2;
- (id)newReportingPlaybackActivityEventForPlayActivityEvent:(id)arg1 MPAVItem:(id)arg2;
- (id)newPlayActivityEventForMPAVItem:(id)arg1;
- (void)_reportPlaybackEndedForTimeoutWithItem:(id)arg1;
- (void)_playerWillSetCurrentTimeNotification:(id)arg1;
- (void)_playerDidSetCurrentTimeNotification:(id)arg1;
- (void)_playerWillReloadWithPlaybackContextNotification:(id)arg1;
- (void)_playerDidReloadWithPlaybackContextNotification:(id)arg1;
- (void)_playerPlaybackStateDidChangeNotification:(id)arg1;
- (void)_playerItemWillChangeNotification:(id)arg1;
- (void)_playerItemDidChangeNotification:(id)arg1;
- (void).cxx_destruct;
- (void)dealloc;

@end

