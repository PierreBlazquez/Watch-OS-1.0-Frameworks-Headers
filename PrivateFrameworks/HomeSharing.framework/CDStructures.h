//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGSize {
    float width;
    float height;
};

struct FairPlayHWInfo_ {
    unsigned int _field1;
    unsigned char _field2[20];
};

struct PropertyInfo {
    struct unordered_map<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>>> _field1;
};

struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, void *>;

struct hostent {
    char *_field1;
    char **_field2;
    int _field3;
    int _field4;
    char **_field5;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<unsigned int, DAAP::ValueType>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int *_field8;
} CDStruct_16f720f6;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    float _field8;
    float _field9;
    unsigned int *_field10;
} CDStruct_9a46e3d5;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
} CDStruct_cc4e5495;

typedef struct {
    unsigned int _field1;
    char *_field2;
    unsigned int _field3;
    int _field4;
} CDStruct_72a29a62;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

