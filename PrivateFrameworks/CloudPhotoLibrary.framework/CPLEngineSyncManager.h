//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "CPLAbstractObject.h"
#import "CPLBackgroundDownloadsTaskDelegate.h"
#import "CPLBackgroundUploadsTaskDelegate.h"
#import "CPLEngineComponent.h"
#import "CPLEngineSyncEmergencyTaskDelegate.h"
#import "CPLMinglePulledChangesTaskDelegate.h"
#import "CPLPullFromTransportTaskDelegate.h"
#import "CPLPushToTransportTaskDelegate.h"

@class CPLBackgroundDownloadsTask, CPLBackgroundUploadsTask, CPLEngineLibrary, CPLEngineSyncEmergencyTask, CPLGetAssetCountsTask, CPLMinglePulledChangesTask, CPLPlatformObject, CPLPullFromTransportTask, CPLPushToTransportTask, NSError, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString;

@interface CPLEngineSyncManager : NSObject <CPLEngineSyncEmergencyTaskDelegate, CPLPushToTransportTaskDelegate, CPLPullFromTransportTaskDelegate, CPLMinglePulledChangesTaskDelegate, CPLBackgroundUploadsTaskDelegate, CPLBackgroundDownloadsTaskDelegate, CPLAbstractObject, CPLEngineComponent>
{
    id <CPLEngineStoreUserIdentifier> _transportUserIdentifier;
    BOOL _setupIsDone;
    id <CPLEngineTransportSetupTask> _setupTask;
    NSMutableArray *_setupBarriers;
    CDUnknownBlockType _closingCompletionHandler;
    NSObject<OS_dispatch_queue> *_lock;
    NSError *_lastError;
    CPLEngineSyncEmergencyTask *_managementTask;
    NSMutableArray *_archivedManagementTasks;
    NSMutableDictionary *_completionHandlerPerTaskIdentifier;
    CPLPushToTransportTask *_pushTask;
    CPLGetAssetCountsTask *_getAssetCountsTask;
    CPLPullFromTransportTask *_pullTask;
    CPLMinglePulledChangesTask *_mingleTask;
    CPLBackgroundUploadsTask *_backgroundUploadsTask;
    CPLBackgroundDownloadsTask *_backgroundDownloadsTask;
    unsigned int _shouldRestartSessionFromState;
    NSMutableArray *_lastErrors;
    BOOL _foreground;
    BOOL _hasTransactionForSyncSession;
    BOOL _shouldTryToMingleImmediately;
    CPLPlatformObject *_platformObject;
    CPLEngineLibrary *_engineLibrary;
    unsigned int _state;
}

+ (id)shortDescriptionForState:(unsigned int)arg1;
+ (id)descriptionForState:(unsigned int)arg1;
+ (id)platformImplementationProtocol;
@property(nonatomic) BOOL shouldTryToMingleImmediately; // @synthesize shouldTryToMingleImmediately=_shouldTryToMingleImmediately;
- (void)_cancelAllTasksForGetAssetCounts;
- (void)startEmergencyTask:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)task:(id)arg1 wantsToDownloadBatchesFromSyncAnchor:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)endClientWork:(id)arg1;
- (void)beginClientWork:(id)arg1;
- (void)_loadManagementTasks;
- (float)_progressForBackgroundDownloadsTask:(id)arg1 progress:(float)arg2;
- (float)_progressForBackgroundUploadsTask:(id)arg1 progress:(float)arg2;
- (float)_progressForPullTask:(id)arg1 progress:(float)arg2;
- (float)_progressForGetAssetCountsTask:(id)arg1 progress:(float)arg2;
- (float)_progressForPushTask:(id)arg1 progress:(float)arg2;
- (BOOL)_didFinishBackgroundDownloadsTask:(id)arg1 withError:(id)arg2 shouldStop:(char *)arg3;
- (BOOL)_didFinishBackgroundUploadsTask:(id)arg1 withError:(id)arg2 shouldStop:(char *)arg3;
- (BOOL)_didFinishPullTask:(id)arg1 withError:(id)arg2 shouldStop:(char *)arg3;
- (BOOL)_didFinishGetAssetCountsTask:(id)arg1 withError:(id)arg2 shouldStop:(char *)arg3;
- (BOOL)_didFinishPushTask:(id)arg1 withError:(id)arg2 shouldStop:(char *)arg3;
- (BOOL)_didFinishManagementTask:(id)arg1 withError:(id)arg2 shouldStop:(char *)arg3;
- (BOOL)_didFinishSetupTaskWithError:(id)arg1 shouldStop:(char *)arg2;
- (BOOL)_prepareAndLaunchSyncTask:(id *)arg1;
- (void)_saveManagementTasks;
- (void)_setErrorForSyncSession:(id)arg1;
- (void)_moveAllTasksToBackgroundLocked;
- (void)_restartSyncSessionFromStateLocked:(unsigned int)arg1 cancelIfNecessary:(BOOL)arg2;
- (void)_advanceToNextStateLocked;
- (void)_resetErrorForSyncSession;
- (void)_cancelAllTasksLocked;
- (void)_notifyEndOfSyncSession;
- (BOOL)_launchNecessaryTasksForCurrentStateLocked;
- (BOOL)_launchNecessaryTasksForBackgroundDownloads;
- (BOOL)_launchNecessaryTasksForBackgroundUploads;
- (BOOL)_launchNecessaryTasksForPull;
- (BOOL)_launchNecessaryTasksForGetAssetCounts;
- (BOOL)_launchNecessaryTasksForPush;
- (BOOL)_launchManagementTask;
- (BOOL)_launchSetupTask;
- (id)_descriptionForBackgroundDownloadsTasks;
- (id)_descriptionForBackgroundUploadsTasks;
- (id)_descriptionForPullTasks;
- (id)_descriptionForGetAssetCountsTasks;
- (id)_descriptionForPushTasks;
- (id)_descriptionForManagementTasks;
- (id)_descriptionForSetupTasks;
- (void)_cancelAllTasksForBackgroundDownloads;
- (void)_cancelAllTasksForBackgroundUploads;
- (void)_cancelAllTasksForPull;
- (void)_cancelAllTasksForPush;
- (void)_cancelAllTasksForManagement;
- (void)_cancelAllTasksForSetup;
- (id)_descriptionForLaunchedTasks;
- (id)_descriptionForCurrentState;
- (void)kickOffSyncSession;
- (void)task:(id)arg1 didProgress:(float)arg2;
- (void)task:(id)arg1 didFinishWithError:(id)arg2;
- (id)task:(id)arg1 wantsToPushBatch:(id)arg2 continuationBlock:(CDUnknownBlockType)arg3;
- (void)addSetupBarrier:(CDUnknownBlockType)arg1;
- (void)resetTransportUserIdentifierAndRestartSync:(BOOL)arg1;
- (void)cancelCurrentSyncSession;
- (void)setSyncSessionShouldBeForeground:(BOOL)arg1;
- (void)startSyncSessionWithMinimalPhase:(unsigned int)arg1;
- (id)initWithEngineLibrary:(id)arg1;
- (void)getStatusDictionaryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)getStatusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)closeAndDeactivate:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) CPLPlatformObject *platformObject; // @synthesize platformObject=_platformObject;
@property(readonly, nonatomic) __weak CPLEngineLibrary *engineLibrary; // @synthesize engineLibrary=_engineLibrary;
- (void)openWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void).cxx_destruct;
- (id)componentName;
@property(nonatomic, setter=_setState:) unsigned int state; // @synthesize state=_state;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

