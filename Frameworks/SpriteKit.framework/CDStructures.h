//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct CGPath;

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct CGVector {
    float dx;
    float dy;
};

struct MaxRectTexturePacker;

struct PKCAether;

struct PKPath;

struct SCNVector3 {
    float x;
    float y;
    float z;
};

struct SKCAction {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
};

struct SKCAnimate {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    struct vector<SKTexture *, std::__1::allocator<SKTexture *>> _field20;
    double _field21;
    id _field22;
    struct {
        float _field1;
        float _field2;
    } _field23;
    char _field24;
    char _field25;
};

struct SKCColorize {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field20;
    float _field21;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field22;
    float _field23;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field24;
    float _field25;
    char _field26;
};

struct SKCCustomAction {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    CDUnknownBlockType _field20;
};

struct SKCEmitterSprite {
    CDUnknownFunctionPointerType *_field1;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field2;
    struct shared_ptr<PKPath> _field3;
    id _field4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    _Bool _field5;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    float _field6;
    struct SKCSprite *_field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    id _field11;
    id _field12;
    _Bool _field13;
    _Bool _field14;
    struct __CVBuffer *_field15;
    struct __CVBuffer *_field16;
    struct __CVOpenGLESTextureCache *_field17;
    id _field18;
    id _field19;
    id _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    struct {
        float _field1;
        float _field2;
    } _field24;
    struct {
        float _field1;
        float _field2;
    } _field25;
    struct {
        float _field1;
        float _field2;
    } _field26;
    CDStruct_c7fe8b62 _field27;
    struct __CVBuffer *_field28;
    struct __CVBuffer *_field29;
    _Bool _field30;
    CDStruct_cfe07629 _field31;
    CDStruct_183601bc *_field32;
    CDStruct_183601bc *_field33;
    CDStruct_31cefc2d _field34;
    CDStruct_c7fe8b62 _field35;
    int _field36;
    CDStruct_c7fe8b62 _field37;
    struct SKCSprite *_field38;
    union _GLKMatrix4 _field39;
    struct list<SKCSprite *, std::__1::allocator<SKCSprite *>> _field40;
    struct set<SKCSprite *, std::__1::less<SKCSprite *>, std::__1::allocator<SKCSprite *>> *_field41;
    struct list<SKCSprite *, std::__1::allocator<SKCSprite *>> *_field42;
    unsigned int _field43;
    unsigned int _field44;
    _Bool _field45;
    struct set<SKCSprite *, std::__1::less<SKCSprite *>, std::__1::allocator<SKCSprite *>> _field46;
    struct unordered_set<SKCAction *, std::__1::hash<SKCAction *>, std::__1::equal_to<SKCAction *>, std::__1::allocator<SKCAction *>> _field47;
    float _field48;
    float _field49;
    float _field50;
    id _field51;
    struct {
        float _field1;
        float _field2;
    } _field52;
    id _field53;
    _Bool _field54;
    CDStruct_c7fe8b62 _field55;
    struct {
        float _field1;
        float _field2;
    } _field56;
    unsigned int _field57;
    struct {
        float _field1;
        float _field2;
    } _field58;
    struct {
        float _field1;
        float _field2;
    } _field59;
    float _field60;
    float _field61;
    float _field62;
    float _field63;
    float _field64;
    float _field65;
    float _field66;
    float _field67;
    float _field68;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field69;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field70;
    float _field71;
    float _field72;
    float _field73;
    CDStruct_c7fe8b62 _field74;
    id _field75;
    float _field76;
    id _field77;
    shared_ptr_11a7378b _field78;
    _Bool _field79;
    _Bool _field80;
    struct SKCSprite *_field81;
    id _field82;
    struct SKCParticleSystemNode *_field83;
    struct SKCParticleSystem *_field84;
    float _field85;
    _Bool _field86;
    struct SKCKeyframeSequence *_field87;
    struct SKCKeyframeSequence *_field88;
    struct SKCKeyframeSequence *_field89;
    struct SKCKeyframeSequence *_field90;
    struct SKCKeyframeSequence *_field91;
    struct SKCKeyframeSequence *_field92;
    unsigned int _field93;
    unsigned int _field94;
    int _field95;
    int _field96;
    struct vector<SKCParticle *, std::__1::allocator<SKCParticle *>> _field97;
    struct vector<SKCParticle *, std::__1::allocator<SKCParticle *>> _field98;
    double _field99;
    double _field100;
    double _field101;
    double _field102;
    struct CGSize _field103;
    float _field104;
    float _field105;
    float _field106;
    float _field107;
    float _field108;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field109;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field110;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field111;
    float _field112;
    float _field113;
    float _field114;
    struct list<PKPoint, std::__1::allocator<PKPoint>> _field115;
    struct {
        float _field1;
        float _field2;
    } _field116;
    struct {
        float _field1;
        float _field2;
    } _field117;
    float _field118;
    float _field119;
    float _field120;
    float _field121;
    struct {
        float _field1;
        float _field2;
    } _field122;
    float _field123;
    float _field124;
    float _field125;
    float _field126;
    float _field127;
    float _field128;
    float _field129;
    float _field130;
    float _field131;
    float _field132;
    float _field133;
    float _field134;
    id _field135;
    int _field136;
    unsigned int _field137;
};

struct SKCFade {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    char _field23;
};

struct SKCFalloff {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    char _field25;
    char _field26;
};

struct SKCFollowPath {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    unsigned int _field21;
    struct PKPath *_field22;
    struct {
        float _field1;
        float _field2;
    } _field23;
    char _field24;
    char _field25;
};

struct SKCGroup {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field20;
};

struct SKCHide {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    _Bool _field20;
};

struct SKCKeyframeSequence {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    float *_field5;
    float *_field6;
};

struct SKCMove {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    struct {
        float _field1;
        float _field2;
    } _field21;
    struct {
        float _field1;
        float _field2;
    } _field22;
    struct {
        float _field1;
        float _field2;
    } _field23;
    char _field24;
    char _field25;
    char _field26;
    char _field27;
};

struct SKCParticle;

struct SKCParticleSystem;

struct SKCParticleSystemNode;

struct SKCPlaySound {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    id _field20;
    char _field21;
    char _field22;
};

struct SKCRenderPassNew {
    struct xglProgram *_field1;
    union _GLKMatrix4 _field2;
    unsigned int _field3;
    unsigned long _field4;
    unsigned int _field5;
    unsigned int _field6;
    int _field7;
    CDStruct_c7fe8b62 _field8;
    struct SKCSprite *_field9;
    unsigned int _field10;
    unsigned int _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    CDStruct_f129a329 _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    id _field34;
    float _field35;
    float _field36;
    unsigned int _field37;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field38;
    id _field39;
    CDStruct_c7fe8b62 _field40;
    CDStruct_c7fe8b62 _field41;
    struct {
        float _field1;
        float _field2;
    } _field42;
    float _field43;
    unsigned int _field44;
    _Bool _field45;
    char *_field46;
    id _field47;
};

struct SKCRenderer {
    id _field1;
    id _field2;
    char _field3;
    char _field4;
    float _field5;
    float _field6;
    id _field7;
    id _field8;
    float _field9;
    struct {
        float _field1;
        float _field2;
    } _field10;
    CDStruct_2605ac7d _field11;
    CDStruct_2605ac7d _field12;
    struct stack<PKRect, std::__1::deque<PKRect, std::__1::allocator<PKRect>>> _field13;
    struct stack<_GLKMatrix4, std::__1::deque<_GLKMatrix4, std::__1::allocator<_GLKMatrix4>>> _field14;
    struct stack<SKCTextureAttachment, std::__1::deque<SKCTextureAttachment, std::__1::allocator<SKCTextureAttachment>>> _field15;
    struct {
        float _field1;
        float _field2;
    } _field16;
    struct {
        float _field1;
        float _field2;
    } _field17;
    struct SKCRenderPassNew _field18;
    unsigned int _field19;
    int _field20;
    int _field21;
    float _field22;
    float _field23;
    int _field24;
    float _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    float _field32;
    float _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    double _field38;
    float _field39;
    unsigned int _field40;
    int _field41;
    id _field42;
    id _field43;
    id _field44;
    id _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct list<SKCRenderPassNew, std::__1::allocator<SKCRenderPassNew>> _field50;
    unsigned int _field51;
    unsigned int _field52;
    unsigned short *_field53;
    CDStruct_cfe07629 _field54[10500];
    unsigned int _field55;
    unsigned int _field56;
    unsigned int _field57;
    unsigned int _field58;
    struct xglProgram *_field59;
    struct xglProgram *_field60;
    struct xglProgram *_field61;
    struct xglProgram *_field62;
    struct xglProgram *_field63;
    struct xglProgram *_field64;
    id _field65;
    int _field66;
    id _field67;
    int _field68;
    unsigned int _field69;
    unsigned int _field70;
    struct list<SKCSprite *, std::__1::allocator<SKCSprite *>> _field71;
    struct vector<const SKCRenderer::SpriteRenderInfo *, std::__1::allocator<const SKCRenderer::SpriteRenderInfo *>> _field72;
    struct vector<SKCRenderer::SpriteRenderInfo, std::__1::allocator<SKCRenderer::SpriteRenderInfo>> _field73;
    struct SKRenderQuadPool _field74;
    struct map<const SKCSprite *, PKPoint, std::__1::less<const SKCSprite *>, std::__1::allocator<std::__1::pair<const SKCSprite *const, PKPoint>>> _field75;
    struct list<const SKCSprite *, std::__1::allocator<const SKCSprite *>> _field76;
    struct map<const SKCSprite *, ShadowInfo *, std::__1::less<const SKCSprite *>, std::__1::allocator<std::__1::pair<const SKCSprite *const, ShadowInfo *>>> _field77;
    struct map<const SKCSprite *, std::__1::list<const SKCRenderer::SpriteRenderInfo *, std::__1::allocator<const SKCRenderer::SpriteRenderInfo *>>, std::__1::less<const SKCSprite *>, std::__1::allocator<std::__1::pair<const SKCSprite *const, std::__1::list<const SKCRenderer::SpriteRenderInfo *, std::__1::allocator<const SKCRenderer::SpriteRenderInfo *>>>>> _field78;
    id _field79;
    _Bool _field80;
    _Bool _field81;
    _Bool _field82;
    _Bool _field83;
    _Bool _field84;
    _Bool _field85;
    _Bool _field86;
    _Bool _field87;
    _Bool _field88;
    _Bool _field89;
    _Bool _field90;
    _Bool _field91;
    _Bool _field92;
    _Bool _field93;
};

struct SKCRepeat {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    struct SKCAction *_field20;
    unsigned int _field21;
    unsigned int _field22;
    char _field23;
};

struct SKCResize {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    struct {
        float _field1;
        float _field2;
    } _field21;
    struct {
        float _field1;
        float _field2;
    } _field22;
    struct {
        float _field1;
        float _field2;
    } _field23;
    char _field24;
    char _field25;
    char _field26;
    char _field27;
};

struct SKCRotate {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    float _field25;
    float _field26;
    float _field27;
    float _field28;
    float _field29;
    char _field30;
    char _field31;
    char _field32;
    char _field33;
    char _field34;
    char _field35;
};

struct SKCScale {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    float _field25;
    float _field26;
    float _field27;
    float _field28;
    char _field29;
    char _field30;
    char _field31;
    char _field32;
};

struct SKCSequence {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    struct vector<SKCAction *, std::__1::allocator<SKCAction *>> _field20;
    unsigned long _field21;
};

struct SKCShapeSprite {
    CDUnknownFunctionPointerType *_field1;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field2;
    struct shared_ptr<PKPath> _field3;
    id _field4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    _Bool _field5;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    float _field6;
    struct SKCSprite *_field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    id _field11;
    id _field12;
    _Bool _field13;
    _Bool _field14;
    struct __CVBuffer *_field15;
    struct __CVBuffer *_field16;
    struct __CVOpenGLESTextureCache *_field17;
    id _field18;
    id _field19;
    id _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    struct {
        float _field1;
        float _field2;
    } _field24;
    struct {
        float _field1;
        float _field2;
    } _field25;
    struct {
        float _field1;
        float _field2;
    } _field26;
    CDStruct_c7fe8b62 _field27;
    struct __CVBuffer *_field28;
    struct __CVBuffer *_field29;
    _Bool _field30;
    CDStruct_cfe07629 _field31;
    CDStruct_183601bc *_field32;
    CDStruct_183601bc *_field33;
    CDStruct_31cefc2d _field34;
    CDStruct_c7fe8b62 _field35;
    int _field36;
    CDStruct_c7fe8b62 _field37;
    struct SKCSprite *_field38;
    union _GLKMatrix4 _field39;
    struct list<SKCSprite *, std::__1::allocator<SKCSprite *>> _field40;
    struct set<SKCSprite *, std::__1::less<SKCSprite *>, std::__1::allocator<SKCSprite *>> *_field41;
    struct list<SKCSprite *, std::__1::allocator<SKCSprite *>> *_field42;
    unsigned int _field43;
    unsigned int _field44;
    _Bool _field45;
    struct set<SKCSprite *, std::__1::less<SKCSprite *>, std::__1::allocator<SKCSprite *>> _field46;
    struct unordered_set<SKCAction *, std::__1::hash<SKCAction *>, std::__1::equal_to<SKCAction *>, std::__1::allocator<SKCAction *>> _field47;
    float _field48;
    float _field49;
    float _field50;
    id _field51;
    struct {
        float _field1;
        float _field2;
    } _field52;
    id _field53;
    _Bool _field54;
    CDStruct_c7fe8b62 _field55;
    struct {
        float _field1;
        float _field2;
    } _field56;
    unsigned int _field57;
    struct {
        float _field1;
        float _field2;
    } _field58;
    struct {
        float _field1;
        float _field2;
    } _field59;
    float _field60;
    float _field61;
    float _field62;
    float _field63;
    float _field64;
    float _field65;
    float _field66;
    float _field67;
    float _field68;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field69;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field70;
    float _field71;
    float _field72;
    float _field73;
    CDStruct_c7fe8b62 _field74;
    id _field75;
    float _field76;
    id _field77;
    shared_ptr_11a7378b _field78;
    struct SKCompositeBezierPath *_field79;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field80;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field81;
    int _field82;
    float _field83;
    char _field84;
    struct CGPath *_field85;
    float _field86;
    char _field87;
    float _field88;
    int _field89;
    int _field90;
    float _field91;
};

struct SKCSpeed {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    char _field25;
    char _field26;
};

struct SKCSprite {
    CDUnknownFunctionPointerType *_field1;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field2;
    struct shared_ptr<PKPath> _field3;
    id _field4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    _Bool _field5;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    float _field6;
    struct SKCSprite *_field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    id _field11;
    id _field12;
    _Bool _field13;
    _Bool _field14;
    struct __CVBuffer *_field15;
    struct __CVBuffer *_field16;
    struct __CVOpenGLESTextureCache *_field17;
    id _field18;
    id _field19;
    id _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    struct {
        float _field1;
        float _field2;
    } _field24;
    struct {
        float _field1;
        float _field2;
    } _field25;
    struct {
        float _field1;
        float _field2;
    } _field26;
    CDStruct_c7fe8b62 _field27;
    struct __CVBuffer *_field28;
    struct __CVBuffer *_field29;
    _Bool _field30;
    CDStruct_cfe07629 _field31;
    CDStruct_183601bc *_field32;
    CDStruct_183601bc *_field33;
    CDStruct_31cefc2d _field34;
    CDStruct_c7fe8b62 _field35;
    int _field36;
    CDStruct_c7fe8b62 _field37;
    struct SKCSprite *_field38;
    union _GLKMatrix4 _field39;
    struct list<SKCSprite *, std::__1::allocator<SKCSprite *>> _field40;
    struct set<SKCSprite *, std::__1::less<SKCSprite *>, std::__1::allocator<SKCSprite *>> *_field41;
    struct list<SKCSprite *, std::__1::allocator<SKCSprite *>> *_field42;
    unsigned int _field43;
    unsigned int _field44;
    _Bool _field45;
    struct set<SKCSprite *, std::__1::less<SKCSprite *>, std::__1::allocator<SKCSprite *>> _field46;
    struct unordered_set<SKCAction *, std::__1::hash<SKCAction *>, std::__1::equal_to<SKCAction *>, std::__1::allocator<SKCAction *>> _field47;
    float _field48;
    float _field49;
    float _field50;
    id _field51;
    struct {
        float _field1;
        float _field2;
    } _field52;
    id _field53;
    _Bool _field54;
    CDStruct_c7fe8b62 _field55;
    struct {
        float _field1;
        float _field2;
    } _field56;
    unsigned int _field57;
    struct {
        float _field1;
        float _field2;
    } _field58;
    struct {
        float _field1;
        float _field2;
    } _field59;
    float _field60;
    float _field61;
    float _field62;
    float _field63;
    float _field64;
    float _field65;
    float _field66;
    float _field67;
    float _field68;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field69;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field70;
    float _field71;
    float _field72;
    float _field73;
    CDStruct_c7fe8b62 _field74;
    id _field75;
    float _field76;
    id _field77;
    shared_ptr_11a7378b _field78;
};

struct SKCStrength {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    char _field25;
    char _field26;
};

struct SKCWait {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    _Bool _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    _Bool _field12;
    _Bool _field13;
    CDUnknownBlockType _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
};

struct SKCompositeBezierPath;

struct SKRenderQuadPool {
    struct vector<SKRenderQuad *, std::__1::allocator<SKRenderQuad *>> _field1;
    unsigned int _field2;
    unsigned int _field3;
    CDStruct_183601bc *_field4;
    unsigned int _field5;
};

struct SpriteRenderInfo;

struct TextureInfo;

struct Token;

struct __CVBuffer;

struct __CVOpenGLESTextureCache;

struct __hash_node<SKCAction *, void *>;

struct __list_node<PKPoint, void *>;

struct __list_node<SKCAction *, void *>;

struct __list_node<SKCRenderPassNew, void *>;

struct __list_node<SKCSprite *, void *>;

struct __list_node<const SKCSprite *, void *>;

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct deque<PKRect, std::__1::allocator<PKRect>> {
    struct __split_buffer<PKRect *, std::__1::allocator<PKRect *>> {
        CDStruct_183601bc **_field1;
        CDStruct_183601bc **_field2;
        CDStruct_183601bc **_field3;
        struct __compressed_pair<PKRect **, std::__1::allocator<PKRect *>> {
            CDStruct_183601bc **_field1;
        } _field4;
    } _field1;
    unsigned int _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<PKRect>> {
        unsigned long _field1;
    } _field3;
};

struct deque<SKCTextureAttachment, std::__1::allocator<SKCTextureAttachment>> {
    struct __split_buffer<SKCTextureAttachment *, std::__1::allocator<SKCTextureAttachment *>> {
        CDStruct_183601bc **_field1;
        CDStruct_183601bc **_field2;
        CDStruct_183601bc **_field3;
        struct __compressed_pair<SKCTextureAttachment **, std::__1::allocator<SKCTextureAttachment *>> {
            CDStruct_183601bc **_field1;
        } _field4;
    } _field1;
    unsigned int _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<SKCTextureAttachment>> {
        unsigned long _field1;
    } _field3;
};

struct deque<_GLKMatrix4, std::__1::allocator<_GLKMatrix4>> {
    struct __split_buffer<_GLKMatrix4 *, std::__1::allocator<_GLKMatrix4 *>> {
        union _GLKMatrix4 **_field1;
        union _GLKMatrix4 **_field2;
        union _GLKMatrix4 **_field3;
        struct __compressed_pair<_GLKMatrix4 **, std::__1::allocator<_GLKMatrix4 *>> {
            union _GLKMatrix4 **_field1;
        } _field4;
    } _field1;
    unsigned int _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<_GLKMatrix4>> {
        unsigned long _field1;
    } _field3;
};

struct list<PKPoint, std::__1::allocator<PKPoint>> {
    struct __list_node_base<PKPoint, void *> {
        struct __list_node<PKPoint, void *> *_field1;
        struct __list_node<PKPoint, void *> *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<PKPoint, void *>>> {
        unsigned long _field1;
    } _field2;
};

struct list<SKCAction *, std::__1::allocator<SKCAction *>> {
    struct __list_node_base<SKCAction *, void *> {
        struct __list_node<SKCAction *, void *> *_field1;
        struct __list_node<SKCAction *, void *> *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCAction *, void *>>> {
        unsigned long _field1;
    } _field2;
};

struct list<SKCRenderPassNew, std::__1::allocator<SKCRenderPassNew>> {
    struct __list_node_base<SKCRenderPassNew, void *> {
        struct __list_node<SKCRenderPassNew, void *> *_field1;
        struct __list_node<SKCRenderPassNew, void *> *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCRenderPassNew, void *>>> {
        unsigned long _field1;
    } _field2;
};

struct list<SKCSprite *, std::__1::allocator<SKCSprite *>> {
    struct __list_node_base<SKCSprite *, void *> {
        struct __list_node<SKCSprite *, void *> *_field1;
        struct __list_node<SKCSprite *, void *> *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCSprite *, void *>>> {
        unsigned long _field1;
    } _field2;
};

struct list<const SKCSprite *, std::__1::allocator<const SKCSprite *>> {
    struct __list_node_base<const SKCSprite *, void *> {
        struct __list_node<const SKCSprite *, void *> *_field1;
        struct __list_node<const SKCSprite *, void *> *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const SKCSprite *, void *>>> {
        unsigned long _field1;
    } _field2;
};

struct map<const SKCSprite *, PKPoint, std::__1::less<const SKCSprite *>, std::__1::allocator<std::__1::pair<const SKCSprite *const, PKPoint>>> {
    struct __tree<std::__1::__value_type<const SKCSprite *, PKPoint>, std::__1::__map_value_compare<const SKCSprite *, std::__1::__value_type<const SKCSprite *, PKPoint>, std::__1::less<const SKCSprite *>, true>, std::__1::allocator<std::__1::__value_type<const SKCSprite *, PKPoint>>> {
        struct __tree_node<std::__1::__value_type<const SKCSprite *, PKPoint>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const SKCSprite *, PKPoint>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const SKCSprite *, std::__1::__value_type<const SKCSprite *, PKPoint>, std::__1::less<const SKCSprite *>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct map<const SKCSprite *, ShadowInfo *, std::__1::less<const SKCSprite *>, std::__1::allocator<std::__1::pair<const SKCSprite *const, ShadowInfo *>>> {
    struct __tree<std::__1::__value_type<const SKCSprite *, ShadowInfo *>, std::__1::__map_value_compare<const SKCSprite *, std::__1::__value_type<const SKCSprite *, ShadowInfo *>, std::__1::less<const SKCSprite *>, true>, std::__1::allocator<std::__1::__value_type<const SKCSprite *, ShadowInfo *>>> {
        struct __tree_node<std::__1::__value_type<const SKCSprite *, ShadowInfo *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const SKCSprite *, ShadowInfo *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const SKCSprite *, std::__1::__value_type<const SKCSprite *, ShadowInfo *>, std::__1::less<const SKCSprite *>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct map<const SKCSprite *, std::__1::list<const SKCRenderer::SpriteRenderInfo *, std::__1::allocator<const SKCRenderer::SpriteRenderInfo *>>, std::__1::less<const SKCSprite *>, std::__1::allocator<std::__1::pair<const SKCSprite *const, std::__1::list<const SKCRenderer::SpriteRenderInfo *, std::__1::allocator<const SKCRenderer::SpriteRenderInfo *>>>>> {
    struct __tree<std::__1::__value_type<const SKCSprite *, std::__1::list<const SKCRenderer::SpriteRenderInfo *, std::__1::allocator<const SKCRenderer::SpriteRenderInfo *>>>, std::__1::__map_value_compare<const SKCSprite *, std::__1::__value_type<const SKCSprite *, std::__1::list<const SKCRenderer::SpriteRenderInfo *, std::__1::allocator<const SKCRenderer::SpriteRenderInfo *>>>, std::__1::less<const SKCSprite *>, true>, std::__1::allocator<std::__1::__value_type<const SKCSprite *, std::__1::list<const SKCRenderer::SpriteRenderInfo *, std::__1::allocator<const SKCRenderer::SpriteRenderInfo *>>>>> {
        struct __tree_node<std::__1::__value_type<const SKCSprite *, std::__1::list<const SKCRenderer::SpriteRenderInfo *, std::__1::allocator<const SKCRenderer::SpriteRenderInfo *>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const SKCSprite *, std::__1::list<const SKCRenderer::SpriteRenderInfo *, std::__1::allocator<const SKCRenderer::SpriteRenderInfo *>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const SKCSprite *, std::__1::__value_type<const SKCSprite *, std::__1::list<const SKCRenderer::SpriteRenderInfo *, std::__1::allocator<const SKCRenderer::SpriteRenderInfo *>>>, std::__1::less<const SKCSprite *>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, unsigned int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, float, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, float>>> {
    struct __tree<std::__1::__value_type<unsigned int, float>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, float>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, float>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, float>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, float>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, float>, std::__1::less<unsigned int>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned short, SKSpriteNode *, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, SKSpriteNode *>>> {
    struct __tree<std::__1::__value_type<unsigned short, SKSpriteNode *>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, SKSpriteNode *>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, SKSpriteNode *>>> {
        struct __tree_node<std::__1::__value_type<unsigned short, SKSpriteNode *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, SKSpriteNode *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, SKSpriteNode *>, std::__1::less<unsigned short>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned short, float, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, float>>> {
    struct __tree<std::__1::__value_type<unsigned short, float>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, float>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, float>>> {
        struct __tree_node<std::__1::__value_type<unsigned short, float>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, float>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, float>, std::__1::less<unsigned short>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct set<SKCSprite *, std::__1::less<SKCSprite *>, std::__1::allocator<SKCSprite *>> {
    struct __tree<SKCSprite *, std::__1::less<SKCSprite *>, std::__1::allocator<SKCSprite *>> {
        struct __tree_node<SKCSprite *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<SKCSprite *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<SKCSprite *>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct set<SKNode *, std::__1::less<SKNode *>, std::__1::allocator<SKNode *>> {
    struct __tree<SKNode *, std::__1::less<SKNode *>, std::__1::allocator<SKNode *>> {
        struct __tree_node<SKNode *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<SKNode *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<SKNode *>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<MaxRectTexturePacker> {
    struct MaxRectTexturePacker *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<PKCAether> {
    struct PKCAether *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<PKPath> {
    struct PKPath *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<char> {
    char *_field1;
    struct __shared_weak_count *_field2;
};

struct stack<PKRect, std::__1::deque<PKRect, std::__1::allocator<PKRect>>> {
    struct deque<PKRect, std::__1::allocator<PKRect>> _field1;
};

struct stack<SKCTextureAttachment, std::__1::deque<SKCTextureAttachment, std::__1::allocator<SKCTextureAttachment>>> {
    struct deque<SKCTextureAttachment, std::__1::allocator<SKCTextureAttachment>> _field1;
};

struct stack<_GLKMatrix4, std::__1::deque<_GLKMatrix4, std::__1::allocator<_GLKMatrix4>>> {
    struct deque<_GLKMatrix4, std::__1::allocator<_GLKMatrix4>> _field1;
};

struct unique_ptr<std::__1::__hash_node<SKCAction *, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<SKCAction *, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<SKCAction *, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<SKCAction *, void *>*>>> {
        struct __hash_node<SKCAction *, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<SKCAction *, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<SKCAction *, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_set<SKCAction *, std::__1::hash<SKCAction *>, std::__1::equal_to<SKCAction *>, std::__1::allocator<SKCAction *>> {
    struct __hash_table<SKCAction *, std::__1::hash<SKCAction *>, std::__1::equal_to<SKCAction *>, std::__1::allocator<SKCAction *>> {
        struct unique_ptr<std::__1::__hash_node<SKCAction *, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<SKCAction *, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<SKCAction *, void *>*>, std::__1::allocator<std::__1::__hash_node<SKCAction *, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<SKCAction *, void *>*> {
                struct __hash_node<SKCAction *, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<SKCAction *>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<SKCAction *>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *_field1;
    struct CGRect *_field2;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *_field1;
    } _field3;
};

struct vector<CGSize, std::__1::allocator<CGSize>> {
    struct CGSize *_field1;
    struct CGSize *_field2;
    struct __compressed_pair<CGSize *, std::__1::allocator<CGSize>> {
        struct CGSize *_field1;
    } _field3;
};

struct vector<SKCAction *, std::__1::allocator<SKCAction *>> {
    struct SKCAction **_field1;
    struct SKCAction **_field2;
    struct __compressed_pair<SKCAction **, std::__1::allocator<SKCAction *>> {
        struct SKCAction **_field1;
    } _field3;
};

struct vector<SKCParticle *, std::__1::allocator<SKCParticle *>> {
    struct SKCParticle **_field1;
    struct SKCParticle **_field2;
    struct __compressed_pair<SKCParticle **, std::__1::allocator<SKCParticle *>> {
        struct SKCParticle **_field1;
    } _field3;
};

struct vector<SKCRenderer::SpriteRenderInfo, std::__1::allocator<SKCRenderer::SpriteRenderInfo>> {
    struct SpriteRenderInfo *_field1;
    struct SpriteRenderInfo *_field2;
    struct __compressed_pair<SKCRenderer::SpriteRenderInfo *, std::__1::allocator<SKCRenderer::SpriteRenderInfo>> {
        struct SpriteRenderInfo *_field1;
    } _field3;
};

struct vector<SKRenderQuad *, std::__1::allocator<SKRenderQuad *>> {
    CDStruct_183601bc **_field1;
    CDStruct_183601bc **_field2;
    struct __compressed_pair<SKRenderQuad **, std::__1::allocator<SKRenderQuad *>> {
        CDStruct_183601bc **_field1;
    } _field3;
};

struct vector<SKTexture *, std::__1::allocator<SKTexture *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<SKTexture *__strong *, std::__1::allocator<SKTexture *>> {
        id *_field1;
    } _field3;
};

struct vector<TextureInfo, std::__1::allocator<TextureInfo>> {
    struct TextureInfo *_field1;
    struct TextureInfo *_field2;
    struct __compressed_pair<TextureInfo *, std::__1::allocator<TextureInfo>> {
        struct TextureInfo *_field1;
    } _field3;
};

struct vector<Token, std::__1::allocator<Token>> {
    struct Token *_field1;
    struct Token *_field2;
    struct __compressed_pair<Token *, std::__1::allocator<Token>> {
        struct Token *_field1;
    } _field3;
};

struct vector<const SKCRenderer::SpriteRenderInfo *, std::__1::allocator<const SKCRenderer::SpriteRenderInfo *>> {
    struct SpriteRenderInfo **_field1;
    struct SpriteRenderInfo **_field2;
    struct __compressed_pair<const SKCRenderer::SpriteRenderInfo **, std::__1::allocator<const SKCRenderer::SpriteRenderInfo *>> {
        struct SpriteRenderInfo **_field1;
    } _field3;
};

struct xglProgram {
    _Bool _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct shared_ptr<char> _field5;
    struct shared_ptr<char> _field6;
    struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> _field7;
    struct map<std::__1::basic_string<char>, unsigned int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int>>> _field8;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long _field1;
    id *_field2;
    unsigned long *_field3;
    unsigned long _field4[5];
} CDStruct_11f37819;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct {
        float _field1;
        float _field2;
    } _field5;
    char _field6;
} CDStruct_f129a329;

typedef struct {
    int type;
    float duration;
    CDStruct_83984b6f color;
} CDStruct_eed8e9f9;

typedef struct {
    struct {
        float _field1;
        float _field2;
    } _field1;
    struct {
        float _field1;
        float _field2;
    } _field2;
    struct {
        float _field1;
        float _field2;
    } _field3;
    struct {
        float _field1;
        float _field2;
    } _field4;
} CDStruct_31cefc2d;

typedef struct {
    struct {
        float _field1;
        float _field2;
    } _field1;
    struct {
        float _field1;
        float _field2;
    } _field2;
} CDStruct_c7fe8b62;

typedef struct {
    struct xglProgram *_field1;
    CDStruct_c7fe8b62 _field2;
    unsigned int _field3;
    union _GLKMatrix4 _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field8;
    int _field9;
    struct {
        float _field1;
        float _field2;
    } _field10;
    CDStruct_f129a329 _field11;
} CDStruct_2605ac7d;

typedef struct {
    struct {
        union _GLKVector4 _field1;
        float _field2[2];
    } _field1[4];
} CDStruct_cfe07629;

// Ambiguous groups
typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float r;
    float g;
    float b;
    float a;
} CDStruct_83984b6f;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct set<SKNode *, std::__1::less<SKNode *>, std::__1::allocator<SKNode *>> {
    struct __tree<SKNode *, std::__1::less<SKNode *>, std::__1::allocator<SKNode *>> {
        struct __tree_node<SKNode *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<SKNode *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<SKNode *>> {
            unsigned long _field1;
        } _field3;
    } _field1;
} set_06f0222a;

typedef struct shared_ptr<MaxRectTexturePacker> {
    struct MaxRectTexturePacker *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_7747cbe3;

typedef struct shared_ptr<PKCAether> {
    struct PKCAether *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_11a7378b;

typedef struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *_field1;
    struct CGRect *_field2;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *_field1;
    } _field3;
} vector_ea45b3ba;

typedef struct vector<CGSize, std::__1::allocator<CGSize>> {
    struct CGSize *_field1;
    struct CGSize *_field2;
    struct __compressed_pair<CGSize *, std::__1::allocator<CGSize>> {
        struct CGSize *_field1;
    } _field3;
} vector_c74fc2b3;

typedef struct vector<TextureInfo, std::__1::allocator<TextureInfo>> {
    struct TextureInfo *_field1;
    struct TextureInfo *_field2;
    struct __compressed_pair<TextureInfo *, std::__1::allocator<TextureInfo>> {
        struct TextureInfo *_field1;
    } _field3;
} vector_65e381fc;

typedef struct vector<Token, std::__1::allocator<Token>> {
    struct Token *_field1;
    struct Token *_field2;
    struct __compressed_pair<Token *, std::__1::allocator<Token>> {
        struct Token *_field1;
    } _field3;
} vector_408ca79d;

#pragma mark Named Unions

union _GLKMatrix2 {
    struct {
        float m00;
        float m01;
        float m10;
        float m11;
    } ;
    float m2[2][2];
    float m[4];
};

union _GLKMatrix3 {
    struct {
        float m00;
        float m01;
        float m02;
        float m10;
        float m11;
        float m12;
        float m20;
        float m21;
        float m22;
    } ;
    float m[9];
};

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector2 {
    struct {
        float x;
        float y;
    } ;
    struct {
        float s;
        float t;
    } ;
    float v[2];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

union _GLKVector4 {
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    CDStruct_83984b6f ;
    struct {
        float s;
        float t;
        float p;
        float q;
    } ;
    float v[4];
};

