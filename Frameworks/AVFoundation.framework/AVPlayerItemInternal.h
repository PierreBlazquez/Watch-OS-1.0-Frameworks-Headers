//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AVAsset, AVAudioMix, AVCustomVideoCompositorSession, AVPlayerConnection, AVPlayerItem, AVPropertyStorage, AVVideoComposition, AVWeakReference, NSArray, NSDate, NSDictionary, NSError, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString, NSURL;

@interface AVPlayerItemInternal : NSObject
{
    NSObject<OS_dispatch_queue> *ivarAccessQueue;
    AVWeakReference *weakReference;
    NSObject<OS_dispatch_queue> *figConfigurationQueue;
    struct OpaqueVTPixelBufferAttributesMediator *pixelBufferAttributeMediator;
    struct OpaqueCMTimebase *proxyTimebase;
    BOOL isCurrentPlayerItem;
    NSArray *cachedTracks;
    NSMutableArray *syncLayers;
    NSArray *itemOutputs;
    NSMutableArray *itemVideoOutputs;
    NSMutableDictionary *itemLegibleOutputsForKeys;
    NSMutableDictionary *itemMetadataOutputsForKeys;
    BOOL suppressesVideoLayers;
    struct OpaqueCMTimebase *figTimebase;
    struct OpaqueFigPlaybackItem *figPlaybackItem;
    AVPlayerItem *previousItem;
    AVPlayerItem *nextItem;
    struct OpaqueFigCPEProtector *figCPEProtector;
    id <AVPlayerItemDelegate> delegate;
    AVWeakReference *playerReference;
    AVPlayerConnection *playerConnection;
    NSObject<OS_dispatch_queue> *stateDispatchQueue;
    AVPropertyStorage *propertyStorage;
    int status;
    NSError *error;
    NSURL *URL;
    AVAsset *asset;
    NSArray *automaticallyLoadedAssetKeys;
    AVAsset *assetWithFigPlaybackItem;
    NSArray *trackIDsForAssetWithFigPlaybackItem;
    NSArray *timedMetadata;
    CDStruct_1b6d18a9 initialTime;
    CDStruct_1b6d18a9 initialToleranceBefore;
    CDStruct_1b6d18a9 initialToleranceAfter;
    CDStruct_1b6d18a9 forwardPlaybackEndTime;
    CDStruct_1b6d18a9 reversePlaybackEndTime;
    NSDate *initialDate;
    NSDate *initialEstimatedDate;
    BOOL initialLimitReadAhead;
    BOOL allowsExtendedReadAhead;
    CDStruct_1b6d18a9 maximumTrailingBufferDuration;
    int initialPlaybackLikelyToKeepUpTrigger;
    BOOL initialAlwaysMonitorsPlayability;
    BOOL initialWillNeverSeekBackwardsHint;
    BOOL initialContinuesPlayingDuringPrerollForSeek;
    BOOL initialContinuesPlayingDuringPrerollForRateChange;
    BOOL usesIFrameOnlyPlaybackForHighRateScaledEdits;
    BOOL usesIFrameOnlyPlaybackForHighRateScaledEditsWasSet;
    CDStruct_1b6d18a9 minimumIntervalForIFrameOnlyPlayback;
    BOOL minimumIntervalForIFrameOnlyPlaybackWasSet;
    float speedThresholdForIFrameOnlyPlayback;
    BOOL speedThresholdForIFrameOnlyPlaybackWasSet;
    struct __CFString *initialFigTimePitchAlgorithm;
    BOOL savesDownloadedDataToDiskWhenDone;
    BOOL nonForcedSubtitlesEnabled;
    BOOL networkUsuallyExceedsMaxBitRate;
    BOOL allowProgressiveSwitchUp;
    double preferredPeakBitRate;
    AVAudioMix *audioMix;
    AVVideoComposition *videoComposition;
    AVWeakReference *clientsOriginalVideoComposition;
    void *figVideoCompositor;
    AVCustomVideoCompositorSession *customVideoCompositorSession;
    BOOL seekingWaitsForVideoCompositionRendering;
    NSArray *textStyleRules;
    NSDictionary *gaplessInfo;
    int initialVariantIndex;
    NSDictionary *audibleDRMInfo;
    NSDictionary *rampInOutInfo;
    float soundCheckVolumeNormalization;
    float volumeAdjustment;
    NSMutableArray *handlersToCallWhenReadyForEnqueueing;
    NSMutableDictionary *mediaOptionsSelectedByClient;
    BOOL haveInitialSamples;
    BOOL haveCPEProtector;
    BOOL didSetAssetToAssetWithFigPlaybackItem;
    BOOL didBecomeReadyForBasicInspection;
    BOOL didBecomeReadyForInspectionOfMediaSelectionOptions;
    BOOL didBecomeReadyForInspectionOfTracks;
    BOOL didBecomeReadyForInspectionOfPresentationSize;
    BOOL didBecomeReadyForInspectionOfDuration;
    BOOL didInformObserversAboutAvailabilityOfTracks;
    BOOL didFireKVOForAssetForNonStreamingItem;
    BOOL wasInitializedWithURL;
    BOOL needTimedMetadataNotification;
    BOOL externalSubtitlesEnabled;
    BOOL externalProtectionRequested;
    BOOL requiresAccessLog;
    int eqPreset;
    struct OpaqueFigSimpleMutex *seekIDMutex;
    unsigned int nextSeekIDToGenerate;
    int pendingSeekID;
    CDUnknownBlockType seekCompletionHandler;
    NSString *dataYouTubeID;
    unsigned int RTCReportingFlags;
    NSString *serviceIdentifier;
    NSString *mediaKind;
    unsigned int restrictions;
}

@end

