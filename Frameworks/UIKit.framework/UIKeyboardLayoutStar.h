//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <UIKit/UIKeyboardLayout.h>

@class CADisplayLink, NSMutableDictionary, NSMutableSet, NSString, NSTimer, UIDelayedAction, UIKBBackgroundView, UIKBKeyplaneView, UIKBRenderConfig, UIKBTree, UIKeyboardKeyplaneTransition, UIKeyboardSplitTransitionView, UISwipeGestureRecognizer, UIView, _UIKeyboardTypingSpeedLogger;

@interface UIKeyboardLayoutStar : UIKeyboardLayout
{
    UIKBTree *_keyboard;
    UIKBTree *_keyplane;
    NSString *_keyboardName;
    NSString *_keyplaneName;
    int _appearance;
    UIKBTree *_activeKey;
    UIKBKeyplaneView *_keyplaneView;
    UIKBBackgroundView *_backgroundView;
    double _prevTouchUpTime;
    double _prevTouchDownTime;
    int _prevUpActions;
    NSMutableDictionary *_keyboards;
    NSMutableDictionary *_allKeyplaneViews;
    NSMutableSet *_allKeyplaneKeycaps;
    NSMutableSet *_validInputStrings;
    NSString *_localizedInputKey;
    struct __CFDictionary *_extendedTouchInfoMap;
    int _preferredTrackingChangeCount;
    int _shiftTrackingChangeCount;
    NSMutableSet *_accentInfo;
    NSMutableSet *_hasAccents;
    id _spaceTarget;
    SEL _spaceAction;
    SEL _spaceLongAction;
    id _returnTarget;
    SEL _returnAction;
    SEL _returnLongAction;
    id _deleteTarget;
    SEL _deleteAction;
    SEL _deleteLongAction;
    BOOL _shift;
    BOOL _autoshift;
    BOOL _settingShift;
    BOOL _didLongPress;
    NSString *_preTouchKeyplaneName;
    BOOL _revertKeyplaneAfterTouch;
    BOOL _wasShifted;
    BOOL _swipeDetected;
    BOOL _showIntlKey;
    BOOL _showDictationKey;
    BOOL _suppressDeactivateKeys;
    BOOL _shiftLockReady;
    double _shiftLockFirstTapTime;
    UISwipeGestureRecognizer *_rightSwipeRecognizer;
    UISwipeGestureRecognizer *_leftSwipeRecognizer;
    UISwipeGestureRecognizer *_upSwipeRecognizer;
    UIKeyboardKeyplaneTransition *_keyplaneTransition;
    UIKeyboardSplitTransitionView *_transitionView;
    float _initialSplitProgress;
    float _finalSplitProgress;
    float _initialPinchSeparation;
    float _pinchSeparationValues[4];
    BOOL _pinchDetected;
    double _autoSplitLastUpdate;
    float _autoSplitElapsedTime;
    CADisplayLink *_displayLink;
    BOOL _ghostKeysEnabled;
    UIDelayedAction *_delayedCentroidUpdate;
    BOOL _isRebuilding;
    int _initialBias;
    int _transitionTargetBias;
    BOOL _edgeSwipeDetected;
    float _initialEdgeTranslation;
    float _edgeSwipeProgress;
    float _edgeSwipeVelocity;
    NSString *_layoutTag;
    BOOL _preRotateShift;
    NSString *_preRotateKeyplaneName;
    UIDelayedAction *_multitapAction;
    BOOL _unshiftAfterMultitap;
    int _multitapCount;
    UIKBTree *_multitapKey;
    UIView *_flickPopupView;
    NSMutableDictionary *_compositeImages;
    NSTimer *_flickPopuptimer;
    id _touchInfo;
    UIView *_dimKeyboardImageView;
    BOOL _keyboardImageViewIsDim;
    BOOL _isOutOfBounds;
    NSMutableSet *_keysUnderIndicator;
    _UIKeyboardTypingSpeedLogger *_typingSpeedLogger;
    int playKeyClickSoundOn;
    UIKBRenderConfig *_renderConfig;
}

+ (id)sharedRivenKeyplaneGenerator;
+ (id)keyboardWithName:(id)arg1 screenTraits:(id)arg2;
+ (id)keyboardFromFactoryWithName:(id)arg1 screen:(id)arg2;
+ (void)accessibilitySensitivityChanged;
+ (struct CGSize)keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2;
+ (Class)_subclassForScreenTraits:(id)arg1;
- (id)overlayCharacterImageForKey:(id)arg1 direction:(int)arg2 rect:(struct CGRect)arg3 flickString:(id)arg4 popupInfo:(id)arg5;
- (id)getPopupBackgroundImageForKey:(id)arg1 direction:(int)arg2 popupInfo:(id)arg3 rect:(struct CGRect)arg4;
- (id)getFlickCompositeImageForKey:(id)arg1 direction:(int)arg2 rect:(struct CGRect)arg3;
- (void)handleDismissFlickView;
- (void)handlePopupView;
- (void)setCompositeImage:(id)arg1 forKey:(id)arg2;
- (id)compositeImageForKey:(id)arg1;
- (void)activateCompositeKey:(id)arg1 direction:(int)arg2 flickString:(id)arg3 popupInfo:(id)arg4;
- (void)populateFlickPopupsForKey:(id)arg1;
- (void)showFlickView:(int)arg1 withKey:(id)arg2 flickString:(id)arg3;
- (void)showPopupView:(int)arg1 withKey:(id)arg2 popupInfo:(id)arg3 force:(BOOL)arg4;
- (void)setKeyForTouchInfo:(id)arg1 key:(id)arg2;
- (id)popupKeyViews;
- (struct CGRect)frameForLastKeyWithRepresentedString:(id)arg1;
- (struct CGRect)frameForKeyWithRepresentedString:(id)arg1;
@property(copy, nonatomic) NSString *localizedInputKey; // @synthesize localizedInputKey=_localizedInputKey;
@property(nonatomic) BOOL didLongPress; // @synthesize didLongPress=_didLongPress;
@property(nonatomic) BOOL autoShift; // @synthesize autoShift=_autoshift;
@property(nonatomic) BOOL shift; // @synthesize shift=_shift;
@property(copy, nonatomic) NSString *keyboardName; // @synthesize keyboardName=_keyboardName;
- (id)currentKeyplaneView;
- (void)handleDelayedCentroidUpdate;
- (struct CGImage *)renderedKeyplaneWithToken:(id)arg1 split:(BOOL)arg2;
- (struct CGPoint)applyError:(struct CGPoint)arg1 toKey:(id)arg2;
- (BOOL)keyHasAccentedVariants:(id)arg1;
- (void)cancelTouchIfNecessaryForInfo:(id)arg1;
- (void)swipeDetected:(id)arg1;
- (void)updateShiftKeyState;
- (void)handleKeyboardMenusForTouch:(id)arg1;
- (void)fadeMenu:(id)arg1 forKey:(id)arg2 withDelay:(float)arg3;
- (void)upActionShift;
- (void)fadeMenu:(id)arg1 forKey:(id)arg2;
- (void)continueFromInternationalActionForTouchUp:(id)arg1 withActions:(int)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(BOOL)arg5 prevActions:(int)arg6 executionContext:(id)arg7;
- (BOOL)shouldYieldToControlCenterForFlickWithInitialPoint:(struct CGPoint)arg1 finalPoint:(struct CGPoint)arg2;
- (void)completeSendStringActionForTouchUp:(id)arg1 withActions:(int)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(BOOL)arg5 prevActions:(int)arg6 executionContext:(id)arg7;
- (id)flickStringForInputKey:(id)arg1 direction:(int)arg2;
- (BOOL)shouldSendStringForFlick:(id)arg1;
- (void)touchMultitapTimer;
- (BOOL)shouldSendTouchUpToRecorder:(id)arg1;
- (BOOL)shouldSendTouchUpToInputManager:(id)arg1;
- (void)completeRetestForTouchUp:(id)arg1 timestamp:(double)arg2 interval:(double)arg3 executionContext:(id)arg4;
- (id)activeTouchForInteraction:(int)arg1;
- (BOOL)shouldRetestKey:(id)arg1 withKeyplane:(id)arg2;
- (void)refreshGhostKeyState;
- (BOOL)predictionGestureDetectedForTouchInfo:(id)arg1;
- (unsigned int)upActionFlagsForKey:(id)arg1;
- (void)completeHitTestForTouchDragged:(id)arg1 hitKey:(id)arg2;
- (void)handleFlick:(id)arg1;
- (BOOL)touchPassesDragThreshold:(id)arg1;
- (void)interpretTouchesForSplit;
- (void)completeDeleteActionForTouchDownWithActions:(unsigned int)arg1 executionContext:(id)arg2;
- (id)infoForTouch:(id)arg1;
- (void)downActionShiftWithKey:(id)arg1;
- (id)keyplaneNameForRevertAfterTouch;
@property(copy, nonatomic) NSString *preTouchKeyplaneName; // @synthesize preTouchKeyplaneName=_preTouchKeyplaneName;
- (void)completeSendStringActionForTouchDownWithKey:(id)arg1 withActions:(unsigned int)arg2 executionContext:(id)arg3;
- (void)incrementPunctuationIfNeeded:(id)arg1;
- (id)createKeyEventForStringAction:(id)arg1 forKey:(id)arg2 isPopupVariant:(BOOL)arg3 isMultitap:(BOOL)arg4 isFlick:(BOOL)arg5;
- (void)completeCommitTouchesPrecedingTouchDownWithKey:(id)arg1 withActions:(unsigned int)arg2 executionContext:(id)arg3;
- (BOOL)shouldCommitPrecedingTouchesForTouchDownWithActions:(unsigned int)arg1;
- (void)playKeyClickSound;
- (void)hideMenu:(id)arg1 forKey:(id)arg2;
- (BOOL)shouldSkipResponseToGlobeKey:(id)arg1 atPoint:(struct CGPoint)arg2;
@property(nonatomic) int playKeyClickSoundOn; // @synthesize playKeyClickSoundOn;
- (void)touchDownWithKey:(id)arg1 atPoint:(struct CGPoint)arg2 executionContext:(id)arg3;
- (void)handlePopupView:(id)arg1;
- (id)flickPopupStringForKey:(id)arg1 withString:(id)arg2;
- (void)clearInfoForTouch:(id)arg1;
- (void)performHitTestForTouchInfo:(id)arg1 touchStage:(int)arg2 executionContextPassingUIKBTree:(id)arg3;
- (void)completeHitTestForTouchDown:(id)arg1 executionContext:(id)arg2;
- (id)generateInfoForTouch:(id)arg1;
- (void)_autoSplit:(id)arg1;
- (void)finishSplitTransition;
- (void)finishSplit;
- (float)interpretPinchSeparationValues;
- (void)prepareForSplitTransition;
- (void)finishHandBiasTransition;
- (id)keyboardLayoutWithBias:(int)arg1;
- (void)rebuildKeyplaneTransitionWithTargetBias:(int)arg1;
- (int)currentKeyboardBias;
- (BOOL)edgeSwipeGestureEnabled;
- (int)biasForKeyboard:(id)arg1;
- (void)setKeyboardDim:(BOOL)arg1 amount:(float)arg2 withDuration:(float)arg3;
- (id)_keyplaneVariantsKeyForString:(id)arg1;
- (void)showMenu:(id)arg1 forKey:(id)arg2;
- (id)touchForKey:(id)arg1;
- (void)showPopupVariantsForKey:(id)arg1;
- (unsigned int)downActionFlagsForKey:(id)arg1;
- (void)clearHandwritingStrokesIfNeededAndNotify:(BOOL)arg1;
- (id)activeMultitapCompleteKey;
- (void)handleMultitapTimerFired;
- (void)multitapExpired;
- (void)multitapInterrupted;
- (id)multitapCompleteKeys;
- (BOOL)handwritingPlane;
- (BOOL)isLongPressedKey:(id)arg1;
@property(retain, nonatomic) UIKBTree *activeKey; // @synthesize activeKey=_activeKey;
- (int)keycodeForKey:(id)arg1;
- (BOOL)shouldPreventInputManagerHitTestingForKey:(id)arg1;
- (id)keyHitTest:(struct CGPoint)arg1;
- (id)keyHitTestWithoutCharging:(struct CGPoint)arg1;
- (id)keyHitTestClosestToPoint:(struct CGPoint)arg1;
- (id)keyHitTestContainingPoint:(struct CGPoint)arg1;
- (BOOL)shouldHitTestKey:(id)arg1;
- (void)setKeyboardDim:(BOOL)arg1;
- (id)initialKeyplaneNameWithKBStarName:(id)arg1;
- (void)setKeyboardName:(id)arg1 appearance:(int)arg2;
- (BOOL)shouldMergeKey:(id)arg1;
- (BOOL)supportStylingWithKey:(id)arg1;
- (id)keyWithRepresentedString:(id)arg1;
- (void)updateTransitionWithFlags:(int)arg1;
- (void)rebuildSplitTransitionView;
- (void)updateGlobeKeyDisplayString;
- (void)updateCachedKeyplaneKeycaps;
- (void)updateLayoutTags;
- (int)stateForManipulationKey:(id)arg1;
- (int)stateForStylingKey:(id)arg1;
- (int)stateForDictationKey:(id)arg1;
- (int)stateForMultitapReverseKey:(id)arg1;
- (int)stateForKeyplaneSwitchKey:(id)arg1;
- (int)stateForShiftKey:(id)arg1;
- (id)defaultKeyplaneForKeyplane:(id)arg1;
- (id)cacheIdentifierForKeyplaneNamed:(id)arg1;
- (id)cacheTokenForKeyplane:(id)arg1;
- (void)updateMoreAndInternationalKeys;
- (void)updateKeyboardForKeyplane:(id)arg1;
- (BOOL)useScaledGeometrySet;
- (id)splitNameForKeyplane:(id)arg1;
- (BOOL)canReuseKeyplaneView;
- (BOOL)shouldShowDictationKey;
- (int)stateForKey:(id)arg1;
- (struct CGImage *)renderedImageWithStateFallbacksForToken:(id)arg1;
- (struct CGImage *)cachedCompositeImageWithCacheKey:(id)arg1;
- (void)updateLocalizedKeysOnKeyplane:(id)arg1;
- (void)setCurrencyKeysForCurrentLocaleOnKeyplane:(id)arg1;
- (void)setState:(int)arg1 forKey:(id)arg2;
- (int)displayTypeHintForMoreKey;
- (int)displayTypeHintForShiftKey;
- (void)refreshForRivenPreferences;
@property(copy, nonatomic) NSString *keyplaneName; // @synthesize keyplaneName=_keyplaneName;
- (void)updateBackgroundIfNeeded;
- (int)visualStyleForKeyboardIfSplit:(BOOL)arg1;
- (struct CGRect)frameForKeylayoutName:(id)arg1 onKeyplaneName:(id)arg2;
- (id)splitNameForKeyplaneName:(id)arg1;
- (id)defaultNameForKeyplaneName:(id)arg1;
- (void)flushKeyCache:(id)arg1;
- (void)handleDismissFlickView:(id)arg1;
- (void)clearAllTouchInfo;
- (void)cancelDelayedCentroidUpdate;
- (void)accessibilitySensitivityChanged;
- (void)cancelMultitapTimer;
- (void)uninstallGestureRecognizers;
- (void)refreshForDictationAvailablityDidChange;
@property(readonly, nonatomic) UIKBTree *keyplane; // @synthesize keyplane=_keyplane;
@property(readonly, nonatomic) BOOL showsDictationKey; // @synthesize showsDictationKey=_showDictationKey;
@property(readonly, nonatomic) BOOL showsInternationalKey; // @synthesize showsInternationalKey=_showIntlKey;
- (struct CGImage *)renderedImageWithToken:(id)arg1;
- (void)installGestureRecognizers;
- (void)deactivateActiveKeysClearingTouchInfo:(BOOL)arg1 clearingDimming:(BOOL)arg2;
- (BOOL)performSpaceAction;
- (void)didRecognizeGestureOnEdge:(unsigned int)arg1 withDistance:(float)arg2;
- (unsigned int)targetEdgesForScreenGestureRecognition;
- (void)didFinishScreenGestureRecognition;
- (BOOL)canForceTouchCommit:(id)arg1;
- (void)touchCancelled:(id)arg1 executionContext:(id)arg2;
- (void)touchUp:(id)arg1 executionContext:(id)arg2;
- (void)touchDragged:(id)arg1 executionContext:(id)arg2;
- (void)touchDown:(id)arg1 executionContext:(id)arg2;
- (SEL)handlerForNotification:(id)arg1;
- (id)simulateTouchForCharacter:(id)arg1 errorVector:(struct CGPoint)arg2 shouldTypeVariants:(BOOL)arg3 baseKeyForVariants:(BOOL)arg4;
- (id)simulateTouch:(struct CGPoint)arg1;
- (void)changeToKeyplane:(id)arg1;
- (id)keyplaneNamed:(id)arg1;
- (id)keyplaneForKey:(id)arg1;
- (id)baseKeyForString:(id)arg1;
- (void)setPasscodeOutlineAlpha:(float)arg1;
- (void)setDisableInteraction:(BOOL)arg1;
@property(readonly, nonatomic) NSString *localizedInputMode;
- (void)finishSplitTransitionWithProgress:(float)arg1;
- (void)setSplit:(BOOL)arg1 animated:(BOOL)arg2;
- (void)updateLocalizedKeys:(BOOL)arg1;
- (BOOL)isShiftKeyBeingHeld;
- (BOOL)isShiftKeyPlaneChooser;
- (BOOL)ignoresShiftState;
- (void)setReturnKeyEnabled:(BOOL)arg1 withDisplayName:(id)arg2 withType:(int)arg3;
- (float)hitBuffer;
- (BOOL)canProduceString:(id)arg1;
- (void)longPressAction;
- (void)setLongPressAction:(SEL)arg1 forKey:(id)arg2;
- (void)setAction:(SEL)arg1 forKey:(id)arg2;
- (void)setTarget:(id)arg1 forKey:(id)arg2;
- (void)updateBackgroundCorners;
- (void)restoreDefaultsForAllKeys;
- (void)didClearInput;
- (void)triggerSpaceKeyplaneSwitchIfNecessary;
- (BOOL)usesAutoShift;
- (void)setTextEditingTraits:(id)arg1;
- (unsigned int)textEditingKeyMask;
- (void)restoreDefaultsForKey:(id)arg1;
- (void)updateKeyCentroids;
- (void)setLabel:(id)arg1 forKey:(id)arg2;
- (void)deleteHandwritingStrokesAtIndexes:(id)arg1;
- (void)_resizeForKeyplaneSize:(struct CGSize)arg1 splitWidthsChanged:(BOOL)arg2;
- (void)fadeWithInvocation:(id)arg1;
- (void)setAutoshift:(BOOL)arg1;
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;
- (id)currentKeyplane;
- (BOOL)performReturnAction;
- (void)didRotate;
- (void)willRotate;
@property(readonly, nonatomic) UIKBTree *keyboard; // @synthesize keyboard=_keyboard;
- (BOOL)keyplaneContainsEmojiKey;
- (void)setHideKeysUnderIndicator:(BOOL)arg1;
- (id)activationIndicatorView;
- (BOOL)shouldShowIndicator;
- (void)showSplitTransitionView:(BOOL)arg1;
- (BOOL)pinchSplitGestureEnabled;
- (void)setSplitProgress:(float)arg1;
- (BOOL)pinchDetected;
- (struct CGSize)dragGestureSize;
- (struct CGRect)frameForKeylayoutName:(id)arg1;
@property(retain, nonatomic) NSString *layoutTag; // @synthesize layoutTag=_layoutTag;
- (BOOL)isAlphabeticPlane;
- (BOOL)canMultitap;
- (BOOL)hasAccentKey;
- (BOOL)hasCandidateKeys;
- (void)deactivateActiveKeys;
- (void)clearUnusedObjects:(BOOL)arg1;
- (id)candidateList;
@property(retain, nonatomic) UIKBRenderConfig *renderConfig; // @synthesize renderConfig=_renderConfig;
- (void)logHandwritingData;
- (void)setKeyboardAppearance:(int)arg1;
- (BOOL)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (void)willMoveToWindow:(id)arg1;
- (id)scriptingInfoWithChildren;
- (double)lastTouchUpTimestamp;
@property(readonly, nonatomic, getter=isRotating) BOOL rotating;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (void)removeFromSuperview;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

