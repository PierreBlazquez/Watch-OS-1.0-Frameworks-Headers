//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"

@class NSValue;

@interface UIKBRenderGeometry : NSObject <NSCopying>
{
    BOOL _detachedVariants;
    BOOL _tallPopup;
    int _roundRectCorners;
    float _roundRectRadius;
    int _popupBias;
    int _flickDirection;
    NSValue *_splitLeftRect;
    NSValue *_splitRightRect;
    struct CGPoint _popupSource;
    struct CGRect _frame;
    struct CGRect _paddedFrame;
    struct CGRect _displayFrame;
    struct CGRect _symbolFrame;
}

+ (id)geometryWithShape:(id)arg1;
+ (id)geometryWithFrame:(struct CGRect)arg1 paddedFrame:(struct CGRect)arg2;
- (unsigned int)adjustForTranslucentGapsWithSize:(struct CGSize)arg1 inFrame:(struct CGRect)arg2;
@property(readonly, nonatomic) struct UIEdgeInsets paddedInsets;
- (id)similarShape;
- (id)iPadVariantGeometries:(unsigned int)arg1;
- (id)iPhoneVariantGeometries:(unsigned int)arg1;
- (void)applyShadowInsets:(struct UIEdgeInsets)arg1;
- (void)overlayWithGeometry:(id)arg1;
@property(nonatomic) BOOL tallPopup; // @synthesize tallPopup=_tallPopup;
@property(nonatomic) BOOL detachedVariants; // @synthesize detachedVariants=_detachedVariants;
@property(nonatomic) float roundRectRadius; // @synthesize roundRectRadius=_roundRectRadius;
@property(nonatomic) int popupBias; // @synthesize popupBias=_popupBias;
@property(nonatomic) int roundRectCorners; // @synthesize roundRectCorners=_roundRectCorners;
@property(nonatomic) struct CGPoint popupSource; // @synthesize popupSource=_popupSource;
- (id)initWithShape:(id)arg1;
- (void)applyInsets:(struct UIEdgeInsets)arg1;
- (unsigned int)adjustForTranslucentGapsInFrameWithSize_10Key:(struct CGSize)arg1 centerX:(float)arg2 isInBottomRow:(BOOL)arg3;
- (id)copyForPopupDirection:(int)arg1 scale:(float)arg2;
- (id)copyForFlickDirection:(int)arg1 scale:(float)arg2;
- (void)adjustToTopWithInsets:(struct UIEdgeInsets)arg1;
- (void)makeIntegralWithScale:(float)arg1;
- (void)applyOffset:(struct CGPoint)arg1;
- (id)_copyForDirection:(int)arg1 positionFactor:(float)arg2 sizeFactor:(float)arg3 scale:(float)arg4;
@property(nonatomic) struct CGRect symbolFrame; // @synthesize symbolFrame=_symbolFrame;
@property(readonly, nonatomic) struct UIEdgeInsets displayInsets;
@property(nonatomic) int flickDirection; // @synthesize flickDirection=_flickDirection;
@property(retain, nonatomic) NSValue *splitRightRect; // @synthesize splitRightRect=_splitRightRect;
@property(retain, nonatomic) NSValue *splitLeftRect; // @synthesize splitLeftRect=_splitLeftRect;
@property(nonatomic) struct CGRect displayFrame; // @synthesize displayFrame=_displayFrame;
@property(nonatomic) struct CGRect paddedFrame; // @synthesize paddedFrame=_paddedFrame;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (BOOL)isEqual:(id)arg1;
@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
- (void)dealloc;

@end

