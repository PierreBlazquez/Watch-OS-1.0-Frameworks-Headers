//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "UICoordinateSpace.h"
#import "UITraitEnvironment.h"
#import "_UITraitEnvironmentInternal.h"

@class FBSDisplay, NSArray, NSDictionary, NSMutableArray, NSString, UIScreenMode, UISoftwareDimmingWindow, UITraitCollection, UIWindow, _UIScreenFixedCoordinateSpace, _UIScreenTransparentHitTestWindow;

@interface UIScreen : NSObject <UICoordinateSpace, _UITraitEnvironmentInternal, UITraitEnvironment>
{
    id _display;
    struct CGRect _bounds;
    struct CGRect _referenceBounds;
    struct CGRect _interfaceOrientedBounds;
    struct CGRect _unjailedReferenceBounds;
    struct CGRect _mainSceneReferenceBounds;
    int _interfaceOrientation;
    float _scale;
    float _touchScaleFactor;
    float _horizontalScale;
    int _userInterfaceIdiom;
    NSDictionary *_capabilities;
    UIWindow *_screenDisablingWindow;
    double _startedPausingWindows;
    NSMutableArray *_pausedWindows;
    _UIScreenTransparentHitTestWindow *_extendedJailHitTestWindow;
    NSArray *_availableDisplayModes;
    float _pointsPerInch;
    _UIScreenFixedCoordinateSpace *_fixedCoordinateSpace;
    struct {
        unsigned int bitsPerComponent:4;
        unsigned int initialized:1;
        unsigned int connected:1;
        unsigned int overscanCompensation:2;
        unsigned int screenUpdatesDisabled:1;
        unsigned int wantsWideContentMargins:1;
        unsigned int queriedDeviceContentMargins:1;
        unsigned int hasCalculatedPointsPerInch:1;
    } _screenFlags;
    BOOL _wantsSoftwareDimming;
    BOOL _jailUsesHitTestWindow;
    UITraitCollection *_defaultTraitCollection;
    UITraitCollection *_overrideTraitCollection;
    UITraitCollection *_lastNotifiedTraitCollection;
    FBSDisplay *_fbsDisplay;
    UISoftwareDimmingWindow *_softwareDimmingWindow;
    int _lastNotifiedBacklightLevel;
    float _jailScale;
    int _jailOrientation;
    struct CGSize _jailSize;
    struct CGPoint _jailOffset;
    struct UIEdgeInsets _jailTouchInsets;
}

+ (id)__connectedFBSDisplays;
+ (void)_FBSDisplayDidPossiblyDisconnect:(id)arg1;
+ (void)_FBSDisplayDidPossiblyConnect:(id)arg1;
+ (id)_screenWithIntegerDisplayID:(unsigned int)arg1;
+ (id)_watchScreen;
+ (id)_carScreen;
+ (void)_videoOutSettingsChanged;
+ (BOOL)_shouldDisableJail;
+ (void)_beginDisableScreenUpdatesForSnapshotUsingSnapshotCover:(BOOL)arg1;
+ (void)_FBSDisplayDidPossiblyConnect:(id)arg1 withScene:(id)arg2;
+ (id)_screenWithDisplayID:(id)arg1;
+ (struct CGAffineTransform)transformForScreenOriginRotation:(float)arg1;
+ (id)_screenWithDisplayName:(id)arg1;
+ (struct CGAffineTransform)transformToRotateScreen:(float)arg1;
+ (void)_endDisableScreenUpdates;
+ (void)_beginDisableScreenUpdatesForSnapshot;
+ (struct CGPoint)convertPoint:(struct CGPoint)arg1 toView:(id)arg2;
+ (struct CGRect)convertRect:(struct CGRect)arg1 fromView:(id)arg2;
+ (id)screens;
+ (void)initialize;
+ (struct CGRect)convertRect:(struct CGRect)arg1 toView:(id)arg2;
+ (void)_prepareScreensForAppResume;
+ (void)_enumerateScreensWithBlock:(CDUnknownBlockType)arg1;
+ (id)_workspaceCapableScreens;
+ (void)_FBSDisplayDidPossiblyDisconnect:(id)arg1 forSceneDestruction:(id)arg2;
+ (void)_FBSDisplayDidPossiblyConnect:(id)arg1 withScene:(id)arg2 andPost:(BOOL)arg3;
+ (id)__createPlugInScreenForFBSDisplay:(id)arg1;
+ (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromView:(id)arg2;
+ (id)mainScreen;
- (void)_setSpeed:(float)arg1 forWindow:(id)arg2;
@property(nonatomic, getter=_jailTouchInsets, setter=_setJailTouchInsets:) struct UIEdgeInsets jailTouchInsets; // @synthesize jailTouchInsets=_jailTouchInsets;
@property(nonatomic, getter=_jailOrientation, setter=_setJailOrientation:) int jailOrientation; // @synthesize jailOrientation=_jailOrientation;
@property(nonatomic, getter=_jailScale, setter=_setJailScale:) float jailScale; // @synthesize jailScale=_jailScale;
@property(nonatomic, getter=_jailOffset, setter=_setJailOffset:) struct CGPoint jailOffset; // @synthesize jailOffset=_jailOffset;
@property(nonatomic) BOOL wantsSoftwareDimming; // @synthesize wantsSoftwareDimming=_wantsSoftwareDimming;
@property(nonatomic, getter=_defaultTraitCollection, setter=_setDefaultTraitCollection:) UITraitCollection *defaultTraitCollection; // @synthesize defaultTraitCollection=_defaultTraitCollection;
@property(nonatomic, getter=_jailSize, setter=_setJailSize:) struct CGSize jailSize; // @synthesize jailSize=_jailSize;
@property(readonly, nonatomic) struct CGRect nativeBounds;
- (id)_snapshotExcludingWindows:(id)arg1 withRect:(struct CGRect)arg2;
@property(nonatomic) float brightness;
- (id)_display;
- (BOOL)_areMusicListsLimited;
- (BOOL)_areListsLimited;
@property(nonatomic, getter=_jailUsesHitTestWindow, setter=_setJailUsesHitTestWindow:) BOOL jailUsesHitTestWindow; // @synthesize jailUsesHitTestWindow=_jailUsesHitTestWindow;
- (int)_workspaceCapableScreenType;
- (void)_setCapability:(id)arg1 forKey:(id)arg2;
@property(nonatomic, getter=_overrideTraitCollection, setter=_setOverrideTraitCollection:) UITraitCollection *overrideTraitCollection; // @synthesize overrideTraitCollection=_overrideTraitCollection;
@property(readonly) id <UICoordinateSpace> fixedCoordinateSpace;
- (void)_setScale:(float)arg1;
- (unsigned int)_seed;
@property(nonatomic) int overscanCompensation;
- (int)screenType;
- (void)setBitsPerComponent:(int)arg1;
- (double)_refreshRate;
- (struct CGRect)_boundsInPixels;
- (BOOL)_isRotatable;
- (struct CGPoint)_positionForWindowTransformLayerInJail:(BOOL)arg1;
- (struct UIEdgeInsets)_rawJailedBoundsEdgeInsets;
- (void)_ensureConnectedIfPossible;
- (struct CGRect)_nativeDisplayBounds;
@property(readonly, nonatomic) float nativeScale;
- (id)_lazySoftwareDimmingWindow;
- (float)rawBrightnessForBacklightLevel:(float)arg1;
- (BOOL)_supportsBrightness;
- (void)_postBrightnessDidChangeNotificationIfAppropriate;
@property(nonatomic, setter=_setLastNotifiedBacklightLevel:) int _lastNotifiedBacklightLevel; // @synthesize _lastNotifiedBacklightLevel;
@property(retain, nonatomic, setter=_setSoftwareDimmingWindow:) UISoftwareDimmingWindow *_softwareDimmingWindow; // @synthesize _softwareDimmingWindow;
- (BOOL)_isUIElementLimited:(id)arg1;
- (id)_capabilities;
- (void)_notifyTraitsChangedAndPropagateToAllWindows;
- (void)_willTransitionToTraitCollection:(id)arg1;
- (void)_updateCapabilities;
- (void)_updateTraits;
@property(retain, nonatomic) UIScreenMode *currentMode;
@property(readonly, retain, nonatomic) UIScreenMode *preferredMode;
- (BOOL)_isExternal;
- (struct UIEdgeInsets)_jailedBoundsEdgeInsets;
- (BOOL)_hasStatusBar;
- (BOOL)_isOverscanned;
- (BOOL)_overscanAdjustmentNeedsUpdate;
- (BOOL)_hasWindows;
- (BOOL)_isCarScreen;
- (void)_endObservingBacklightLevelNotifications;
- (void)_beginObservingBacklightLevelNotifications;
- (void)_disconnectScreen;
- (void)_setMainSceneReferenceBounds:(struct CGRect)arg1 computingMetricsIfNecessary:(BOOL)arg2;
@property(retain, nonatomic) FBSDisplay *fbsDisplay; // @synthesize fbsDisplay=_fbsDisplay;
- (void)_enableScreenUpdates;
- (void)_disableScreenUpdates:(BOOL)arg1;
- (void)_updateOverscanCompensationAllowingBackgroundUpdate:(BOOL)arg1;
- (void)_updateAvailableDisplayModes;
- (void)_connectScreen;
@property(readonly, copy, nonatomic) NSArray *availableModes;
- (BOOL)_isWorkspaceCapable;
- (void)_computeMetrics;
- (id)initWithDisplay:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (struct CGRect)_interfaceOrientedBounds;
- (struct CGRect)_applicationFrameForInterfaceOrientation:(int)arg1 usingStatusbarHeight:(float)arg2 ignoreStatusBar:(BOOL)arg3;
@property(retain, nonatomic, getter=_lastNotifiedTraitCollection, setter=_setLastNotifiedTraitCollection:) UITraitCollection *lastNotifiedTraitCollection; // @synthesize lastNotifiedTraitCollection=_lastNotifiedTraitCollection;
- (struct CGRect)_applicationFrameForInterfaceOrientation:(int)arg1 usingStatusbarHeight:(float)arg2;
- (struct CGRect)_applicationFrameForInterfaceOrientation:(int)arg1;
- (id)_capabilityForKey:(id)arg1;
@property(readonly, retain, nonatomic) UIScreen *mirroredScreen;
- (void)_setUserInterfaceIdiom:(int)arg1;
- (id)snapshot;
- (id)snapshotViewAfterScreenUpdates:(BOOL)arg1;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromCoordinateSpace:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toCoordinateSpace:(id)arg2;
- (id)_traitCollectionForChildEnvironment:(id)arg1;
- (id)snapshotView;
@property(readonly) id <UICoordinateSpace> coordinateSpace;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromCoordinateSpace:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 toCoordinateSpace:(id)arg2;
- (id)displayLinkWithTarget:(id)arg1 selector:(SEL)arg2;
- (int)_imageOrientation;
- (void)traitCollectionDidChange:(id)arg1;
- (BOOL)_canFocusViews;
- (BOOL)_isDisplayPointWithinExtendedJailBounds:(struct CGPoint)arg1;
@property(readonly, nonatomic, getter=_unjailedReferenceBounds) struct CGRect _unjailedReferenceBounds; // @synthesize _unjailedReferenceBounds;
- (id)_displayID;
- (void)_prepareForWindow;
@property(nonatomic, setter=_setInterfaceOrientation:) int _interfaceOrientation;
- (struct CGRect)_mainSceneReferenceBounds;
- (struct CGPoint)_positionForWindowTransformLayerInJail:(BOOL)arg1 offsetByScreenJail:(BOOL)arg2;
- (float)_horizontalPixelScale;
- (float)_rotation;
- (int)bitsPerComponent;
- (id)_name;
- (float)_pointsPerInch;
- (float)_scale;
- (BOOL)_wantsWideContentMargins;
- (struct CGRect)_realDisplayBounds;
- (float)_touchScaleFactor;
- (BOOL)_areBoundsJailed;
@property(readonly, nonatomic) UITraitCollection *traitCollection;
- (void)_setMainSceneReferenceBounds:(struct CGRect)arg1;
- (void)_enumerateWindowsWithBlock:(CDUnknownBlockType)arg1;
- (void)_updateUserInterfaceIdiom;
@property(readonly, nonatomic) float scale; // @synthesize scale=_scale;
- (BOOL)_isMainScreen;
- (unsigned int)_integerDisplayID;
@property(readonly, nonatomic) struct CGRect applicationFrame;
- (id)_defaultTraitCollectionForInterfaceOrientation:(int)arg1;
- (int)_userInterfaceIdiom;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) struct CGRect _referenceBounds; // @synthesize _referenceBounds;
- (struct CGRect)_boundsForInterfaceOrientation:(int)arg1;
@property(readonly, nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

