//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <EventKit/EKCalendarItem.h>

@class EKCalendarDate, EKEventStore, EKParticipant, NSArray, NSDate, NSNumber, NSString, NSURL;

@interface EKEvent : EKCalendarItem
{
    BOOL _occurrenceIsAllDay;
    BOOL _requiresDetachDueToSnoozedAlarm;
    EKCalendarDate *_occurrenceStartDate;
    EKCalendarDate *_occurrenceEndDate;
    EKCalendarDate *_originalOccurrenceStartDate;
    EKCalendarDate *_originalOccurrenceEndDate;
    NSNumber *_originalOccurrenceIsAllDay;
}

+ (id)privacyLevelAsString:(int)arg1;
+ (id)eventWithEventStore:(id)arg1;
@property(copy, nonatomic) NSDate *endDate;
@property(copy, nonatomic) NSDate *startDate;
- (void)rollback;
@property(nonatomic, getter=isAllDay) BOOL allDay;
@property(nonatomic) double travelTime;
@property(readonly, nonatomic) int status;
@property(readonly, copy, nonatomic) NSString *uniqueId;
@property(readonly) BOOL isEditable;
- (void)setTimeZone:(id)arg1;
- (id)title;
@property(readonly) double duration;
- (id)description;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)init;
- (void)dealloc;
- (id)_dateForNextOccurrence;
- (void)revert;
- (id)dirtyPropertiesToSkip;
- (void)snoozeAlarm:(id)arg1 withTimeIntervalFromNow:(double)arg2;
@property(readonly, nonatomic) BOOL canBeRespondedTo;
- (BOOL)hasSelfAttendee;
@property(readonly, nonatomic) BOOL travelAdvisoryBehaviorIsEffectivelyEnabled;
@property(nonatomic) int travelAdvisoryBehavior;
- (BOOL)changingAllDayPropertyIsAllowed;
@property(readonly) BOOL canDetachSingleOccurrence;
- (int)compareStartDateWithEvent:(id)arg1;
- (BOOL)isTentative;
@property(readonly, nonatomic) BOOL attendeeReplyChanged;
@property(readonly, nonatomic) BOOL locationChanged;
@property(readonly, nonatomic) BOOL titleChanged;
@property(readonly, nonatomic) BOOL timeChanged;
@property(readonly, nonatomic) BOOL dateChanged;
@property(nonatomic) int privacyLevel;
@property(readonly) BOOL isTravelTimeEditable;
@property(readonly) int travelRoutingMode;
@property(copy) NSString *responseComment;
@property(nonatomic) int availability;
- (id)startDateForRecurrence;
- (void)setRecurrenceRule:(id)arg1;
- (id)recurrenceRule;
- (int)_parentParticipationStatus;
- (BOOL)needsOccurrenceCacheUpdate;
@property(readonly, copy) NSDate *initialEndDate;
@property(readonly, nonatomic) EKCalendarDate *endCalendarDate;
@property(readonly) double durationIncludingTravel;
@property(readonly) EKCalendarDate *startCalendarDateIncludingTravelTime;
@property(readonly) BOOL isEndDateDirty;
@property(readonly) BOOL isStartDateDirty;
@property(readonly) BOOL isStatusDirty;
- (BOOL)_deleteWithSpan:(int)arg1 error:(id *)arg2;
- (BOOL)_shouldDeclineInsteadOfDelete;
- (BOOL)_cancelWithSpan:(int)arg1 error:(id *)arg2;
- (BOOL)_shouldCancelInsteadOfDeleteWithSpan:(int)arg1;
- (void)_deleteThisOccurrence;
- (CDStruct_b0fa4487)endDatePinnedForAllDay;
- (CDStruct_b0fa4487)startDatePinnedForAllDay;
- (BOOL)_occurrenceExistsOnDate:(double)arg1 timeZone:(id)arg2;
- (BOOL)_checkStartDateConstraintAgainstDate:(CDStruct_b0fa4487)arg1 timeZone:(id)arg2 error:(id *)arg3;
@property(copy, nonatomic) NSNumber *originalOccurrenceIsAllDay; // @synthesize originalOccurrenceIsAllDay=_originalOccurrenceIsAllDay;
@property(nonatomic) BOOL occurrenceIsAllDay; // @synthesize occurrenceIsAllDay=_occurrenceIsAllDay;
@property(nonatomic) int participationStatus;
- (void)_detachWithStartDate:(id)arg1 newStartDate:(id)arg2 future:(BOOL)arg3;
- (BOOL)_isInitialOccurrenceDate:(id)arg1;
@property(nonatomic) BOOL requiresDetachDueToSnoozedAlarm; // @synthesize requiresDetachDueToSnoozedAlarm=_requiresDetachDueToSnoozedAlarm;
- (BOOL)allowsRecurrenceModifications;
- (BOOL)_validateDatesAndRecurrencesGivenSpan:(int)arg1 error:(id *)arg2;
- (BOOL)validateRecurrenceRule:(id)arg1 error:(id *)arg2;
- (void)_sendModifiedNote;
- (id)_travelTimeInternalDescription;
- (BOOL)allowsAlarmModifications;
@property(readonly, nonatomic) NSDate *participationStatusModifiedDate;
@property(readonly, nonatomic) int pendingParticipationStatus;
@property(readonly, nonatomic) BOOL eligibleForTravelAdvisories;
@property(readonly) BOOL isAllDayDirty;
- (BOOL)requiresDetach;
@property(readonly, nonatomic) BOOL responseMustApplyToAll;
- (BOOL)allowsCalendarModifications;
@property(readonly, nonatomic) BOOL isDetached;
- (BOOL)_validateAlarmIntervalConstrainedToRecurrenceInterval:(int)arg1;
- (BOOL)_validateDurationConstrainedToRecurrenceInterval;
- (BOOL)canMoveToCalendar:(id)arg1 fromCalendar:(id)arg2 error:(id *)arg3;
@property(readonly, nonatomic) BOOL allowsPrivacyLevelModifications;
- (void)setNeedsOccurrenceCacheUpdate:(BOOL)arg1;
- (void)setModifiedProperties:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned int modifiedProperties;
@property(readonly, nonatomic) CDStruct_b0fa4487 endDateGr;
@property(readonly, nonatomic) CDStruct_b0fa4487 startDateGr;
- (CDStruct_b0fa4487)_gregorianDateCorrectedForTimeZoneFromCalendarDate:(id)arg1 orNSDate:(id)arg2;
- (id)_effectiveTimeZone;
@property(copy, nonatomic) EKCalendarDate *originalOccurrenceEndDate; // @synthesize originalOccurrenceEndDate=_originalOccurrenceEndDate;
@property(copy, nonatomic) EKCalendarDate *occurrenceEndDate; // @synthesize occurrenceEndDate=_occurrenceEndDate;
@property(copy, nonatomic) EKCalendarDate *originalOccurrenceStartDate; // @synthesize originalOccurrenceStartDate=_originalOccurrenceStartDate;
@property(readonly) NSDate *startDateIncludingTravel;
@property(readonly, nonatomic) EKCalendarDate *startCalendarDate;
@property(readonly, copy) NSDate *initialStartDate;
@property(readonly, nonatomic) int birthdayPersonID;
- (id)committedValueForKey:(id)arg1;
@property(copy, nonatomic) EKCalendarDate *occurrenceStartDate; // @synthesize occurrenceStartDate=_occurrenceStartDate;
- (id)exportToICS;
@property(readonly, nonatomic) NSURL *externalURL;
@property(readonly, nonatomic) NSString *eventIdentifier;
- (id)_persistentEvent;
- (BOOL)_isAllDay;
- (id)initWithEventStore:(id)arg1;
- (id)externalURI;
@property(nonatomic) unsigned int invitationStatus;
- (BOOL)removeWithSpan:(int)arg1 error:(id *)arg2;
- (BOOL)commitWithSpan:(int)arg1 error:(id *)arg2;
- (BOOL)validateWithSpan:(int)arg1 error:(id *)arg2;
- (id)initWithPersistentObject:(id)arg1 occurrenceDate:(id)arg2;
- (void)clearInvitationStatus;
- (void)didCommit;
@property(readonly, nonatomic) EKEventStore *eventStore;
- (id)initWithPersistentObject:(id)arg1;
- (BOOL)refresh;
@property(readonly, nonatomic) BOOL canSetAvailability;
@property(readonly, nonatomic) NSDate *occurrenceDate;

// Remaining properties
@property(readonly, nonatomic) NSString *UUID;
@property(readonly, nonatomic) NSArray *attachments;
@property(readonly, nonatomic) EKParticipant *organizer;

@end

