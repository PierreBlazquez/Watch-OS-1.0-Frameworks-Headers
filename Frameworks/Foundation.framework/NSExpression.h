//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"
#import "NSSecureCoding.h"

@class NSArray, NSPredicate, NSString;

@interface NSExpression : NSObject <NSSecureCoding, NSCopying>
{
    struct _expressionFlags {
        unsigned int _evaluationBlocked:1;
        unsigned int _reservedExpressionFlags:31;
    } _expressionFlags;
    unsigned int _expressionType;
}

+ (id)expressionForEvaluatedObject;
+ (id)expressionForFunction:(id)arg1 arguments:(id)arg2;
+ (id)expressionForKeyPath:(id)arg1;
+ (BOOL)supportsSecureCoding;
+ (id)expressionForAnyKey;
+ (id)expressionForBlock:(CDUnknownBlockType)arg1 arguments:(id)arg2;
+ (id)expressionForMinusSet:(id)arg1 with:(id)arg2;
+ (id)expressionForIntersectSet:(id)arg1 with:(id)arg2;
+ (id)expressionForUnionSet:(id)arg1 with:(id)arg2;
+ (id)expressionForTernaryWithPredicate:(id)arg1 trueExpression:(id)arg2 falseExpression:(id)arg3;
+ (id)expressionForVariableNameAssignment:(id)arg1 expression:(id)arg2;
+ (id)expressionForAggregate:(id)arg1;
+ (id)expressionForSymbolicString:(id)arg1;
+ (id)expressionWithFormat:(id)arg1 argumentArray:(id)arg2;
+ (id)expressionWithFormat:(id)arg1 arguments:(void *)arg2;
+ (id)expressionWithFormat:(id)arg1;
+ (id)expressionForSubquery:(id)arg1 usingIteratorVariable:(id)arg2 predicate:(id)arg3;
+ (id)expressionForVariable:(id)arg1;
+ (id)expressionForFunction:(id)arg1 selectorName:(id)arg2 arguments:(id)arg3;
+ (id)_newKeyPathExpressionForString:(id)arg1;
+ (id)expressionForConstantValue:(id)arg1;
@property(readonly, copy) NSArray *arguments;
@property(readonly, copy) NSString *variable;
@property(readonly, copy) NSPredicate *predicate;
@property(readonly, copy) NSString *keyPath;
- (SEL)selector;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)_shouldUseParensWithDescription;
@property(readonly, copy) CDUnknownBlockType expressionBlock;
- (id)subexpression;
- (BOOL)_allowsEvaluation;
- (id)falseExpression;
- (id)trueExpression;
@property(readonly, copy) NSString *function;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (id)predicateFormat;
- (id)initWithExpressionType:(unsigned int)arg1;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
@property(readonly, retain) id collection;
@property(readonly, copy) NSExpression *operand;
- (void)allowEvaluation;
@property(readonly, retain) id constantValue;
@property(readonly) unsigned int expressionType;
@property(readonly, copy) NSExpression *leftExpression;
@property(readonly, copy) NSExpression *rightExpression;

@end

