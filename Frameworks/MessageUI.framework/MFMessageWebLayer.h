//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIWebBrowserView.h"

@class DOMRange, MFLibraryMessage, MFMessageReformattingContext, NSMutableDictionary, NSObject<MFMessageWebLayerDelegate>, NSString, NSTimer;

@interface MFMessageWebLayer : UIWebBrowserView
{
    NSString *_currentUUID;
    NSTimer *_ignorePendingStylesheetsTimer;
    NSObject<MFMessageWebLayerDelegate> *_mwlDelegate;
    int _displayStyle;
    unsigned int _shouldReformat:1;
    unsigned int _unitTests:1;
    unsigned int _isFromEntourage:1;
    BOOL _prePrintDataDetectionPending;
    BOOL _showRemoteImages;
    BOOL _hasUnloadedRemoteImages;
    BOOL _isReformatting;
    CDUnknownBlockType _postDisplayOperationBlock;
    CDUnknownBlockType _postDisplayCancellationBlock;
    NSString *_mainFrameURL;
    MFLibraryMessage *_displayInfoCacheLibraryMessage;
    NSMutableDictionary *_displayInfoCache;
    BOOL _stoppedLoading;
    BOOL _didReformatMessage;
    BOOL _shouldAttemptToReformatMessage;
    NSString *_originalHTMLString;
    MFMessageReformattingContext *_reformattingContext;
    DOMRange *_bottomReplyRange;
    unsigned int _bottomReplyLastQuoteLevel;
}

+ (void)initialize;
+ (void)clearMessageContentCache;
+ (void)clearUnblockedRemoteImagesCache;
+ (void)endBlockingRemoteImages;
+ (void)beginBlockingRemoteImagesExceptForMessageWebLayer:(id)arg1;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 didFirstVisuallyNonEmptyLayoutInFrame:(id)arg2;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (float)maximumDoubleTapScale;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)stopLoading:(id)arg1;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)copy:(id)arg1;
- (float)defaultWidth;
- (BOOL)isCancelled;
- (void)reload;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (BOOL)_elementHasDefinedWidth:(id)arg1;
- (id)_rangeOfFirstText;
- (void)_didFinishReformattingMessage;
- (BOOL)_rescaleTopLevelElements;
- (BOOL)_shouldRescaleMessage;
- (void)_reformattingDidFail;
- (id)_reformatOneElementUsingMethod:(CDUnknownBlockType)arg1 shouldCancel:(char *)arg2;
- (BOOL)_shouldContinueResizingMessage;
- (BOOL)_shouldResizeMessage;
- (void)_willBeginReformattingMessage;
- (void)invalidateDisplayInfoCache;
@property BOOL shouldAttemptToReformatMessage; // @synthesize shouldAttemptToReformatMessage=_shouldAttemptToReformatMessage;
@property BOOL hasUnloadedRemoteImages; // @synthesize hasUnloadedRemoteImages=_hasUnloadedRemoteImages;
@property BOOL showRemoteImages; // @synthesize showRemoteImages=_showRemoteImages;
@property BOOL prePrintDataDetectionPending; // @synthesize prePrintDataDetectionPending=_prePrintDataDetectionPending;
- (id)attachmentDownloadProgressObserversByUniqueIdentifiers;
- (int)displayStyle;
- (BOOL)hasPluginWithUninitializedSize;
- (void)displayDidEnd;
- (void)loadFragments:(id)arg1 forLibraryMessage:(id)arg2;
- (BOOL)webView:(id)arg1 shouldPaintBrokenImageForURL:(id)arg2;
- (void)_webthread_webView:(id)arg1 didFinishDocumentLoadForFrame:(id)arg2;
- (void)_webthread_webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)setMessageIsFromEntourage:(BOOL)arg1;
- (void)adjustSizeBasedOnMainFrame:(id)arg1;
- (void)webThreadWebView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4;
- (void)webThreadWebView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3;
- (void)updateImageWithSource:(id)arg1 withHTMLRepresentation:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)updateInlinePluginWithContentID:(id)arg1 withHTMLRepresentation:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)updateImageURL:(id)arg1 withURL:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)appendMarkupString:(id)arg1 baseURL:(id)arg2;
- (void)performBatchUpdates:(CDUnknownBlockType)arg1;
- (id)messageWebLayerDelegate;
- (void)setMessageWebLayerDelegate:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 visibleSize:(struct CGSize)arg2 viewportWidth:(float)arg3 displayStyle:(int)arg4;
- (void)saveDisplayInfoCache;
- (void)clearMessageReformattingCache;
- (void)stopLoadingAndClear;
- (void)cancelPostDisplayOperation;
- (void)prepareDisplayInfoCacheWithLibraryMessage:(id)arg1;
- (void)_schedulePendingIgnoreStylesheets;
- (void)_frameDidFinishPrePrintURLification:(id)arg1;
- (void)_ignorePendingStylesheets:(id)arg1;
- (BOOL)canReformatMessageWithoutSubresources:(id)arg1 resultCanBeCached:(char *)arg2;
- (void)reformatAttachments:(id)arg1;
- (void)reformatMessage:(id)arg1;
- (void)parseDocument:(id)arg1;
@property(copy) NSString *originalHTMLString; // @synthesize originalHTMLString=_originalHTMLString;
- (void)attemptEarlyMessageReformat;
@property unsigned int bottomReplyLastQuoteLevel; // @synthesize bottomReplyLastQuoteLevel=_bottomReplyLastQuoteLevel;
@property(retain) DOMRange *bottomReplyRange; // @synthesize bottomReplyRange=_bottomReplyRange;
- (BOOL)reformatMessageOnce;
- (void)setPostDisplayOperationBlock:(CDUnknownBlockType)arg1 cancellationBlock:(CDUnknownBlockType)arg2;
- (id)newQuoteSubparser;
- (BOOL)boolForDisplayInfoCacheKey:(id)arg1;
- (void)setObject:(id)arg1 forDisplayInfoCacheKey:(id)arg2;
- (id)objectForDisplayInfoCacheKey:(id)arg1;
- (void)setBool:(BOOL)arg1 forDisplayInfoCacheKey:(id)arg2;
- (void)_cancelPendingIgnoreStylesheets;
- (void)addUnblockedRemoteImageURL:(id)arg1;
- (void)addMessageContentURL:(id)arg1;
- (id)_createInlinePluginElementWithHTMLRepresentation:(id)arg1 inDocument:(id)arg2;
- (void)_replaceElement:(id)arg1 with:(id)arg2;
- (BOOL)usePadDisplayStyle;
- (void)_sendDelegateSizeDidChange;
@property(retain) MFMessageReformattingContext *reformattingContext; // @synthesize reformattingContext=_reformattingContext;
- (void)_preferredContentSizeDidChangeNotification:(id)arg1;
- (void)_webthread_webView:(id)arg1 tileDidDraw:(id)arg2;
- (id)webThreadWebView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (id)webThreadWebView:(id)arg1 identifierForInitialRequest:(id)arg2 fromDataSource:(id)arg3;

@end

