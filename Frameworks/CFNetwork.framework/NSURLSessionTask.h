//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"

@class NSArray, NSDictionary, NSError, NSObject<OS_dispatch_queue>, NSString, NSURL, NSURLRequest, NSURLResponse, NSURLSession, NSValue;

@interface NSURLSessionTask : NSObject <NSCopying>
{
    BOOL __shouldSkipPreferredClientCertificateLookup;
    _Bool __shouldPipelineHTTP;
    _Bool __shouldUsePipelineHeuristics;
    _Bool __shouldSkipPipelineProbe;
    _Bool __shouldHandleCookies;
    _Bool __preventsIdleSystemSleep;
    _Bool __allowsCellular;
    BOOL __prohibitAuthUI;
    BOOL __strictContentLength;
    _Bool __disallowCellular;
    BOOL __connectionIsCellular;
    unsigned int _taskIdentifier;
    NSURLRequest *_originalRequest;
    NSURLResponse *_response;
    NSString *_taskDescription;
    int _state;
    NSError *_error;
    NSURL *__ledBellyFallbackURL;
    struct _CFURLRequest *__currentCFURLRequest;
    NSURLSession *_session;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSString *__ledBellyServiceIdentifier;
    float __priorityHint;
    struct __PerformanceTiming *__performanceTiming;
    NSDictionary *__backgroundTaskTimingData;
    NSDictionary *__legacySocketStreamProperties;
    struct _CFHSTSPolicy *__cfHSTS;
    struct _CFURLCache *__cfCache;
    struct _CFURLCredentialStorage *__cfCreds;
    struct OpaqueCFHTTPCookieStorage *__cfCookies;
    int __cachePolicy;
    NSDictionary *__proxySettings;
    NSDictionary *__sslSettings;
    int __cookieAcceptPolicy;
    NSDictionary *__additionalHeaders;
    NSArray *__contentDispositionFallbackArray;
    int __networkServiceType;
    NSValue *__connectionPropertyDuet;
    NSString *__boundInterfaceIdentifier;
    unsigned long __allowedProtocolTypes;
    long __requestPriority;
    NSString *__uniqueIdentifier;
    unsigned int __powerAssertion;
    id __protocolForTask;
    long long _countOfBytesReceived;
    long long _countOfBytesSent;
    long long _countOfBytesExpectedToSend;
    long long _countOfBytesExpectedToReceive;
    double _startTime;
    long long __priorityValue;
    double __timeoutInterval;
    long long __suspensionThreshhold;
    long long __expectedWorkload;
    double __timeWindowDelay;
    double __timeWindowDuration;
}

+ (BOOL)supportsSecureCoding;
+ (id)taskForWrappedRequest:(id)arg1;
@property(copy) NSError *error; // @synthesize error=_error;
@property unsigned int taskIdentifier; // @synthesize taskIdentifier=_taskIdentifier;
@property(copy) NSURLResponse *response; // @synthesize response=_response;
@property(readonly, copy) NSURLRequest *currentRequest;
@property(copy) NSURLRequest *originalRequest; // @synthesize originalRequest=_originalRequest;
@property double startTime; // @synthesize startTime=_startTime;
@property float priority;
- (void)resume;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)suspend;
@property(copy) NSString *_uniqueIdentifier; // @synthesize _uniqueIdentifier=__uniqueIdentifier;
@property int state; // @synthesize state=_state;
- (id)description;
- (void)dealloc;
- (void)cancel;
@property(retain) NSURLSession *session; // @synthesize session=_session;
@property(setter=_setConnectionIsCellular:) BOOL _connectionIsCellular; // @synthesize _connectionIsCellular=__connectionIsCellular;
@property long long _priority;
@property BOOL _prohibitAuthUI; // @synthesize _prohibitAuthUI=__prohibitAuthUI;
@property(nonatomic) struct __PerformanceTiming *_performanceTiming; // @synthesize _performanceTiming=__performanceTiming;
- (struct __CFDictionary *)_copySocketStreamProperties0;
- (void)adjustConditionalConnectionProperties:(struct __CFDictionary *)arg1;
@property float _priorityHint; // @synthesize _priorityHint=__priorityHint;
@property _Bool _disallowCellular; // @synthesize _disallowCellular=__disallowCellular;
@property(retain) NSString *_boundInterfaceIdentifier; // @synthesize _boundInterfaceIdentifier=__boundInterfaceIdentifier;
@property int _networkServiceType; // @synthesize _networkServiceType=__networkServiceType;
@property _Bool _allowsCellular; // @synthesize _allowsCellular=__allowsCellular;
@property(retain) NSArray *_contentDispositionFallbackArray; // @synthesize _contentDispositionFallbackArray=__contentDispositionFallbackArray;
@property(retain) NSDictionary *_additionalHeaders; // @synthesize _additionalHeaders=__additionalHeaders;
@property int _cookieAcceptPolicy; // @synthesize _cookieAcceptPolicy=__cookieAcceptPolicy;
@property _Bool _shouldHandleCookies; // @synthesize _shouldHandleCookies=__shouldHandleCookies;
@property(retain) struct OpaqueCFHTTPCookieStorage *_cfCookies; // @synthesize _cfCookies=__cfCookies;
@property(retain) struct _CFURLCredentialStorage *_cfCreds; // @synthesize _cfCreds=__cfCreds;
@property(retain) struct _CFURLCache *_cfCache; // @synthesize _cfCache=__cfCache;
@property(retain) struct _CFHSTSPolicy *_cfHSTS; // @synthesize _cfHSTS=__cfHSTS;
@property(retain) NSDictionary *_legacySocketStreamProperties; // @synthesize _legacySocketStreamProperties=__legacySocketStreamProperties;
@property(copy) NSURL *_ledBellyFallbackURL; // @synthesize _ledBellyFallbackURL=__ledBellyFallbackURL;
@property long long _priorityValue; // @synthesize _priorityValue=__priorityValue;
@property BOOL _shouldSkipPreferredClientCertificateLookup; // @synthesize _shouldSkipPreferredClientCertificateLookup=__shouldSkipPreferredClientCertificateLookup;
@property BOOL _strictContentLength; // @synthesize _strictContentLength=__strictContentLength;
@property(copy) NSValue *_connectionPropertyDuet; // @synthesize _connectionPropertyDuet=__connectionPropertyDuet;
@property long long _suspensionThreshhold; // @synthesize _suspensionThreshhold=__suspensionThreshhold;
- (void)_initializeTimingDataWithSessionConfiguration:(id)arg1;
@property(retain) struct _CFURLRequest *_currentCFURLRequest; // @synthesize _currentCFURLRequest=__currentCFURLRequest;
@property(readonly, retain) NSURL *originalRequest_mainDocumentURL;
- (void)_releasePreventIdleSleepAssertionIfAppropriate;
@property(copy) NSString *_ledBellyServiceIdentifier; // @synthesize _ledBellyServiceIdentifier=__ledBellyServiceIdentifier;
- (void)_takePreventIdleSleepAssertionIfAppropriate;
@property double _timeWindowDuration; // @synthesize _timeWindowDuration=__timeWindowDuration;
@property double _timeWindowDelay; // @synthesize _timeWindowDelay=__timeWindowDelay;
@property long long _expectedWorkload; // @synthesize _expectedWorkload=__expectedWorkload;
@property _Bool _preventsIdleSystemSleep; // @synthesize _preventsIdleSystemSleep=__preventsIdleSystemSleep;
@property unsigned long _allowedProtocolTypes; // @synthesize _allowedProtocolTypes=__allowedProtocolTypes;
@property long _requestPriority; // @synthesize _requestPriority=__requestPriority;
@property _Bool _shouldSkipPipelineProbe; // @synthesize _shouldSkipPipelineProbe=__shouldSkipPipelineProbe;
@property _Bool _shouldUsePipelineHeuristics; // @synthesize _shouldUsePipelineHeuristics=__shouldUsePipelineHeuristics;
@property _Bool _shouldPipelineHTTP; // @synthesize _shouldPipelineHTTP=__shouldPipelineHTTP;
@property(retain) NSDictionary *_sslSettings; // @synthesize _sslSettings=__sslSettings;
@property(retain) NSDictionary *_proxySettings; // @synthesize _proxySettings=__proxySettings;
@property double _timeoutInterval; // @synthesize _timeoutInterval=__timeoutInterval;
@property int _cachePolicy; // @synthesize _cachePolicy=__cachePolicy;
- (struct __CFHTTPMessage *)_copyHTTPMessage;
- (void)_setExplicitCookieStorage:(struct OpaqueCFHTTPCookieStorage *)arg1;
- (void)_setExplicitStorageSession:(struct __CFURLStorageSession *)arg1;
- (void)_setSocketProperties:(struct __CFDictionary *)arg1 connectionProperties:(struct __CFDictionary *)arg2;
- (struct __CFDictionary *)_copySocketStreamProperties;
- (struct _CFURLRequest *)_copyOriginalCFURLRequest;
- (struct _CFURLRequest *)_copyCurrentCFURLRequest;
- (void)cleanupAndBreakCycles;
@property NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(copy, nonatomic) NSDictionary *_backgroundTaskTimingData; // @synthesize _backgroundTaskTimingData=__backgroundTaskTimingData;
@property(copy) NSString *taskDescription; // @synthesize taskDescription=_taskDescription;
@property long long countOfBytesExpectedToSend; // @synthesize countOfBytesExpectedToSend=_countOfBytesExpectedToSend;
@property long long countOfBytesSent; // @synthesize countOfBytesSent=_countOfBytesSent;
- (id)_timingData;
@property long long countOfBytesExpectedToReceive; // @synthesize countOfBytesExpectedToReceive=_countOfBytesExpectedToReceive;
- (void)_onqueue_adjustPriorityHint:(float)arg1;
- (void)_onqueue_releasePowerAsssertion;
@property(readonly, retain) NSURL *currentRequest_URL;
@property long long countOfBytesReceived; // @synthesize countOfBytesReceived=_countOfBytesReceived;
- (id)initWithTask:(id)arg1;
- (struct _CFHSTSPolicy *)_copyHSTSPolicy;
@property(nonatomic) id _protocolForTask; // @synthesize _protocolForTask=__protocolForTask;
- (_Bool)shouldHandleCookiesAndSchemeIsAppropriate;
- (const struct XURLCache *)_createXURLCache;
- (const struct XCredentialStorage *)_createXCredentialStorage;
- (const struct XCookieStorage *)_createXCookieStorage;
- (id)initWithOriginalRequest:(id)arg1 updatedRequest:(id)arg2 ident:(unsigned int)arg3 session:(id)arg4;
- (void)updateCurrentRequest:(id)arg1;
@property unsigned int _powerAssertion; // @synthesize _powerAssertion=__powerAssertion;

@end

