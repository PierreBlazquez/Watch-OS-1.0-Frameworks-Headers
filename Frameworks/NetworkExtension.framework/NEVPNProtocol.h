//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NEConfigurationLegacySupport.h"
#import "NEConfigurationValidating.h"
#import "NEPrettyDescription.h"
#import "NSCopying.h"
#import "NSSecureCoding.h"

@class NEIdentityKeychainItem, NEKeychainItem, NEProxySettings, NSData, NSString, NSUUID;

@interface NEVPNProtocol : NSObject <NEConfigurationValidating, NEPrettyDescription, NEConfigurationLegacySupport, NSCopying, NSSecureCoding>
{
    BOOL _disconnectOnSleep;
    BOOL _disconnectOnWake;
    BOOL _identityDataImported;
    BOOL _disconnectOnIdle;
    BOOL _disconnectOnUserSwitch;
    BOOL _disconnectOnLogout;
    NSString *_serverAddress;
    NSString *_username;
    NSString *_identityDataPassword;
    NSUUID *_identifier;
    int _type;
    int _disconnectOnWakeTimeout;
    NEKeychainItem *_passwordKeychainItem;
    NSString *_passwordEncryption;
    NEProxySettings *_proxySettings;
    NSData *_identityDataInternal;
    NSData *_identityDataHash;
    int _disconnectOnIdleTimeout;
    int _keychainDomain;
    NEIdentityKeychainItem *_identity;
}

+ (BOOL)supportsSecureCoding;
@property(copy) NSString *username; // @synthesize username=_username;
@property(retain) NEIdentityKeychainItem *identity; // @synthesize identity=_identity;
- (void).cxx_destruct;
@property(copy) NSUUID *identifier; // @synthesize identifier=_identifier;
- (id)initWithType:(int)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly) int type; // @synthesize type=_type;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property int keychainDomain; // @synthesize keychainDomain=_keychainDomain;
@property BOOL disconnectOnLogout; // @synthesize disconnectOnLogout=_disconnectOnLogout;
@property BOOL disconnectOnUserSwitch; // @synthesize disconnectOnUserSwitch=_disconnectOnUserSwitch;
- (void)copyPasswordsFromKeychainInDomain:(int)arg1;
@property(copy) NSData *identityData;
@property(copy) NSData *identityReference;
@property(copy) NSData *passwordReference;
- (void)syncWithKeychainInDomainCommon:(int)arg1;
@property(copy) NSData *identityReferenceInternal;
- (id)initFromLegacyDictionary:(id)arg1;
- (void)initDisconnectOptions:(id)arg1;
- (void)addDisconnectOptions:(id)arg1;
- (id)type2str;
@property(copy) NSString *passwordEncryption; // @synthesize passwordEncryption=_passwordEncryption;
@property(copy) NEKeychainItem *passwordKeychainItem; // @synthesize passwordKeychainItem=_passwordKeychainItem;
@property int disconnectOnWakeTimeout; // @synthesize disconnectOnWakeTimeout=_disconnectOnWakeTimeout;
@property BOOL disconnectOnSleep; // @synthesize disconnectOnSleep=_disconnectOnSleep;
@property int disconnectOnIdleTimeout; // @synthesize disconnectOnIdleTimeout=_disconnectOnIdleTimeout;
@property BOOL disconnectOnIdle; // @synthesize disconnectOnIdle=_disconnectOnIdle;
@property(copy) NEProxySettings *proxySettings; // @synthesize proxySettings=_proxySettings;
@property(copy) NSData *identityDataHash; // @synthesize identityDataHash=_identityDataHash;
@property BOOL identityDataImported; // @synthesize identityDataImported=_identityDataImported;
@property(copy) NSString *identityDataPassword; // @synthesize identityDataPassword=_identityDataPassword;
@property(copy) NSData *identityDataInternal; // @synthesize identityDataInternal=_identityDataInternal;
@property(copy) NSString *serverAddress; // @synthesize serverAddress=_serverAddress;
- (id)initWithProtocolIdentifier:(id)arg1;
@property BOOL disconnectOnWake; // @synthesize disconnectOnWake=_disconnectOnWake;
- (struct __SCNetworkInterface *)createInterface;
- (BOOL)updateWithServiceProtocolsFromService:(struct __SCNetworkService *)arg1;
- (BOOL)setServiceProtocolsInService:(struct __SCNetworkService *)arg1;
- (void)migratePasswordsFromPreferences:(struct __SCPreferences *)arg1;
- (void)removeKeychainItemsInDomain:(int)arg1;
- (void)syncWithKeychainInDomain:(int)arg1 configuration:(id)arg2 suffix:(id)arg3;
- (id)copyLegacyDictionary;
- (id)descriptionWithIndent:(int)arg1;
- (BOOL)checkValidityAndCollectErrors:(id)arg1;

@end

