//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AVAudioSessionDelegateMediaPlayerOnly.h"
#import "MPAVControllerProtocol.h"
#import "MPAVErrorResolverDelegate.h"
#import "MPAVRoutingControllerDelegate.h"

@class AVAudioSessionMediaPlayerOnly, AVPlayerLayer, CALayer, MPAVControllerToAggregateDCommunicator, MPAVErrorResolver, MPAVItem, MPAVPlaylistManager, MPAVRoute, MPAVRoutingController, MPMediaItem, MPMediaQuery, MPQueueFeeder, MPQueuePlayer, MPVideoView, NSArray, NSDate, NSMapTable, NSMutableArray, NSMutableSet, NSNotification, NSObject<OS_dispatch_source>, NSString;

@interface MPAVController : NSObject <AVAudioSessionDelegateMediaPlayerOnly, MPAVRoutingControllerDelegate, MPAVErrorResolverDelegate, MPAVControllerProtocol>
{
    MPAVPlaylistManager *_avPlaylistManager;
    BOOL _forceSynchronousQueueFilling;
    BOOL _managesSystemDownloads;
    int _playbackMode;
    BOOL _valid;
    MPAVRoutingController *_routingController;
    MPAVRoute *_pickedRoute;
    MPQueueFeeder *_feeder;
    MPAVErrorResolver *_itemErrorResolver;
    AVPlayerLayer *_videoLayer;
    unsigned int _videoLayerUsageCount;
    MPVideoView *_videoView;
    unsigned int _tickTimerEnabled;
    struct __CFRunLoopTimer *_tickTimer;
    double _tickInterval;
    struct __CFRunLoopTimer *_currentItemBookkeepingTimer;
    int _indexChangeDirection;
    unsigned int _itemIndexAtDeath;
    int _lastDisconnectReason;
    double _lastKnownTimeBeforeDeath;
    double _lastPlaybackIndexChangeTime;
    double _lastSetTime;
    double _lastSetTimeChangeTime;
    unsigned int _hasDelayedCurrentTimeToSet:1;
    unsigned int _forceDelayedCurrentTimeToSet:1;
    double _delayedCurrentTimeToSet;
    int _delayedCurrentTimeOptions;
    unsigned int _lastSetTimeMarker;
    double _temporaryChapterTime;
    unsigned int _autoPlayWhenLikelyToKeepUp:1;
    unsigned int _autoplayDisabledForCurrentItem:1;
    int _eqPreset;
    double _nextFadeOutDuration;
    id _boundaryTimeObserver;
    NSArray *_boundaryTimes;
    unsigned int _boundaryTimeIndexLastPosted;
    NSMutableArray *_observerInfos;
    NSMapTable *_observerInfoToCoreMediaObserver;
    float _rateBeforeSeek;
    float _inflightSeekRate;
    unsigned int _scanLevel;
    int _scanDirection;
    int _resetRateAfterSeekingUpdateDisabled;
    unsigned int _seeklessState;
    unsigned int _isSeekingOrScrubbing:1;
    unsigned int _resetRateAfterSeeking:1;
    unsigned int _activeRewindHoldingAtStart:1;
    double _lastSeekableEnd;
    double _whenSawSeekableEnd;
    double _maxSeekableFwd;
    double _seekFwdSlop;
    double _lastSeekableStart;
    double _whenSawSeekableStart;
    double _maxSeekableRev;
    double _seekRevSlop;
    unsigned int _canSeekRev:1;
    unsigned int _canSeekFwd:1;
    unsigned int _alwaysPlayWheneverPossible:1;
    unsigned int _stopAtEnd:1;
    unsigned int _didReachEnd:1;
    unsigned int _pausedDuringInterruption:1;
    unsigned int _resumePlaybackWhenActive:1;
    unsigned int _useApplicationAudioSession:1;
    unsigned int _playInBackgroundUserDefaultEnabled:1;
    unsigned int _canPlayFastForward:1;
    unsigned int _canPlayFastReverse:1;
    unsigned int _shouldAutoclearDisplayOverride:1;
    unsigned int _state;
    unsigned int _displayOverridePlaybackState;
    unsigned int _bufferingState;
    NSNotification *_delayedPlaybackStateNotification;
    NSObject<OS_dispatch_source> *_stallTimerSource;
    NSMutableArray *_queueFeederStateStack;
    int _feederMode;
    MPAVControllerToAggregateDCommunicator *_aggregateDCommunicator;
    double _itemInitialBookmarkTime;
    float _rateBeforeResignActive;
    int _ubiquitousBookkeepingDisabledCount;
    double _secondsSinceUbiquitousCheckpoint;
    Class _videoViewClass;
    NSString *_audioSessionModeOverride;
    double _lastInterruptionEnd;
    BOOL _shouldEnforceHDCP;
    NSMutableSet *_clientsWantingAirPlayVideo;
    BOOL _currentItemDidLoad;
    BOOL _currentItemStartedAsCloudItem;
    BOOL _didResolveError;
    BOOL _disallowsAMRAudio;
    BOOL _disableAirPlayMirroringDuringPlayback;
    NSDate *_itemDidChangeDate;
    BOOL _shouldPreventStateChangesForRateChange;
    unsigned int _stallBackgroundTaskIdentifier;
    BOOL _usesAudioOnlyModeForExternalPlayback;
    BOOL _shouldSkipToNextTrackOnResumeFromInterruption;
    BOOL _useAirPlayMusicMode;
    BOOL _managesAirPlayBehaviors;
}

+ (void)initialize;
+ (id)sharedInstance;
+ (id)_playerKeysToObserve;
+ (id)_controllerKeysToObserve;
+ (id)_itemKeysToObserve;
+ (BOOL)isNetworkSupportedPath:(id)arg1;
+ (BOOL)outputSupportsAC3;
@property(readonly, nonatomic) CALayer *videoLayer;
@property(readonly, nonatomic) int externalPlaybackType;
@property(readonly, nonatomic, getter=isPlaying) BOOL playing;
- (BOOL)allowsExternalPlayback;
@property(readonly, nonatomic) BOOL isExternalPlaybackActive;
@property(nonatomic) double currentTime;
- (void)removeTimeObserver:(id)arg1;
@property(nonatomic) float volume;
- (BOOL)setRate:(float)arg1;
- (float)rate;
- (void)pause;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_applicationWillResignActive:(id)arg1;
- (void).cxx_destruct;
- (void)_setState:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned int numberOfItems;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setActive:(BOOL)arg1;
@property(readonly, nonatomic) MPAVItem *currentItem;
@property(nonatomic) unsigned int state; // @synthesize state=_state;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)applicationWillTerminate;
- (id)init;
- (void)dealloc;
@property(nonatomic) BOOL managesAirPlayBehaviors; // @synthesize managesAirPlayBehaviors=_managesAirPlayBehaviors;
@property(nonatomic) BOOL useAirPlayMusicMode; // @synthesize useAirPlayMusicMode=_useAirPlayMusicMode;
@property(nonatomic) BOOL shouldSkipToNextTrackOnResumeFromInterruption; // @synthesize shouldSkipToNextTrackOnResumeFromInterruption=_shouldSkipToNextTrackOnResumeFromInterruption;
@property(nonatomic) double nextFadeOutDuration; // @synthesize nextFadeOutDuration=_nextFadeOutDuration;
@property(nonatomic) BOOL managesSystemDownloads; // @synthesize managesSystemDownloads=_managesSystemDownloads;
@property(nonatomic) BOOL forceSynchronousQueueFilling; // @synthesize forceSynchronousQueueFilling=_forceSynchronousQueueFilling;
- (void)_updateProgress:(struct __CFRunLoopTimer *)arg1;
- (void)_updateCurrentItemBookkeepingForTimerCallback;
@property(nonatomic) BOOL ubiquitousBookkeepingEnabled;
- (void)skipToSeekableStart;
- (BOOL)canSkipToSeekableEnd;
- (BOOL)canSeekForwards;
- (BOOL)canSeekBackwards;
- (void)reloadWithPlaybackContext:(id)arg1;
- (void)ensureFeederIsSubclass:(Class)arg1;
- (void)restorePreviousFeederState;
- (void)saveCurrentFeederState;
@property(nonatomic) BOOL usesAudioOnlyModeForExternalPlayback;
- (void)switchToVideoPlayback:(BOOL)arg1 forItem:(id)arg2;
- (void)applicationDidReceiveMemoryWarningAsUrgent:(BOOL)arg1;
@property(readonly, nonatomic, getter=isFullScreenVideoMode) BOOL fullScreenVideoMode;
@property(readonly, nonatomic) NSString *routeNameForVolumeControl;
@property(readonly, nonatomic) BOOL hasVolumeControl;
@property(nonatomic) int EQPreset; // @synthesize EQPreset=_eqPreset;
@property(nonatomic) BOOL disableAirPlayMirroringDuringPlayback;
@property(nonatomic) BOOL alwaysPlayWheneverPossible;
@property(readonly, nonatomic, getter=isShuffled) BOOL shuffled;
@property(readonly, nonatomic) unsigned int activeRepeatType;
- (BOOL)isTickTimerEnabled;
- (void)beginTickTimerWithInterval:(double)arg1;
- (id)addBoundaryTimeObserverForTimes:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)addPeriodicTimeObserverForInterval:(double)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (BOOL)forceRestartPlaybackIfNecessary;
- (void)togglePlayback;
- (void)playChapterTimeMarkerAtIndex:(unsigned int)arg1;
- (void)playItemAtIndex:(unsigned int)arg1;
- (void)disconnectPlaylistManagerForTeardown;
@property(readonly, nonatomic) double currentMonotonousTime;
@property(readonly, nonatomic, getter=isRewindHoldingAtStart) BOOL rewindHoldingAtStart;
- (BOOL)isSeekingOrScrubbing;
- (BOOL)fadeOutForQuit;
@property(nonatomic) unsigned int displayOverridePlaybackState; // @synthesize displayOverridePlaybackState=_displayOverridePlaybackState;
@property(readonly, nonatomic) MPMediaQuery *currentMediaQuery;
@property(readonly, nonatomic) MPMediaItem *currentMediaItem;
- (BOOL)shouldDisplayAsPlaying;
- (void)errorResolver:(id)arg1 didResolveError:(id)arg2 withResolution:(int)arg3;
- (void)routingControllerExternalScreenTypeDidChange:(id)arg1;
- (void)beginInterruption;
- (void)endInterruptionFromInterruptor:(id)arg1 category:(id)arg2 flags:(unsigned int)arg3;
- (BOOL)_isVideoLayerAttachedToPlayer;
@property(nonatomic, getter=destinationIsTVOut, setter=setDestinationIsTVOut:) BOOL destinationIsTVOut;
- (void)setRateForScanning:(float)arg1;
- (void)tickTimerFired;
- (void)_updateSeekingIntervalsForStreaming;
- (void)_configureUpdateCurrentItemBookkeepingTimer;
- (unsigned int)_seeklessStateForState:(unsigned int)arg1;
- (void)_clearResetRateAfterSeeking;
- (void)_scheduleUpdateCurrentItemBookkeepingTimer;
- (void)_postPlaybackStateChangedNotificationWithOriginalState:(unsigned int)arg1 newState:(unsigned int)arg2 delayable:(BOOL)arg3;
- (void)_delayedPostPlaybackStateChangedNotification;
- (BOOL)shouldHaveNoActionAtEndForState:(unsigned int)arg1;
@property(nonatomic) BOOL autoPlayWhenLikelyToKeepUp;
- (void)autoclearDisplayOverride;
- (void)_playerFailedToQueueNotification:(id)arg1;
- (void)_itemTypeAvailableNotification:(id)arg1;
- (void)_itemAssetIsLoadedNotification:(id)arg1;
- (void)_timeHasJumpedNotification:(id)arg1;
- (void)_itemFailedToPlayToEndNotification:(id)arg1;
- (id)embeddedDataTimesForItem:(id)arg1;
- (id)_expectedAssetTypesForPlaybackMode:(int)arg1;
- (void)switchToAudioPlayback:(BOOL)arg1 forItem:(id)arg2;
- (BOOL)_shouldSwitchToAudioPlaybackWhenTransitioningFromVideo;
- (void)_configureAVPlaylistManager:(id)arg1;
- (void)_registerForAVPlaylistManagerObservation:(id)arg1;
- (BOOL)_connectAVPlaylistManager;
- (unsigned int)_currentIndexInBoundaryCMTimes:(id)arg1;
- (void)_updateCurrentTimeToBookmarkTimeForDynamicPropertyChange;
- (void)_resumeBookkeepingTimer;
- (void)_resumeTickTimer;
- (BOOL)_itemIsRestricted:(id)arg1;
- (void)_pauseBookkeepingTimer;
- (void)_pauseTickTimer;
- (void)_pausePlaybackIfNecessary;
- (void)_firstVideoFrameDisplayed:(id)arg1;
- (void)_durationDidChange:(id)arg1;
- (void)_tracksDidChange:(id)arg1;
- (void)_timedMetadataAvailable:(id)arg1;
- (void)_itemReadyToPlay:(id)arg1;
- (void)_sizeDidChange:(id)arg1;
- (void)_streamUnlikelyToKeepUp:(id)arg1;
- (void)_streamLikelyToKeepUp:(id)arg1;
- (void)_streamBufferFull:(id)arg1;
- (void)_streamRanDry:(id)arg1;
- (void)_serverConnectionDidDie:(id)arg1;
- (void)_isExternalPlaybackActiveDidChange:(id)arg1;
- (void)_itemDidChange:(id)arg1;
- (void)_itemWillChange:(id)arg1;
- (id)_extractImageFromMetadata:(id)arg1;
- (void)_checkForBoundaryTimeCrossing;
- (void)_postMPAVControllerSizeDidChangeNotificationWithItem:(id)arg1;
- (void)routingControllerAvailableRoutesDidChange:(id)arg1;
- (void)_clearLastSetTimeIfPlayerTimeIsValid;
- (void)_updateCurrentItemBookkeepingMarkedAsCheckpoint:(BOOL)arg1;
- (void)skipToSeekableEnd;
- (void)_prepareToPlayItem:(id)arg1;
- (void)_delayedUpdateTimeMarker;
- (void)_postMPAVControllerItemReadyToPlayNotificationWithItem:(id)arg1;
- (BOOL)canPlayFastReverse;
- (void)_setBufferingState:(unsigned int)arg1;
- (void)_setValid:(BOOL)arg1;
- (void)_verifyDisplayProtection;
- (void)_delayedUpdateScanningRate;
- (void)airPlayVideoEnded;
- (void)_itemFailedToPlayToEnd:(id)arg1;
- (BOOL)_isChangingQueueContents;
- (void)_reloadTimeMarkerObservationsForItem:(id)arg1;
- (void)_registerForAVItemNotifications:(id)arg1;
- (void)_pausePlaybackIfNecessaryIgnoringVideoLayerAttachment:(BOOL)arg1;
- (void)_playbackFailedWithError:(id)arg1 canResolve:(BOOL)arg2;
- (void)_setItemErrorResolver:(id)arg1;
- (double)currentTimeForBookmarking;
- (void)_resetQueue:(BOOL)arg1 useVideoLayer:(BOOL)arg2;
@property(nonatomic) int feederMode; // @synthesize feederMode=_feederMode;
- (id)_pickedRoute;
- (void)_clearSeekingIntervalsForStreaming;
@property(copy, nonatomic) NSString *externalPlaybackVideoGravity;
- (void)_clearVideoLayer;
- (void)_setVideoLayerAttachedToPlayer:(BOOL)arg1 force:(BOOL)arg2 pauseIfNecessary:(BOOL)arg3;
- (void)finalizeBookkeepingNow;
- (void)setClient:(id)arg1 wantsToAllowAirPlayVideo:(BOOL)arg2;
- (void)_applyAirPlayMusicMode;
- (void)ensureHasAVPlaylistManager;
- (void)_setActionAtEndAttributeForState:(unsigned int)arg1;
- (void)applyShuffleSettings;
- (void)applyRepeatSettings;
- (BOOL)_setRate:(float)arg1 forScanning:(BOOL)arg2;
@property(readonly, nonatomic) unsigned int _displayPlaybackState;
- (BOOL)_showsPlayingWhenInState:(unsigned int)arg1;
- (void)endTickTimer;
- (void)_addObserverInfo:(id)arg1 forCoreMediaObserver:(id)arg2 forInitialCreation:(BOOL)arg3;
- (void)_attemptAutoPlay;
- (void)playChapterTimeMarkerAtIndex:(unsigned int)arg1 withOptions:(long long)arg2;
- (void)playItemAtIndex:(unsigned int)arg1 withOptions:(long long)arg2;
- (void)playItemAtIndex:(unsigned int)arg1 forceRestart:(BOOL)arg2;
- (void)_rateDidChange:(id)arg1;
- (BOOL)_canPlayItem:(id)arg1;
- (BOOL)_hasEnoughDataToPlay;
- (void)_delayedSetCurrentTime;
- (void)playWithOptions:(long long)arg1;
- (void)pauseWithFadeout:(float)arg1;
- (void)_disconnectAVPlaylistManagerWithReason:(int)arg1;
- (void)_setAVControllerQueueFeeder:(id)arg1 startQueueIndex:(unsigned int)arg2;
- (void)_switchToFeeder:(id)arg1 mode:(int)arg2 index:(unsigned int)arg3 play:(BOOL)arg4 configureFeederBlock:(CDUnknownBlockType)arg5;
- (void)_endSeekAndChangeRate:(BOOL)arg1;
- (unsigned int)_playbackIndexForDelta:(int)arg1 fromIndex:(unsigned int)arg2 ignoreElapsedTime:(BOOL)arg3;
- (BOOL)_changeChapterTimeMarkerIndexBy:(int)arg1;
- (void)_delayedPlaybackIndexChange;
- (BOOL)changePlaybackIndexBy:(int)arg1 deltaType:(int)arg2 ignoreElapsedTime:(BOOL)arg3 allowSkippingUnskippableContent:(BOOL)arg4 error:(id *)arg5;
- (void)changePlaybackIndexBy:(int)arg1 deltaType:(int)arg2 ignoreElapsedTime:(BOOL)arg3 allowSkippingUnskippableContent:(BOOL)arg4;
- (void)setPlaybackIndex:(int)arg1 selectionDirection:(int)arg2;
- (void)updateBookkeepingNow;
- (void)_updateCurrentTimeToNextStartTimeForQueueFeeder:(id)arg1 withItemIndex:(int)arg2;
- (id)_avPlaylistManager;
- (void)_setLastSetTime:(double)arg1;
- (void)_updateScanningRate;
@property(readonly, nonatomic) AVAudioSessionMediaPlayerOnly *_playerAVAudioSession;
@property(readonly, nonatomic) BOOL currentItemIsRental;
- (void)_unregisterForAVPlaylistManagerObservation:(id)arg1;
- (void)_unregisterForAVItemNotifications:(id)arg1;
- (void)_cancelUpdateCurrentItemBookkeepingTimer;
- (void)_cancelStallTimer;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_applicationSuspended:(id)arg1;
- (void)_applicationSuspendedEventsOnly:(id)arg1;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)_mediaLibraryDynamicPropertiesDidChangeNotification:(id)arg1;
- (void)_itemTimeMarkersAvailableNotification:(id)arg1;
- (void)_resetInternalState;
@property(readonly, nonatomic) unsigned int activeShuffleType;
@property(nonatomic) unsigned int shuffleType;
@property(nonatomic) unsigned int repeatType;
- (void)ensureFeederIsClass:(Class)arg1;
- (void)contentInvalidated;
- (void)contentInvalidatedWithCurrentItemMovedToIndex:(unsigned int)arg1;
- (void)contentsDidChangeByRemovingRange:(struct _NSRange)arg1;
- (void)reloadFeederWithStartQueueIndex:(unsigned int)arg1;
- (void)feederChangedContents:(id)arg1;
- (void)setAutoclearingDisplayOverridePlaybackState:(unsigned int)arg1;
- (void)notifyAVPlayerItemDidChange:(id)arg1;
- (void)notifyAVPlayerItemWillChange:(id)arg1;
@property(readonly, nonatomic) BOOL isCurrentItemReady;
- (void)_volumeDidChangeNotification:(id)arg1;
- (void)enableAutoplayForCurrentItem;
- (void)togglePlaybackWithOptions:(long long)arg1;
@property(readonly, nonatomic) MPAVRoutingController *routingController; // @synthesize routingController=_routingController;
- (void)disableAutoplayForCurrentItem;
@property(readonly, nonatomic) BOOL muted;
@property(nonatomic) BOOL stopAtEnd;
@property(readonly, nonatomic) double playableDurationOfCurrentItemIfAvailable;
@property(readonly, nonatomic) double durationOfCurrentItemIfAvailable;
- (BOOL)isLiveStreaming;
@property(nonatomic) BOOL closedCaptioningEnabled;
- (void)_setVideoViewClass:(Class)arg1;
@property(nonatomic) BOOL useApplicationAudioSession;
- (void)endUsingVideoLayer;
- (void)switchToFeeder:(id)arg1 mode:(int)arg2 index:(unsigned int)arg3 play:(BOOL)arg4;
- (void)setPlaybackIndex:(int)arg1;
@property(nonatomic) BOOL shouldEnforceHDCP; // @synthesize shouldEnforceHDCP=_shouldEnforceHDCP;
@property(nonatomic) BOOL disallowsAMRAudio;
@property(retain, nonatomic) NSString *audioSessionModeOverride; // @synthesize audioSessionModeOverride=_audioSessionModeOverride;
- (double)timeOfSeekableStart;
- (double)timeOfSeekableEnd;
- (double)timeOfPlayableStart;
- (double)timeOfPlayableEnd;
- (void)setCurrentTime:(double)arg1 options:(int)arg2;
@property(readonly, nonatomic) MPVideoView *videoView;
- (void)changePlaybackIndexBy:(int)arg1;
@property(readonly, nonatomic) MPQueueFeeder *feeder; // @synthesize feeder=_feeder;
- (void)beginUsingVideoLayer;
@property(nonatomic) int playbackMode;
- (void)changePlaybackIndexBy:(int)arg1 deltaType:(int)arg2 ignoreElapsedTime:(BOOL)arg3;
- (void)changePlaybackIndexBy:(int)arg1 deltaType:(int)arg2;
- (void)endSeek;
- (void)beginSeek:(int)arg1;
- (void)endPlayback;
@property(readonly, nonatomic) MPQueuePlayer *avPlayer;
@property(readonly, nonatomic) unsigned int bufferingState; // @synthesize bufferingState=_bufferingState;
- (void)_itemPlaybackDidEndNotification:(id)arg1;
- (void)play;
@property(readonly, nonatomic) BOOL showPlaybackStateOverlaysOnTVOut;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

