//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AVAsset, AVPlayerItem, AVPlayerItemAccessLog, MPAVController, MPAlternateTextTrack, MPAlternateTracks, MPMediaItem, MPQueueFeeder, NSArray, NSObject<OS_dispatch_queue>, NSString, NSURL;

@interface MPAVItem : NSObject
{
    AVAsset *_asset;
    NSObject<OS_dispatch_queue> *_assetQueue;
    AVPlayerItem *_avPlayerItem;
    BOOL _isAssetLoaded;
    MPQueueFeeder *_feeder;
    MPAVController *_player;
    float _soundCheckVolumeNormalization;
    NSArray *_chapterTimeMarkers;
    NSArray *_artworkTimeMarkers;
    NSArray *_urlTimeMarkers;
    NSArray *_closedCaptionTimeMarkers;
    MPAlternateTracks *_alternateTracks;
    double _cachedDuration;
    double _cachedPlayableDuration;
    NSArray *_cachedSeekableTimeRanges;
    double _seekableTimeRangesCacheTime;
    unsigned int _type;
    float _defaultPlaybackRate;
    unsigned int _indexInQueueFeeder;
    unsigned int _advancedDuringPlayback:1;
    unsigned int _handledFinishTime:1;
    unsigned int _hasPlayedThisSession:1;
    unsigned int _wasCountedAsSkipped:1;
    unsigned int _isStreamable:2;
    unsigned int _watchingAttributes:1;
    unsigned int _userChangedItemsDuringPlayback:1;
    unsigned int _lyricsAvailable:1;
    unsigned int _timeMarkersNeedLoading:1;
    BOOL _hasPostedNaturalSizeChange;
    BOOL _hasValidPlayerItemDuration;
    BOOL _limitReadAhead;
    CDStruct_1b6d18a9 _playerItemDuration;
    BOOL _didAttemptToLoadAsset;
    NSArray *_buyOffers;
    NSString *_copyrightText;
    MPMediaItem *_mediaItem;
    float _loudnessInfoVolumeNormalization;
    long long _albumStoreID;
    long long _storeID;
}

+ (void)applyVolumeNormalizationForQueuedItems:(id)arg1;
+ (void)setDefaultScaleMode:(unsigned int)arg1;
+ (unsigned int)defaultScaleMode;
+ (id)URLFromPath:(id)arg1;
@property(nonatomic) __weak MPAVController *player; // @synthesize player=_player;
@property(readonly, nonatomic) AVPlayerItemAccessLog *accessLog;
- (id)initWithURL:(id)arg1 options:(id)arg2;
@property(readonly, nonatomic) NSString *album;
@property(readonly, nonatomic) long long storeID; // @synthesize storeID=_storeID;
@property(readonly, retain, nonatomic) MPMediaItem *mediaItem; // @synthesize mediaItem=_mediaItem;
@property(readonly, nonatomic) unsigned long long persistentID;
@property(readonly, nonatomic) NSString *lyrics;
@property(readonly, nonatomic) float userRating;
@property(readonly, nonatomic) unsigned int discNumber;
@property(readonly, nonatomic) NSString *genre;
@property(readonly, nonatomic) NSString *composer;
@property(readonly, nonatomic) NSString *artist;
@property(readonly, nonatomic) struct CGSize presentationSize;
@property(readonly, nonatomic) int status;
@property(readonly, nonatomic) struct CGSize naturalSize;
- (void)_applicationDidBecomeActive:(id)arg1;
@property(readonly, nonatomic) AVAsset *asset;
- (void).cxx_destruct;
- (id)initWithAsset:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)initWithURL:(id)arg1;
- (id)path;
@property(readonly, nonatomic) unsigned int type;
- (id)url;
@property(readonly, nonatomic) CDStruct_1b6d18a9 duration;
- (id)init;
- (void)dealloc;
- (void)MPSPWD_prioritizeDownloadSession;
@property(readonly, nonatomic) BOOL isStreamingQuality;
- (id)artworkCatalogForPlaybackTime:(double)arg1;
@property(nonatomic) float loudnessInfoVolumeNormalization; // @synthesize loudnessInfoVolumeNormalization=_loudnessInfoVolumeNormalization;
@property(readonly, copy, nonatomic) NSString *copyrightText; // @synthesize copyrightText=_copyrightText;
@property(readonly, copy, nonatomic) NSArray *buyOffers; // @synthesize buyOffers=_buyOffers;
@property(readonly, nonatomic) long long albumStoreID; // @synthesize albumStoreID=_albumStoreID;
@property(readonly, nonatomic) BOOL didAttemptToLoadAsset; // @synthesize didAttemptToLoadAsset=_didAttemptToLoadAsset;
@property(nonatomic) float soundCheckVolumeNormalization; // @synthesize soundCheckVolumeNormalization=_soundCheckVolumeNormalization;
@property(nonatomic) unsigned int indexInQueueFeeder; // @synthesize indexInQueueFeeder=_indexInQueueFeeder;
@property(nonatomic) __weak MPQueueFeeder *feeder; // @synthesize feeder=_feeder;
- (void)replacePlayerItemWithPlayerItem:(id)arg1;
- (void)reevaluateType;
- (id)localeForAssetTrack:(id)arg1;
- (void)setupPlaybackInfo;
- (void)setupEQPresetWithDefaultPreset:(int)arg1;
- (id)aggregateDictionaryItemIdentifier;
- (void)_clearAsset;
- (CDUnknownBlockType)blockForDirectAVControllerNotificationReferencingItem:(id)arg1;
- (void)_captionAppearanceSettingsChanged;
- (CDStruct_1b6d18a9)_playerItemDurationIfAvailable;
@property(readonly, nonatomic) double playableDurationIfAvailable;
@property(readonly, nonatomic) double durationIfAvailable;
@property(readonly, nonatomic) BOOL durationIsValid;
@property(readonly, nonatomic) NSString *localizedPositionInPlaylistString;
- (id)localizedAttributedPositionInPlaylistStringWithRegularTextAttributes:(id)arg1 emphasizedTextAttributes:(id)arg2;
- (id)closedCaptionTimeMarkerForTime:(double)arg1;
- (id)urlTimeMarkerForTime:(double)arg1;
- (id)artworkTimeMarkerForTime:(double)arg1;
- (id)chapterTimeMarkerForTime:(double)arg1;
@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;
- (id)titlesForTime:(double)arg1;
@property(readonly, nonatomic) NSArray *timedMetadataIfAvailable;
- (void)_realoadEmbeddedTimeMarkers;
@property(readonly, nonatomic) BOOL supportsSettingCurrentTime;
@property(readonly, nonatomic) BOOL supportsSkip;
@property(readonly, nonatomic) BOOL supportsRewindAndFastForward15Seconds;
@property(nonatomic) BOOL hasPlayedThisSession;
- (float)scanIntervalForLevel:(unsigned int)arg1 paused:(BOOL)arg2;
- (void)replaceOutOfBandAlternateTextTracksWithArray:(id)arg1;
- (float)playbackRateForLevel:(unsigned int)arg1 direction:(int)arg2 paused:(BOOL)arg3;
@property(readonly, nonatomic) NSURL *podcastURL;
@property(readonly, nonatomic) NSString *mainTitle;
@property(readonly, nonatomic, getter=isStreamable) BOOL streamable;
@property(readonly, nonatomic) BOOL isAlwaysLive;
@property(readonly, nonatomic) BOOL isAd;
- (id)inBandAlternateTextTracks;
- (BOOL)hasDataForItemArtwork;
- (unsigned int)alternatesCountForTypes:(unsigned int)arg1;
- (BOOL)hasAlternatesForTypes:(unsigned int)arg1;
@property(readonly, nonatomic) BOOL displayableTextLoaded;
@property(readonly, nonatomic) double currentTimeDisplayOverride;
@property(readonly, nonatomic, getter=isExplicitTrack) BOOL explicitTrack;
- (BOOL)isAssetURLValid;
- (BOOL)isValidPlayerSubstituteForItem:(id)arg1;
@property(readonly, nonatomic) BOOL isCloudItem;
@property(readonly, nonatomic) unsigned int discCount;
@property(readonly, nonatomic) BOOL canSeedGenius;
@property(readonly, nonatomic) unsigned int albumTrackCount;
@property(readonly, nonatomic) unsigned int albumTrackNumber;
@property(readonly, nonatomic) NSString *albumArtist;
- (double)durationInSeconds;
@property(nonatomic) BOOL userChangedItemsDuringPlayback;
- (BOOL)userSkippedPlayback;
@property(nonatomic) BOOL userAdvancedDuringPlayback;
- (void)setUserSkippedPlayback:(BOOL)arg1;
- (void)setSubtitleTrackID:(int)arg1;
- (int)subtitleTrackID;
- (void)setRating:(float)arg1;
- (void)setPlaybackFinishedTime:(double)arg1;
@property(nonatomic) double playbackCheckpointCurrentTime;
- (void)notePlaybackFinishedByHittingEnd;
- (void)setPlaybackStoppedTime:(double)arg1;
- (void)resetBookkeeping;
- (void)flushNowPlayingCaches;
- (BOOL)isSupportedDefaultPlaybackSpeed:(unsigned int)arg1;
- (id)_imageChapterTrackIDsForAsset:(id)arg1;
- (void)_itemAttributeAvailableKey:(id)arg1;
@property(readonly, nonatomic) BOOL allowsEQ;
@property(readonly, nonatomic) int customAVEQPreset;
@property(readonly, nonatomic) BOOL hasDisplayableText;
- (double)_playableDurationForLoadedTimeRanges:(id)arg1;
- (double)_durationFromExternalMetadataIfAvailable;
- (id)_seekableTimeRanges;
@property(readonly, nonatomic) double durationFromExternalMetadata;
@property(readonly, nonatomic) unsigned int countForQueueFeeder;
@property(retain, nonatomic) NSArray *urlTimeMarkers; // @synthesize urlTimeMarkers=_urlTimeMarkers;
@property(retain, nonatomic) NSArray *artworkTimeMarkers; // @synthesize artworkTimeMarkers=_artworkTimeMarkers;
- (id)_timeMarkerFromMarkers:(id)arg1 forTime:(double)arg2;
@property(retain, nonatomic) NSArray *chapterTimeMarkers; // @synthesize chapterTimeMarkers=_chapterTimeMarkers;
- (void)_loadTimeMarkersAsync;
- (void)_loadTimeMarkersBlocking;
@property(readonly, nonatomic) BOOL useEmbeddedChapterData;
@property(nonatomic) CDStruct_1b6d18a9 forwardPlaybackEndTime;
@property(nonatomic) float defaultPlaybackRate; // @synthesize defaultPlaybackRate=_defaultPlaybackRate;
@property(readonly, nonatomic) NSString *displayableText;
- (double)_durationInSeconds;
- (void)_checkAllowsBlockingDurationCall;
- (void)_playerItemNewAccessLogEntryNotification:(id)arg1;
- (void)_loadAssetAndPlayerItem;
- (void)_updateSoundCheckVolumeNormalizationForPlayerItem;
@property BOOL isAssetLoaded; // @synthesize isAssetLoaded=_isAssetLoaded;
- (void)loadAssetAndPlayerItem;
- (void)_releaseAllTimeMarkers;
- (void)_loadAssetProperties;
@property(copy, nonatomic) NSString *videoID;
- (void)setOverrideDuration:(double)arg1;
@property(retain, nonatomic) MPAlternateTextTrack *selectedAlternateTextTrack;
- (void)setAlternateAudioTrackID:(int)arg1;
- (void)setLimitReadAhead:(BOOL)arg1;
- (BOOL)limitReadAhead;
@property(readonly, nonatomic) MPAlternateTracks *alternateTracks; // @synthesize alternateTracks=_alternateTracks;
@property(readonly, nonatomic) double timeOfSeekableStart;
@property(readonly, nonatomic) double timeOfSeekableEnd;
@property(readonly, nonatomic) AVPlayerItem *playerItem;
- (id)initWithPlayerItem:(id)arg1;
@property(readonly, nonatomic) double playableDuration;
- (void)setPlayerItem:(id)arg1;

@end

