//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"
#import "NSSecureCoding.h"

@class SCNNode, SCNPhysicsShape;

@interface SCNPhysicsBody : NSObject <NSCopying, NSSecureCoding>
{
    id _reserved;
    SCNNode *_node;
    float _mass;
    float _charge;
    float _friction;
    float _restitution;
    float _rollingFriction;
    SCNPhysicsShape *_physicsShape;
    int _type;
    float _damping;
    struct SCNVector4 _angularVelocity;
    float _angularDamping;
    struct SCNVector3 _velocityFactor;
    struct SCNVector3 _angularVelocityFactor;
    struct SCNVector3 _velocity;
    unsigned int _categoryBitMask;
    unsigned int _collisionBitMask;
    BOOL _resting;
    BOOL _allowsResting;
    BOOL _isDefaultShape;
    struct btRigidBody *_body;
}

+ (BOOL)supportsSecureCoding;
+ (id)kinematicBody;
+ (id)dynamicBody;
+ (id)staticBody;
+ (id)bodyWithType:(int)arg1 shape:(id)arg2;
+ (id)SCNJSExportProtocol;
@property(readonly, nonatomic) BOOL isResting;
@property(nonatomic) unsigned int categoryBitMask;
@property(nonatomic) unsigned int collisionBitMask;
- (void)resetTransform;
- (id).cxx_construct;
@property(nonatomic) float mass;
@property(nonatomic) float angularDamping;
@property(nonatomic) float restitution;
@property(nonatomic) struct SCNVector4 angularVelocity;
@property(nonatomic) struct SCNVector3 velocity;
@property(nonatomic) float friction;
@property(nonatomic) float damping;
@property(nonatomic) float charge;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(nonatomic) int type;
- (id)copy;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)rotateToAxisAngle:(struct SCNVector4)arg1;
- (void)moveToPosition:(struct SCNVector3)arg1;
- (void)resetToTransform:(struct SCNMatrix4)arg1;
- (void)_activate;
- (void)_didDecodeSCNPhysicsBody:(id)arg1;
@property(nonatomic) struct SCNVector3 angularVelocityFactor;
@property(nonatomic) struct SCNVector3 velocityFactor;
@property(nonatomic) BOOL allowsResting;
@property(retain, nonatomic) SCNPhysicsShape *physicsShape;
@property(nonatomic) float rollingFriction;
- (void)clearAllForces;
- (void)applyTorque:(struct SCNVector4)arg1 impulse:(BOOL)arg2;
- (void)applyForce:(struct SCNVector3)arg1 atPosition:(struct SCNVector3)arg2 impulse:(BOOL)arg3;
- (void)applyForce:(struct SCNVector3)arg1 impulse:(BOOL)arg2;
- (void)moveToTransform:(struct SCNMatrix4)arg1;
- (id)initWithType:(int)arg1 shape:(id)arg2;
- (struct btRigidBody *)_createBody;
- (struct __C3DScene *)sceneRef;
- (struct btRigidBody *)_handle;
- (id)_owner;
- (void)_setOwner:(id)arg1;
- (void)_removeOwner;

@end

