//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Metal/MTLToolsRenderCommandEncoder.h>

@class MTLDebugFunctionArgument, MTLDepthStencilDescriptor, MTLRenderPassDescriptor;

@interface MTLDebugRenderCommandEncoder : MTLToolsRenderCommandEncoder
{
    MTLDebugFunctionArgument *_vertexBuffers[31];
    MTLDebugFunctionArgument *_vertexTextures[31];
    MTLDebugFunctionArgument *_vertexSamplers[16];
    MTLDebugFunctionArgument *_fragmentBuffers[31];
    MTLDebugFunctionArgument *_fragmentTextures[31];
    MTLDebugFunctionArgument *_fragmentSamplers[16];
    unsigned int _encoderState;
    id <MTLDevice> _cachedDevice;
    MTLRenderPassDescriptor *_descriptor;
    unsigned int _frontFacingWinding;
    unsigned int _cullMode;
    float _lineWidth;
    float _depthBias;
    float _depthBiasSlopeScale;
    float _depthBiasClamp;
    unsigned int _triangleFillMode;
    id <MTLRenderPipelineState> _renderPipelineState;
    id <MTLDepthStencilState> _depthStencilState;
    MTLDepthStencilDescriptor *_defaultDepthStencilDescriptor;
    unsigned int _stencilRef;
    unsigned int _visibilityResultMode;
    unsigned int _visibilityResultOffset;
    float _blendColorRed;
    float _blendColorGreen;
    float _blendColorBlue;
    float _blendColorAlpha;
    unsigned int _width;
    unsigned int _height;
    CDStruct_0a4f9365 _scissorRect;
    CDStruct_4b2885c7 _viewport;
}

@property(readonly, nonatomic) CDStruct_4b2885c7 viewport; // @synthesize viewport=_viewport;
@property(readonly, copy, nonatomic) MTLRenderPassDescriptor *descriptor; // @synthesize descriptor=_descriptor;
- (void).cxx_destruct;
- (id).cxx_construct;
@property(readonly) unsigned int height; // @synthesize height=_height;
@property(readonly) unsigned int width; // @synthesize width=_width;
- (void)setLineWidth:(float)arg1;
@property(readonly, nonatomic) float lineWidth; // @synthesize lineWidth=_lineWidth;
- (id)description;
- (void)dealloc;
- (void)setCullMode:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned int cullMode; // @synthesize cullMode=_cullMode;
@property(readonly, nonatomic) float blendColorAlpha; // @synthesize blendColorAlpha=_blendColorAlpha;
@property(readonly, nonatomic) float blendColorBlue; // @synthesize blendColorBlue=_blendColorBlue;
@property(readonly, nonatomic) float blendColorGreen; // @synthesize blendColorGreen=_blendColorGreen;
@property(readonly, nonatomic) float blendColorRed; // @synthesize blendColorRed=_blendColorRed;
@property(readonly, nonatomic) unsigned int visibilityResultOffset; // @synthesize visibilityResultOffset=_visibilityResultOffset;
@property(readonly, nonatomic) unsigned int visibilityResultMode; // @synthesize visibilityResultMode=_visibilityResultMode;
@property(readonly, nonatomic) unsigned int stencilRef; // @synthesize stencilRef=_stencilRef;
@property(readonly, nonatomic) MTLDepthStencilDescriptor *defaultDepthStencilDescriptor; // @synthesize defaultDepthStencilDescriptor=_defaultDepthStencilDescriptor;
@property(readonly, nonatomic) id <MTLDepthStencilState> depthStencilState; // @synthesize depthStencilState=_depthStencilState;
@property(readonly, nonatomic) id <MTLRenderPipelineState> renderPipelineState; // @synthesize renderPipelineState=_renderPipelineState;
@property(readonly, nonatomic) unsigned int triangleFillMode; // @synthesize triangleFillMode=_triangleFillMode;
@property(readonly, nonatomic) CDStruct_0a4f9365 scissorRect; // @synthesize scissorRect=_scissorRect;
@property(readonly, nonatomic) float depthBiasClamp; // @synthesize depthBiasClamp=_depthBiasClamp;
@property(readonly, nonatomic) float depthBiasSlopeScale; // @synthesize depthBiasSlopeScale=_depthBiasSlopeScale;
@property(readonly, nonatomic) float depthBias; // @synthesize depthBias=_depthBias;
@property(readonly, nonatomic) unsigned int frontFacingWinding; // @synthesize frontFacingWinding=_frontFacingWinding;
@property(readonly, nonatomic) id <MTLDevice> cachedDevice; // @synthesize cachedDevice=_cachedDevice;
- (id)initWithRenderCommandEncoder:(id)arg1 parent:(id)arg2 descriptor:(id)arg3;
- (void)enumerateFragmentSamplersUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateFragmentTexturesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateFragmentBuffersUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateVertexSamplersUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateVertexTexturesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateVertexBuffersUsingBlock:(CDUnknownBlockType)arg1;
- (void)_validateAllFunctionArguments;
- (void)validateCommonDrawErrors:(unsigned int)arg1 instanceCount:(unsigned int)arg2 maxVertexID:(unsigned int)arg3;
- (void)validateFramebufferWithRenderPipelineState:(id)arg1;
- (void)_setDefaults;
- (void)endEncoding;
- (void)drawIndexedPrimitives:(unsigned int)arg1 indexCount:(unsigned int)arg2 indexType:(unsigned int)arg3 indexBuffer:(id)arg4 indexBufferOffset:(unsigned int)arg5;
- (void)drawIndexedPrimitives:(unsigned int)arg1 indexCount:(unsigned int)arg2 indexType:(unsigned int)arg3 indexBuffer:(id)arg4 indexBufferOffset:(unsigned int)arg5 instanceCount:(unsigned int)arg6;
- (void)drawPrimitives:(unsigned int)arg1 vertexStart:(unsigned int)arg2 vertexCount:(unsigned int)arg3;
- (void)drawPrimitives:(unsigned int)arg1 vertexStart:(unsigned int)arg2 vertexCount:(unsigned int)arg3 instanceCount:(unsigned int)arg4;
- (void)setVisibilityResultMode:(unsigned int)arg1 offset:(unsigned int)arg2;
- (void)setStencilReferenceValue:(unsigned int)arg1;
- (void)setDepthStencilState:(id)arg1;
- (void)setFragmentSamplerStates:(const id *)arg1 lodMinClamps:(const float *)arg2 lodMaxClamps:(const float *)arg3 withRange:(struct _NSRange)arg4;
- (void)setFragmentSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 atIndex:(unsigned int)arg4;
- (void)setFragmentSamplerStates:(const id *)arg1 withRange:(struct _NSRange)arg2;
- (void)setFragmentSamplerState:(id)arg1 atIndex:(unsigned int)arg2;
- (void)setFragmentTextures:(const id *)arg1 withRange:(struct _NSRange)arg2;
- (void)setFragmentTexture:(id)arg1 atIndex:(unsigned int)arg2;
- (void)setFragmentBuffers:(const id *)arg1 offsets:(const unsigned int *)arg2 withRange:(struct _NSRange)arg3;
- (void)setFragmentBuffer:(id)arg1 offset:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (void)setTriangleFillMode:(unsigned int)arg1;
- (void)setScissorRect:(CDStruct_0a4f9365)arg1;
- (void)setDepthBias:(float)arg1 slopeScale:(float)arg2 clamp:(float)arg3;
- (void)setFrontFacingWinding:(unsigned int)arg1;
- (void)setVertexSamplerStates:(const id *)arg1 lodMinClamps:(const float *)arg2 lodMaxClamps:(const float *)arg3 withRange:(struct _NSRange)arg4;
- (void)setVertexSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 atIndex:(unsigned int)arg4;
- (void)setVertexSamplerStates:(const id *)arg1 withRange:(struct _NSRange)arg2;
- (void)setVertexSamplerState:(id)arg1 atIndex:(unsigned int)arg2;
- (void)setVertexTextures:(const id *)arg1 withRange:(struct _NSRange)arg2;
- (void)setVertexTexture:(id)arg1 atIndex:(unsigned int)arg2;
- (void)setVertexBuffers:(const id *)arg1 offsets:(const unsigned int *)arg2 withRange:(struct _NSRange)arg3;
- (void)setVertexBuffer:(id)arg1 offset:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (void)setRenderPipelineState:(id)arg1;
- (void)setBlendColorRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (void)setViewport:(CDStruct_4b2885c7)arg1;

@end

