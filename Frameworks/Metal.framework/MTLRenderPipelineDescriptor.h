//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"

@class MTLRenderPipelineColorAttachmentDescriptorArray, MTLVertexDescriptor, NSString;

@interface MTLRenderPipelineDescriptor : NSObject <NSCopying>
{
    struct MTLRenderPipelineDescriptorPrivate _private;
}

- (id).cxx_construct;
- (void)reset;
@property(copy, nonatomic) NSString *label;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)validate;
@property(nonatomic) unsigned int sampleCount;
- (id)description;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)init;
- (void)dealloc;
- (id)serializeFragmentData;
- (void)validateWithDevice:(id)arg1;
@property(nonatomic) unsigned int stencilAttachmentPixelFormat;
@property(nonatomic) unsigned int depthAttachmentPixelFormat;
@property(copy, nonatomic) MTLVertexDescriptor *vertexDescriptor;
- (id)fastBlendDescriptorAtIndex:(unsigned int)arg1;
@property(nonatomic, getter=isRasterizationEnabled) BOOL rasterizationEnabled;
@property(nonatomic, getter=isAlphaToOneEnabled) BOOL alphaToOneEnabled;
@property(nonatomic, getter=isAlphaToCoverageEnabled) BOOL alphaToCoverageEnabled;
- (void)setSampleCoverage:(float)arg1;
- (float)sampleCoverage;
- (void)setSampleMask:(unsigned int)arg1;
- (unsigned int)sampleMask;
@property(retain, nonatomic) id <MTLFunction> fragmentFunction;
@property(retain, nonatomic) id <MTLFunction> vertexFunction;
- (const struct MTLRenderPipelineDescriptorPrivate *)_descriptorPrivate;
@property(readonly) MTLRenderPipelineColorAttachmentDescriptorArray *colorAttachments;

@end

